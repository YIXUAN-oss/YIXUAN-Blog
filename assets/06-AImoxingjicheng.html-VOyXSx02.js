import{_ as o,c,d as i,e as s,f as a,b as p,w as u,r as e,o as r}from"./app-DeqJ5waz.js";const k={},d={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/mindspore-lite-guidelines-0000001774121034-V5",target:"_blank",rel:"noopener noreferrer"};function v(m,n){const t=e("ExternalLinkIcon"),l=e("RouteLink");return r(),c("div",null,[n[4]||(n[4]=i(`<h1 id="ai-模型集成" tabindex="-1"><a class="header-anchor" href="#ai-模型集成"><span>AI 模型集成</span></a></h1><blockquote><p>自定义 AI 模型部署</p></blockquote><h2 id="🔄-模型格式转换" tabindex="-1"><a class="header-anchor" href="#🔄-模型格式转换"><span>🔄 模型格式转换</span></a></h2><h3 id="mindspore-模型" tabindex="-1"><a class="header-anchor" href="#mindspore-模型"><span>MindSpore 模型</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// MindSpore Lite 模型可直接使用</span></span>
<span class="line"><span class="token keyword">const</span> model <span class="token operator">=</span> <span class="token keyword">await</span> aiEngine<span class="token punctuation">.</span><span class="token function">loadModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  modelPath<span class="token operator">:</span> <span class="token string">&#39;/data/storage/el2/base/files/model.ms&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  modelType<span class="token operator">:</span> <span class="token string">&#39;MindSpore&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onnx-模型转换" tabindex="-1"><a class="header-anchor" href="#onnx-模型转换"><span>ONNX 模型转换</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用转换工具</span></span>
<span class="line">converter_lite <span class="token parameter variable">--fmk</span><span class="token operator">=</span>ONNX <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--modelFile</span><span class="token operator">=</span>model.onnx <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--outputFile</span><span class="token operator">=</span>model.ms <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--optimize</span><span class="token operator">=</span>general</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tensorflow-模型转换" tabindex="-1"><a class="header-anchor" href="#tensorflow-模型转换"><span>TensorFlow 模型转换</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">converter_lite <span class="token parameter variable">--fmk</span><span class="token operator">=</span>TFLITE <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--modelFile</span><span class="token operator">=</span>model.tflite <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--outputFile</span><span class="token operator">=</span>model.ms <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--optimize</span><span class="token operator">=</span>general</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📦-模型部署" tabindex="-1"><a class="header-anchor" href="#📦-模型部署"><span>📦 模型部署</span></a></h2><h3 id="本地模型加载" tabindex="-1"><a class="header-anchor" href="#本地模型加载"><span>本地模型加载</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> modelManager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos.ai.model&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">LocalModelManager</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> model<span class="token operator">:</span> Model</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">loadModel</span><span class="token punctuation">(</span>modelName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> modelPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/data/storage/el2/base/files/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>modelName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.ms</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> <span class="token keyword">await</span> modelManager<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      path<span class="token operator">:</span> modelPath<span class="token punctuation">,</span></span>
<span class="line">      enableNPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      precision<span class="token operator">:</span> <span class="token string">&#39;FP16&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">predict</span><span class="token punctuation">(</span>input<span class="token operator">:</span> ArrayBuffer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">infer</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseOutput</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">parseOutput</span><span class="token punctuation">(</span>output<span class="token operator">:</span> ArrayBuffer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 解析输出数据</span></span>
<span class="line">    <span class="token keyword">return</span> output</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动态模型更新" tabindex="-1"><a class="header-anchor" href="#动态模型更新"><span>动态模型更新</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ModelUpdater</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">checkUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/model/version&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> serverVersion <span class="token operator">=</span> response<span class="token punctuation">.</span>version</span>
<span class="line">    <span class="token keyword">const</span> localVersion <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLocalVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> serverVersion <span class="token operator">&gt;</span> localVersion</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">downloadModel</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> savePath <span class="token operator">=</span> <span class="token string">&#39;/data/storage/el2/base/files/new_model.ms&#39;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">downloadFile</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> savePath<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function-variable function">onProgress</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">下载进度: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>progress<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> savePath</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">updateModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://cdn.example.com/models/latest.ms&#39;</span></span>
<span class="line">      <span class="token keyword">const</span> modelPath <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">downloadModel</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 加载新模型</span></span>
<span class="line">      <span class="token keyword">await</span> modelManager<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> modelPath <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 更新版本号</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="⚡-模型优化" tabindex="-1"><a class="header-anchor" href="#⚡-模型优化"><span>⚡ 模型优化</span></a></h2><h3 id="量化优化" tabindex="-1"><a class="header-anchor" href="#量化优化"><span>量化优化</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 使用 FP16 半精度</span></span>
<span class="line"><span class="token keyword">const</span> model <span class="token operator">=</span> <span class="token keyword">await</span> modelManager<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  path<span class="token operator">:</span> modelPath<span class="token punctuation">,</span></span>
<span class="line">  precision<span class="token operator">:</span> <span class="token string">&#39;FP16&#39;</span>  <span class="token comment">// 减少内存，提升速度</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="硬件加速" tabindex="-1"><a class="header-anchor" href="#硬件加速"><span>硬件加速</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 启用 NPU 加速</span></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  path<span class="token operator">:</span> modelPath<span class="token punctuation">,</span></span>
<span class="line">  enableNPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// NPU 加速</span></span>
<span class="line">  enableGPU<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>     <span class="token comment">// GPU 加速</span></span>
<span class="line">  threads<span class="token operator">:</span> <span class="token number">4</span>            <span class="token comment">// CPU 线程数</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> model <span class="token operator">=</span> <span class="token keyword">await</span> modelManager<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎯-实战案例-自定义图像分类" tabindex="-1"><a class="header-anchor" href="#🎯-实战案例-自定义图像分类"><span>🎯 实战案例：自定义图像分类</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">CustomImageClassifier</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> model<span class="token operator">:</span> Model</span>
<span class="line">  <span class="token keyword">private</span> labels<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 加载模型</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> <span class="token keyword">await</span> modelManager<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      path<span class="token operator">:</span> <span class="token string">&#39;/data/storage/el2/base/files/custom_classifier.ms&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      enableNPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      precision<span class="token operator">:</span> <span class="token string">&#39;FP16&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 加载标签</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>labels <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">loadLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> labelsPath <span class="token operator">=</span> <span class="token string">&#39;/data/storage/el2/base/files/labels.txt&#39;</span></span>
<span class="line">    <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>labelsPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">classify</span><span class="token punctuation">(</span>imagePath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 1. 加载图像</span></span>
<span class="line">    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadImage</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 2. 预处理</span></span>
<span class="line">    <span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preprocess</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 3. 推理</span></span>
<span class="line">    <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">infer</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 4. 后处理</span></span>
<span class="line">    <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postprocess</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> results</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">loadImage</span><span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ImageData<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 加载图像</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> image<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>image<span class="token operator">:</span> ImageData<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ArrayBuffer<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 调整大小到 224x224</span></span>
<span class="line">    <span class="token keyword">const</span> resized <span class="token operator">=</span> <span class="token keyword">await</span> image<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 归一化 [0, 1]</span></span>
<span class="line">    <span class="token keyword">const</span> normalized <span class="token operator">=</span> resized<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 转换为模型输入格式</span></span>
<span class="line">    <span class="token keyword">return</span> normalized<span class="token punctuation">.</span><span class="token function">toArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">postprocess</span><span class="token punctuation">(</span>output<span class="token operator">:</span> ArrayBuffer<span class="token punctuation">)</span><span class="token operator">:</span> ClassifyResult<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> probabilities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Float32Array</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 获取 Top-5</span></span>
<span class="line">    <span class="token keyword">const</span> results<span class="token operator">:</span> ClassifyResult<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">const</span> indices <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTopK</span><span class="token punctuation">(</span>probabilities<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    indices<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> rank<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        label<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>labels<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        confidence<span class="token operator">:</span> probabilities<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        rank<span class="token operator">:</span> rank <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> results</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">getTopK</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> Float32Array<span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> indexed <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> val<span class="token punctuation">,</span> idx <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    indexed<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>val <span class="token operator">-</span> a<span class="token punctuation">.</span>val<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> indexed<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>idx<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用</span></span>
<span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomImageClassifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span><span class="token string">&#39;/path/to/image.jpg&#39;</span><span class="token punctuation">)</span></span>
<span class="line">results<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>result <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>rank<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>confidence<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="_1-模型版本管理" tabindex="-1"><a class="header-anchor" href="#_1-模型版本管理"><span>1. 模型版本管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">ModelInfo</span> <span class="token punctuation">{</span></span>
<span class="line">  version<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  path<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  updateTime<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ModelVersionManager</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getCurrentModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ModelInfo<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;currentModel&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">updateModel</span><span class="token punctuation">(</span>newModel<span class="token operator">:</span> ModelInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;currentModel&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newModel<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-模型预热" tabindex="-1"><a class="header-anchor" href="#_2-模型预热"><span>2. 模型预热</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 首次推理较慢，提前预热</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">warmupModel</span><span class="token punctuation">(</span>model<span class="token operator">:</span> Model<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> dummyInput <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">224</span> <span class="token operator">*</span> <span class="token number">224</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">await</span> model<span class="token punctuation">.</span><span class="token function">infer</span><span class="token punctuation">(</span>dummyInput<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-内存管理" tabindex="-1"><a class="header-anchor" href="#_3-内存管理"><span>3. 内存管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 及时释放模型</span></span>
<span class="line"><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,29)),s("ul",null,[s("li",null,[s("a",d,[n[0]||(n[0]=a("MindSpore Lite推理",-1)),p(t)])])]),n[5]||(n[5]=s("hr",null,null,-1)),s("p",null,[n[2]||(n[2]=s("strong",null,"下一节",-1)),n[3]||(n[3]=a(" → ",-1)),p(l,{to:"/tutorials/harmonyos-dev/09-ai-native/07-AI%E5%BA%94%E7%94%A8%E5%AE%9E%E6%88%98.html"},{default:u(()=>[...n[1]||(n[1]=[a("AI应用实战",-1)])]),_:1})])])}const h=o(k,[["render",v]]),y=JSON.parse('{"path":"/tutorials/harmonyos-dev/09-ai-native/06-AImoxingjicheng.html","title":"AI 模型集成","lang":"zh-CN","frontmatter":{"title":"AI 模型集成","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"🔄 模型格式转换","slug":"🔄-模型格式转换","link":"#🔄-模型格式转换","children":[{"level":3,"title":"MindSpore 模型","slug":"mindspore-模型","link":"#mindspore-模型","children":[]},{"level":3,"title":"ONNX 模型转换","slug":"onnx-模型转换","link":"#onnx-模型转换","children":[]},{"level":3,"title":"TensorFlow 模型转换","slug":"tensorflow-模型转换","link":"#tensorflow-模型转换","children":[]}]},{"level":2,"title":"📦 模型部署","slug":"📦-模型部署","link":"#📦-模型部署","children":[{"level":3,"title":"本地模型加载","slug":"本地模型加载","link":"#本地模型加载","children":[]},{"level":3,"title":"动态模型更新","slug":"动态模型更新","link":"#动态模型更新","children":[]}]},{"level":2,"title":"⚡ 模型优化","slug":"⚡-模型优化","link":"#⚡-模型优化","children":[{"level":3,"title":"量化优化","slug":"量化优化","link":"#量化优化","children":[]},{"level":3,"title":"硬件加速","slug":"硬件加速","link":"#硬件加速","children":[]}]},{"level":2,"title":"🎯 实战案例：自定义图像分类","slug":"🎯-实战案例-自定义图像分类","link":"#🎯-实战案例-自定义图像分类","children":[]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"1. 模型版本管理","slug":"_1-模型版本管理","link":"#_1-模型版本管理","children":[]},{"level":3,"title":"2. 模型预热","slug":"_2-模型预热","link":"#_2-模型预热","children":[]},{"level":3,"title":"3. 内存管理","slug":"_3-内存管理","link":"#_3-内存管理","children":[]}]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/09-ai-native/06-AI模型集成.md"}');export{h as comp,y as data};
