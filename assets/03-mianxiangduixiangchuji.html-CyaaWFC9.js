import{_ as l,c as o,d as c,e as a,f as s,b as t,w as e,r as i,o as u}from"./app-QnWV-YHu.js";const r={};function k(d,n){const p=i("RouteLink");return u(),o("div",null,[n[8]||(n[8]=c(`<h1 id="面向对象初级" tabindex="-1"><a class="header-anchor" href="#面向对象初级"><span>面向对象初级</span></a></h1><h2 id="一、面向对象概述" tabindex="-1"><a class="header-anchor" href="#一、面向对象概述"><span>一、面向对象概述</span></a></h2><h3 id="_1-什么是面向对象" tabindex="-1"><a class="header-anchor" href="#_1-什么是面向对象"><span>1. 什么是面向对象？</span></a></h3><p>面向对象编程（Object-Oriented Programming，OOP）是一种程序设计思想，将数据和操作数据的方法封装在一起。</p><p><strong>核心概念：</strong></p><ul><li><strong>类（Class）</strong>：对象的模板，定义了对象的属性和方法</li><li><strong>对象（Object）</strong>：类的实例，具体的事物</li></ul><p><strong>类比：</strong></p><ul><li>类就像&quot;图纸&quot;，对象就像根据图纸制造出来的&quot;产品&quot;</li><li>类就像&quot;模具&quot;，对象就像用模具生产出来的&quot;商品&quot;</li></ul><h3 id="_2-面向对象-vs-面向过程" tabindex="-1"><a class="header-anchor" href="#_2-面向对象-vs-面向过程"><span>2. 面向对象 vs 面向过程</span></a></h3><p><strong>面向过程：</strong></p><ul><li>关注&quot;怎么做&quot;</li><li>按照步骤一步步执行</li><li>适合简单的线性任务</li></ul><p><strong>面向对象：</strong></p><ul><li>关注&quot;谁来做&quot;</li><li>将功能封装到对象中</li><li>适合复杂的大型项目</li></ul><hr><h2 id="二、类的定义" tabindex="-1"><a class="header-anchor" href="#二、类的定义"><span>二、类的定义</span></a></h2><h3 id="_1-基本语法" tabindex="-1"><a class="header-anchor" href="#_1-基本语法"><span>1. 基本语法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> 类名<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 类属性</span></span>
<span class="line">    类变量 <span class="token operator">=</span> 值</span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 初始化方法</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> 参数<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>实例属性 <span class="token operator">=</span> 参数</span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 实例方法</span></span>
<span class="line">    <span class="token keyword">def</span> 方法名<span class="token punctuation">(</span>self<span class="token punctuation">,</span> 参数<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        方法体</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-创建简单的类" tabindex="-1"><a class="header-anchor" href="#_2-创建简单的类"><span>2. 创建简单的类</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;学生类&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化方法（构造函数）&quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">introduce</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;自我介绍方法&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;大家好，我是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">，今年</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span><span class="token string">岁&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建对象</span></span>
<span class="line">student1 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line">student2 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 调用方法</span></span>
<span class="line">student1<span class="token punctuation">.</span>introduce<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 大家好，我是张三，今年18岁</span></span>
<span class="line">student2<span class="token punctuation">.</span>introduce<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 大家好，我是李四，今年19岁</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、类的属性" tabindex="-1"><a class="header-anchor" href="#三、类的属性"><span>三、类的属性</span></a></h2><h3 id="_1-实例属性" tabindex="-1"><a class="header-anchor" href="#_1-实例属性"><span>1. 实例属性</span></a></h3><p>每个对象独有的属性，通过<code>self.属性名</code>定义。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name  <span class="token comment"># 实例属性</span></span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age    <span class="token comment"># 实例属性</span></span>
<span class="line"></span>
<span class="line">person1 <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line">person2 <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment"># 张三</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person2<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment"># 李四</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改实例属性</span></span>
<span class="line">person1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">19</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person1<span class="token punctuation">.</span>age<span class="token punctuation">)</span>  <span class="token comment"># 19</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-类属性" tabindex="-1"><a class="header-anchor" href="#_2-类属性"><span>2. 类属性</span></a></h3><p>所有对象共享的属性，定义在类中但在方法外。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 类属性</span></span>
<span class="line">    school <span class="token operator">=</span> <span class="token string">&quot;清华大学&quot;</span></span>
<span class="line">    count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        Student<span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span>  <span class="token comment"># 修改类属性</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 访问类属性</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span>school<span class="token punctuation">)</span>  <span class="token comment"># 清华大学</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建对象</span></span>
<span class="line">s1 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span></span>
<span class="line">s2 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过类名访问</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span>count<span class="token punctuation">)</span>  <span class="token comment"># 2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过对象访问</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>school<span class="token punctuation">)</span>  <span class="token comment"># 清华大学</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>school<span class="token punctuation">)</span>  <span class="token comment"># 清华大学</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-私有属性" tabindex="-1"><a class="header-anchor" href="#_3-私有属性"><span>3. 私有属性</span></a></h3><p>以双下划线<code>__</code>开头的属性是私有属性，外部无法直接访问。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>__age <span class="token operator">=</span> age  <span class="token comment"># 私有属性</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_age</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取年龄&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>__age</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">set_age</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置年龄&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> age <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>__age <span class="token operator">=</span> age</span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;年龄必须大于0&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">person <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment"># 张三</span></span>
<span class="line"><span class="token comment"># print(person.__age)  # AttributeError</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过方法访问私有属性</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>get_age<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 18</span></span>
<span class="line">person<span class="token punctuation">.</span>set_age<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>get_age<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 20</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、类的方法" tabindex="-1"><a class="header-anchor" href="#四、类的方法"><span>四、类的方法</span></a></h2><h3 id="_1-实例方法" tabindex="-1"><a class="header-anchor" href="#_1-实例方法"><span>1. 实例方法</span></a></h3><p>最常用的方法，第一个参数必须是<code>self</code>，表示实例本身。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Calculator</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>x <span class="token operator">=</span> x</span>
<span class="line">        self<span class="token punctuation">.</span>y <span class="token operator">=</span> y</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;实例方法&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>x <span class="token operator">+</span> self<span class="token punctuation">.</span>y</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">subtract</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>x <span class="token operator">-</span> self<span class="token punctuation">.</span>y</span>
<span class="line"></span>
<span class="line">calc <span class="token operator">=</span> Calculator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>calc<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 15</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>calc<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-类方法" tabindex="-1"><a class="header-anchor" href="#_2-类方法"><span>2. 类方法</span></a></h3><p>使用<code>@classmethod</code>装饰器，第一个参数是<code>cls</code>，表示类本身。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span></span>
<span class="line">    count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        Student<span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    </span>
<span class="line">    <span class="token decorator annotation punctuation">@classmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_count</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;类方法&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>count</span>
<span class="line"></span>
<span class="line">s1 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span></span>
<span class="line">s2 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过类调用</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span>get_count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过对象调用</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>get_count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-静态方法" tabindex="-1"><a class="header-anchor" href="#_3-静态方法"><span>3. 静态方法</span></a></h3><p>使用<code>@staticmethod</code>装饰器，不需要<code>self</code>或<code>cls</code>参数。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MathUtils</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token decorator annotation punctuation">@staticmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;静态方法&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> x <span class="token operator">+</span> y</span>
<span class="line">    </span>
<span class="line">    <span class="token decorator annotation punctuation">@staticmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">multiply</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> x <span class="token operator">*</span> y</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过类调用</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>MathUtils<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 8</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>MathUtils<span class="token punctuation">.</span>multiply<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 15</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过对象调用也可以</span></span>
<span class="line">utils <span class="token operator">=</span> MathUtils<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、特殊方法-魔术方法" tabindex="-1"><a class="header-anchor" href="#五、特殊方法-魔术方法"><span>五、特殊方法（魔术方法）</span></a></h2><h3 id="_1-init-初始化方法" tabindex="-1"><a class="header-anchor" href="#_1-init-初始化方法"><span>1. <code>__init__()</code> - 初始化方法</span></a></h3><p>创建对象时自动调用。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;初始化方法被调用&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line"></span>
<span class="line">person <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 输出：初始化方法被调用</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-str-字符串表示" tabindex="-1"><a class="header-anchor" href="#_2-str-字符串表示"><span>2. <code>__str__()</code> - 字符串表示</span></a></h3><p>定义对象的字符串表示形式。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;Person(name=</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">, age=</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span></span>
<span class="line"></span>
<span class="line">person <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>  <span class="token comment"># Person(name=张三, age=18)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-repr-官方字符串表示" tabindex="-1"><a class="header-anchor" href="#_3-repr-官方字符串表示"><span>3. <code>__repr__()</code> - 官方字符串表示</span></a></h3><p>用于调试，通常返回可以重新创建对象的字符串。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;Person(&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;, </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span></span>
<span class="line"></span>
<span class="line">person <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">repr</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># Person(&#39;张三&#39;, 18)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-len-长度方法" tabindex="-1"><a class="header-anchor" href="#_4-len-长度方法"><span>4. <code>__len__()</code> - 长度方法</span></a></h3><p>定义对象的长度。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyList</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> items<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>items <span class="token operator">=</span> items</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>items<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">my_list <span class="token operator">=</span> MyList<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-del-析构方法" tabindex="-1"><a class="header-anchor" href="#_5-del-析构方法"><span>5. <code>__del__()</code> - 析构方法</span></a></h3><p>对象被销毁时自动调用。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string"> 被创建&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string"> 被销毁&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">person <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">del</span> person  <span class="token comment"># 张三 被销毁</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、实战案例" tabindex="-1"><a class="header-anchor" href="#六、实战案例"><span>六、实战案例</span></a></h2><h3 id="案例1-学生管理系统" tabindex="-1"><a class="header-anchor" href="#案例1-学生管理系统"><span>案例1：学生管理系统</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;学生类&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> student_id<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line">        self<span class="token punctuation">.</span>student_id <span class="token operator">=</span> student_id</span>
<span class="line">        self<span class="token punctuation">.</span>scores <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">add_score</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> subject<span class="token punctuation">,</span> score<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;添加成绩&quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>scores<span class="token punctuation">[</span>subject<span class="token punctuation">]</span> <span class="token operator">=</span> score</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_average_score</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;计算平均分&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>scores<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>scores<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>scores<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;学生：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">，学号：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>student_id<span class="token punctuation">}</span></span><span class="token string">，平均分：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>get_average_score<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建学生对象</span></span>
<span class="line">student <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;2024001&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 添加成绩</span></span>
<span class="line">student<span class="token punctuation">.</span>add_score<span class="token punctuation">(</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">)</span></span>
<span class="line">student<span class="token punctuation">.</span>add_score<span class="token punctuation">(</span><span class="token string">&quot;数学&quot;</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">)</span></span>
<span class="line">student<span class="token punctuation">.</span>add_score<span class="token punctuation">(</span><span class="token string">&quot;英语&quot;</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;各科成绩：</span><span class="token interpolation"><span class="token punctuation">{</span>student<span class="token punctuation">.</span>scores<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-银行账户" tabindex="-1"><a class="header-anchor" href="#案例2-银行账户"><span>案例2：银行账户</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BankAccount</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;银行账户类&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> account_number<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> balance<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>account_number <span class="token operator">=</span> account_number</span>
<span class="line">        self<span class="token punctuation">.</span>owner <span class="token operator">=</span> owner</span>
<span class="line">        self<span class="token punctuation">.</span>__balance <span class="token operator">=</span> balance  <span class="token comment"># 私有属性</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">deposit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;存款&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> amount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>__balance <span class="token operator">+=</span> amount</span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;存款成功！当前余额：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>__balance<span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;存款金额必须大于0&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">withdraw</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;取款&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> amount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">if</span> amount <span class="token operator">&lt;=</span> self<span class="token punctuation">.</span>__balance<span class="token punctuation">:</span></span>
<span class="line">                self<span class="token punctuation">.</span>__balance <span class="token operator">-=</span> amount</span>
<span class="line">                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;取款成功！当前余额：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>__balance<span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;余额不足&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;取款金额必须大于0&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_balance</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;查询余额&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>__balance</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;账户：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>account_number<span class="token punctuation">}</span></span><span class="token string">，户主：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>owner<span class="token punctuation">}</span></span><span class="token string">，余额：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>__balance<span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建账户</span></span>
<span class="line">account <span class="token operator">=</span> BankAccount<span class="token punctuation">(</span><span class="token string">&quot;6222021234567890&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 操作账户</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span></span>
<span class="line">account<span class="token punctuation">.</span>deposit<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span></span>
<span class="line">account<span class="token punctuation">.</span>withdraw<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;当前余额：</span><span class="token interpolation"><span class="token punctuation">{</span>account<span class="token punctuation">.</span>get_balance<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例3-图书管理" tabindex="-1"><a class="header-anchor" href="#案例3-图书管理"><span>案例3：图书管理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Book</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;图书类&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> title<span class="token punctuation">,</span> author<span class="token punctuation">,</span> isbn<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>title <span class="token operator">=</span> title</span>
<span class="line">        self<span class="token punctuation">.</span>author <span class="token operator">=</span> author</span>
<span class="line">        self<span class="token punctuation">.</span>isbn <span class="token operator">=</span> isbn</span>
<span class="line">        self<span class="token punctuation">.</span>price <span class="token operator">=</span> price</span>
<span class="line">        self<span class="token punctuation">.</span>is_borrowed <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">borrow</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;借书&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>is_borrowed<span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>is_borrowed <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;《</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token string">》借阅成功&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;《</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token string">》已被借出&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">return_book</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;还书&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span>is_borrowed<span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>is_borrowed <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;《</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token string">》归还成功&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;《</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token string">》未被借出&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        status <span class="token operator">=</span> <span class="token string">&quot;已借出&quot;</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>is_borrowed <span class="token keyword">else</span> <span class="token string">&quot;可借阅&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;《</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token string">》- </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>author<span class="token punctuation">}</span></span><span class="token string">，状态：</span><span class="token interpolation"><span class="token punctuation">{</span>status<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建图书</span></span>
<span class="line">book1 <span class="token operator">=</span> Book<span class="token punctuation">(</span><span class="token string">&quot;Python编程&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;978-7-111-12345-6&quot;</span><span class="token punctuation">,</span> <span class="token number">89.00</span><span class="token punctuation">)</span></span>
<span class="line">book2 <span class="token operator">=</span> Book<span class="token punctuation">(</span><span class="token string">&quot;Java核心技术&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;978-7-111-23456-7&quot;</span><span class="token punctuation">,</span> <span class="token number">99.00</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 操作图书</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>book1<span class="token punctuation">)</span></span>
<span class="line">book1<span class="token punctuation">.</span>borrow<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>book1<span class="token punctuation">)</span></span>
<span class="line">book1<span class="token punctuation">.</span>return_book<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>book1<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、实战练习" tabindex="-1"><a class="header-anchor" href="#七、实战练习"><span>七、实战练习</span></a></h2><h3 id="练习1-矩形类" tabindex="-1"><a class="header-anchor" href="#练习1-矩形类"><span>练习1：矩形类</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Rectangle</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;矩形类&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>width <span class="token operator">=</span> width</span>
<span class="line">        self<span class="token punctuation">.</span>height <span class="token operator">=</span> height</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">area</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;计算面积&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>width <span class="token operator">*</span> self<span class="token punctuation">.</span>height</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">perimeter</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;计算周长&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>width <span class="token operator">+</span> self<span class="token punctuation">.</span>height<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;矩形(宽=</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>width<span class="token punctuation">}</span></span><span class="token string">, 高=</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>height<span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line">rect <span class="token operator">=</span> Rectangle<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;面积：</span><span class="token interpolation"><span class="token punctuation">{</span>rect<span class="token punctuation">.</span>area<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;周长：</span><span class="token interpolation"><span class="token punctuation">{</span>rect<span class="token punctuation">.</span>perimeter<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-时钟类" tabindex="-1"><a class="header-anchor" href="#练习2-时钟类"><span>练习2：时钟类</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Clock</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;时钟类&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> hour<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>hour <span class="token operator">=</span> hour</span>
<span class="line">        self<span class="token punctuation">.</span>minute <span class="token operator">=</span> minute</span>
<span class="line">        self<span class="token punctuation">.</span>second <span class="token operator">=</span> second</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;时钟走一秒&quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>second <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span>second <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>second <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">            self<span class="token punctuation">.</span>minute <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span>minute <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>minute <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">            self<span class="token punctuation">.</span>hour <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span>hour <span class="token operator">&gt;=</span> <span class="token number">24</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>hour <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hour<span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>minute<span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>second<span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line">clock <span class="token operator">=</span> Clock<span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>clock<span class="token punctuation">)</span></span>
<span class="line">    clock<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、知识点总结" tabindex="-1"><a class="header-anchor" href="#八、知识点总结"><span>八、知识点总结</span></a></h2><h3 id="✅-核心要点" tabindex="-1"><a class="header-anchor" href="#✅-核心要点"><span>✅ 核心要点</span></a></h3><ol><li><strong>类和对象</strong>：类是模板，对象是实例</li><li><strong>属性</strong>：实例属性、类属性、私有属性</li><li><strong>方法</strong>：实例方法、类方法、静态方法</li><li><strong>特殊方法</strong>：<code>__init__</code>、<code>__str__</code>、<code>__repr__</code>等</li><li><strong>封装</strong>：通过私有属性隐藏内部实现</li></ol><h3 id="📝-面试重点" tabindex="-1"><a class="header-anchor" href="#📝-面试重点"><span>📝 面试重点</span></a></h3><ul><li>类和对象的关系</li><li>实例方法、类方法、静态方法的区别</li><li><code>self</code>的作用</li><li>私有属性的实现原理</li><li><code>__init__</code>和<code>__new__</code>的区别</li></ul><hr>`,79)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),t(p,{to:"/tutorials/python-ai/python/%E7%AC%AC02%E7%AB%A0-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/02-%E5%87%BD%E6%95%B0%E8%BF%9B%E9%98%B6.html"},{default:e(()=>[...n[0]||(n[0]=[s("函数进阶",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),t(p,{to:"/tutorials/python-ai/python/%E7%AC%AC02%E7%AB%A0-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/04-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6.html"},{default:e(()=>[...n[1]||(n[1]=[s("面向对象进阶",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const m=l(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di02zhang-hexinbiancheng/03-mianxiangduixiangchuji.html","title":"面向对象初级","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、面向对象概述","slug":"一、面向对象概述","link":"#一、面向对象概述","children":[{"level":3,"title":"1. 什么是面向对象？","slug":"_1-什么是面向对象","link":"#_1-什么是面向对象","children":[]},{"level":3,"title":"2. 面向对象 vs 面向过程","slug":"_2-面向对象-vs-面向过程","link":"#_2-面向对象-vs-面向过程","children":[]}]},{"level":2,"title":"二、类的定义","slug":"二、类的定义","link":"#二、类的定义","children":[{"level":3,"title":"1. 基本语法","slug":"_1-基本语法","link":"#_1-基本语法","children":[]},{"level":3,"title":"2. 创建简单的类","slug":"_2-创建简单的类","link":"#_2-创建简单的类","children":[]}]},{"level":2,"title":"三、类的属性","slug":"三、类的属性","link":"#三、类的属性","children":[{"level":3,"title":"1. 实例属性","slug":"_1-实例属性","link":"#_1-实例属性","children":[]},{"level":3,"title":"2. 类属性","slug":"_2-类属性","link":"#_2-类属性","children":[]},{"level":3,"title":"3. 私有属性","slug":"_3-私有属性","link":"#_3-私有属性","children":[]}]},{"level":2,"title":"四、类的方法","slug":"四、类的方法","link":"#四、类的方法","children":[{"level":3,"title":"1. 实例方法","slug":"_1-实例方法","link":"#_1-实例方法","children":[]},{"level":3,"title":"2. 类方法","slug":"_2-类方法","link":"#_2-类方法","children":[]},{"level":3,"title":"3. 静态方法","slug":"_3-静态方法","link":"#_3-静态方法","children":[]}]},{"level":2,"title":"五、特殊方法（魔术方法）","slug":"五、特殊方法-魔术方法","link":"#五、特殊方法-魔术方法","children":[{"level":3,"title":"1. __init__() - 初始化方法","slug":"_1-init-初始化方法","link":"#_1-init-初始化方法","children":[]},{"level":3,"title":"2. __str__() - 字符串表示","slug":"_2-str-字符串表示","link":"#_2-str-字符串表示","children":[]},{"level":3,"title":"3. __repr__() - 官方字符串表示","slug":"_3-repr-官方字符串表示","link":"#_3-repr-官方字符串表示","children":[]},{"level":3,"title":"4. __len__() - 长度方法","slug":"_4-len-长度方法","link":"#_4-len-长度方法","children":[]},{"level":3,"title":"5. __del__() - 析构方法","slug":"_5-del-析构方法","link":"#_5-del-析构方法","children":[]}]},{"level":2,"title":"六、实战案例","slug":"六、实战案例","link":"#六、实战案例","children":[{"level":3,"title":"案例1：学生管理系统","slug":"案例1-学生管理系统","link":"#案例1-学生管理系统","children":[]},{"level":3,"title":"案例2：银行账户","slug":"案例2-银行账户","link":"#案例2-银行账户","children":[]},{"level":3,"title":"案例3：图书管理","slug":"案例3-图书管理","link":"#案例3-图书管理","children":[]}]},{"level":2,"title":"七、实战练习","slug":"七、实战练习","link":"#七、实战练习","children":[{"level":3,"title":"练习1：矩形类","slug":"练习1-矩形类","link":"#练习1-矩形类","children":[]},{"level":3,"title":"练习2：时钟类","slug":"练习2-时钟类","link":"#练习2-时钟类","children":[]}]},{"level":2,"title":"八、知识点总结","slug":"八、知识点总结","link":"#八、知识点总结","children":[{"level":3,"title":"✅ 核心要点","slug":"✅-核心要点","link":"#✅-核心要点","children":[]},{"level":3,"title":"📝 面试重点","slug":"📝-面试重点","link":"#📝-面试重点","children":[]}]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第02章-核心编程/03-面向对象初级.md"}');export{m as comp,b as data};
