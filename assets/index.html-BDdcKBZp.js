import{_ as o,c as u,d as l,e as s,f as a,b as t,w as e,r as c,o as r}from"./app-DnBTedau.js";const d={},k={id:"_1-agent-概念",tabindex:"-1"},v={class:"header-anchor",href:"#_1-agent-概念"},m={id:"_2-react-agent",tabindex:"-1"},g={class:"header-anchor",href:"#_2-react-agent"},b={id:"_3-工具集成",tabindex:"-1"},h={class:"header-anchor",href:"#_3-工具集成"},f={id:"_4-多-agent-系统",tabindex:"-1"},y={class:"header-anchor",href:"#_4-多-agent-系统"},q={id:"_5-langchain4j-框架",tabindex:"-1"},A={class:"header-anchor",href:"#_5-langchain4j-框架"},w={href:"https://docs.spring.io/spring-ai/reference/api/tools.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.langchain4j.dev/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://arxiv.org/abs/2210.03629",target:"_blank",rel:"noopener noreferrer"};function S(_,n){const p=c("RouteLink"),i=c("ExternalLinkIcon");return r(),u("div",null,[n[21]||(n[21]=l(`<h1 id="第八部分-agent-开发-⭐⭐⭐⭐⭐" tabindex="-1"><a class="header-anchor" href="#第八部分-agent-开发-⭐⭐⭐⭐⭐"><span>第八部分：Agent 开发 ⭐⭐⭐⭐⭐</span></a></h1><blockquote><p>构建能够自主思考和行动的智能体</p></blockquote><h2 id="📖-本部分概述" tabindex="-1"><a class="header-anchor" href="#📖-本部分概述"><span>📖 本部分概述</span></a></h2><p><strong>Agent（智能体）</strong> 是 AI 应用的高级形态，它不仅能回答问题，还能：</p><ul><li>🤔 <strong>自主规划</strong> - 分解复杂任务</li><li>🔧 <strong>使用工具</strong> - 调用各种 API 和服务</li><li>🔄 <strong>迭代执行</strong> - 根据结果调整策略</li><li>🤝 <strong>协作</strong> - 多个 Agent 协同工作</li></ul><p><strong>学习时长：</strong> 4-6 周<br><strong>难度：</strong> ⭐⭐⭐⭐⭐<br><strong>重要程度：</strong> ⭐⭐⭐⭐⭐</p><hr><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>✅ 理解 Agent 的核心概念和架构</li><li>✅ 掌握 ReAct 模式</li><li>✅ 实现工具调用（Tool Calling）</li><li>✅ 构建多 Agent 协作系统</li><li>✅ 使用 Spring AI 和 LangChain4j 开发 Agent</li></ul><hr><h2 id="💡-什么是-agent" tabindex="-1"><a class="header-anchor" href="#💡-什么是-agent"><span>💡 什么是 Agent？</span></a></h2><h3 id="agent-vs-简单对话" tabindex="-1"><a class="header-anchor" href="#agent-vs-简单对话"><span>Agent vs 简单对话</span></a></h3><table><thead><tr><th>特性</th><th>简单对话</th><th>Agent</th></tr></thead><tbody><tr><td><strong>能力</strong></td><td>回答问题</td><td>执行任务</td></tr><tr><td><strong>工具</strong></td><td>无</td><td>可使用多种工具</td></tr><tr><td><strong>规划</strong></td><td>无</td><td>自主规划步骤</td></tr><tr><td><strong>迭代</strong></td><td>单轮</td><td>多轮迭代</td></tr><tr><td><strong>示例</strong></td><td>&quot;什么是 Java？&quot;</td><td>&quot;帮我查询销售数据并生成报告&quot;</td></tr></tbody></table><h3 id="agent-工作流程" tabindex="-1"><a class="header-anchor" href="#agent-工作流程"><span>Agent 工作流程</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">用户：帮我查北京天气，如果温度低于10度推荐穿衣建议</span>
<span class="line"></span>
<span class="line">Agent 思考：</span>
<span class="line">1. 我需要先查询北京天气 → 使用天气工具</span>
<span class="line">2. 根据温度判断 → 逻辑推理</span>
<span class="line">3. 如果低于10度 → 调用穿衣建议工具</span>
<span class="line">4. 整合信息回复用户</span>
<span class="line"></span>
<span class="line">执行：</span>
<span class="line">→ 调用天气API → 获取温度8度</span>
<span class="line">→ 判断需要穿衣建议</span>
<span class="line">→ 调用穿衣API → 获取建议</span>
<span class="line">→ 返回综合答案</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📚-课程内容" tabindex="-1"><a class="header-anchor" href="#📚-课程内容"><span>📚 课程内容</span></a></h2>`,17)),s("h3",k,[s("a",v,[s("span",null,[n[1]||(n[1]=a("1. ",-1)),t(p,{to:"/tutorials/java-to-llm/08-agent-development/agent-concepts/"},{default:e(()=>[...n[0]||(n[0]=[a("Agent 概念",-1)])]),_:1})])])]),n[22]||(n[22]=l(`<h4 id="_1-1-agent-的核心组件" tabindex="-1"><a class="header-anchor" href="#_1-1-agent-的核心组件"><span>1.1 Agent 的核心组件</span></a></h4><p><strong>大脑（LLM）</strong></p><ul><li>推理和决策</li><li>理解任务</li><li>生成执行计划</li></ul><p><strong>记忆（Memory）</strong></p><ul><li>短期记忆：当前对话</li><li>长期记忆：历史经验</li><li>工作记忆：任务状态</li></ul><p><strong>工具（Tools）</strong></p><ul><li>搜索引擎</li><li>数据库查询</li><li>API 调用</li><li>代码执行</li></ul><p><strong>规划器（Planner）</strong></p><ul><li>任务分解</li><li>步骤规划</li><li>策略调整</li></ul><h4 id="_1-2-agent-类型" tabindex="-1"><a class="header-anchor" href="#_1-2-agent-类型"><span>1.2 Agent 类型</span></a></h4><p><strong>ReAct Agent</strong> - 推理+行动</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Thought → Action → Observation → Thought → ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Plan-and-Execute Agent</strong> - 先规划后执行</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Plan → Execute Step 1 → Execute Step 2 → ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Reflexion Agent</strong> - 自我反思</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Try → Reflect → Improve → Retry</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr>`,17)),s("h3",m,[s("a",g,[s("span",null,[n[3]||(n[3]=a("2. ",-1)),t(p,{to:"/tutorials/java-to-llm/08-agent-development/react-agent/"},{default:e(()=>[...n[2]||(n[2]=[a("ReAct Agent",-1)])]),_:1})])])]),n[23]||(n[23]=l(`<h4 id="_2-1-react-模式" tabindex="-1"><a class="header-anchor" href="#_2-1-react-模式"><span>2.1 ReAct 模式</span></a></h4><p><strong>ReAct = Reasoning (推理) + Acting (行动)</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Thought: 我需要查询用户信息</span>
<span class="line">Action: 调用 getUserInfo(userId=123)</span>
<span class="line">Observation: 用户名：张三，年龄：28</span>
<span class="line">Thought: 现在我知道用户信息了，可以回答问题</span>
<span class="line">Final Answer: 张三今年28岁</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-spring-ai-实现" tabindex="-1"><a class="header-anchor" href="#_2-2-spring-ai-实现"><span>2.2 Spring AI 实现</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReactAgentService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ChatClient</span> chatClient<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserQuery</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> query <span class="token operator">-&gt;</span> userRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;查询订单信息&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderQuery</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> query <span class="token operator">-&gt;</span> orderRepository<span class="token punctuation">.</span><span class="token function">findByUserId</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">executeTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> chatClient<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">                你是一个智能助手。</span>
<span class="line">                使用提供的工具完成任务。</span>
<span class="line">                思考 → 行动 → 观察 → 继续思考...</span>
<span class="line">                &quot;&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span><span class="token string">&quot;getUserInfo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;getOrders&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例对话：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">用户：查询用户123的订单总额</span>
<span class="line"></span>
<span class="line">Agent Thought: 我需要先获取用户123的订单列表</span>
<span class="line">Action: getOrders(userId=123)</span>
<span class="line">Observation: [Order(id=1, amount=100), Order(id=2, amount=200)]</span>
<span class="line"></span>
<span class="line">Agent Thought: 现在我可以计算总额了</span>
<span class="line">Action: 计算 100 + 200</span>
<span class="line">Observation: 300</span>
<span class="line"></span>
<span class="line">Final Answer: 用户123的订单总额是300元</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,8)),s("h3",b,[s("a",h,[s("span",null,[n[5]||(n[5]=a("3. ",-1)),t(p,{to:"/tutorials/java-to-llm/08-agent-development/tool-integration/"},{default:e(()=>[...n[4]||(n[4]=[a("工具集成",-1)])]),_:1})])])]),n[24]||(n[24]=l(`<h4 id="_3-1-内置工具" tabindex="-1"><a class="header-anchor" href="#_3-1-内置工具"><span>3.1 内置工具</span></a></h4><p><strong>网络搜索</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;搜索网页&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SearchRequest</span><span class="token punctuation">,</span> <span class="token class-name">SearchResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">webSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 使用 Google Search API</span></span>
<span class="line">        <span class="token keyword">return</span> googleSearchClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>数据库查询</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;执行SQL查询&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SqlQuery</span><span class="token punctuation">,</span> <span class="token class-name">QueryResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">sqlTool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> query <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 安全检查</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSafeQuery</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SecurityException</span><span class="token punctuation">(</span><span class="token string">&quot;Unsafe SQL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> </span>
<span class="line">            jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">QueryResult</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>文件操作</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;读取文件内容&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileReadRequest</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readString</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;写入文件&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileWriteRequest</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token class-name">Path</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">            request<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-自定义工具" tabindex="-1"><a class="header-anchor" href="#_3-2-自定义工具"><span>3.2 自定义工具</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomTools</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;发送邮件&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EmailRequest</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span></span>
<span class="line">                request<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                request<span class="token punctuation">.</span><span class="token function">subject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;创建工单&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketRequest</span><span class="token punctuation">,</span> <span class="token class-name">Ticket</span><span class="token punctuation">&gt;</span></span> <span class="token function">createTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Ticket</span> ticket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ticket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            ticket<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            ticket<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            ticket<span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">priority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> ticketRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>ticket<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@Description</span><span class="token punctuation">(</span><span class="token string">&quot;调用第三方API&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApiRequest</span><span class="token punctuation">,</span> <span class="token class-name">ApiResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">callExternalApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span></span>
<span class="line">                request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token class-name">ApiResponse</span><span class="token punctuation">.</span><span class="token keyword">class</span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-工具组合使用" tabindex="-1"><a class="header-anchor" href="#_3-3-工具组合使用"><span>3.3 工具组合使用</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">complexTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> chatClient<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;你可以使用多个工具完成复杂任务&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;webSearch&quot;</span><span class="token punctuation">,</span>      <span class="token comment">// 搜索信息</span></span>
<span class="line">            <span class="token string">&quot;sqlTool&quot;</span><span class="token punctuation">,</span>        <span class="token comment">// 查询数据库</span></span>
<span class="line">            <span class="token string">&quot;sendEmail&quot;</span><span class="token punctuation">,</span>      <span class="token comment">// 发送邮件</span></span>
<span class="line">            <span class="token string">&quot;createTicket&quot;</span>    <span class="token comment">// 创建工单</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 示例：</span></span>
<span class="line"><span class="token comment">// 用户：&quot;查询销售数据，生成报告，并发送给老板&quot;</span></span>
<span class="line"><span class="token comment">// Agent 会：</span></span>
<span class="line"><span class="token comment">// 1. 调用 sqlTool 查询数据</span></span>
<span class="line"><span class="token comment">// 2. 分析数据生成报告</span></span>
<span class="line"><span class="token comment">// 3. 调用 sendEmail 发送邮件</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,12)),s("h3",f,[s("a",y,[s("span",null,[n[7]||(n[7]=a("4. ",-1)),t(p,{to:"/tutorials/java-to-llm/08-agent-development/multi-agent/"},{default:e(()=>[...n[6]||(n[6]=[a("多 Agent 系统",-1)])]),_:1})])])]),n[25]||(n[25]=l(`<h4 id="_4-1-agent-协作模式" tabindex="-1"><a class="header-anchor" href="#_4-1-agent-协作模式"><span>4.1 Agent 协作模式</span></a></h4><p><strong>主从模式（Master-Worker）</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Manager Agent</span>
<span class="line">├── Worker Agent 1 (数据收集)</span>
<span class="line">├── Worker Agent 2 (数据分析)</span>
<span class="line">└── Worker Agent 3 (报告生成)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>流水线模式（Pipeline）</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Agent 1 → Agent 2 → Agent 3 → Final Result</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>讨论模式（Debate）</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Agent A: 观点1</span>
<span class="line">Agent B: 反驳</span>
<span class="line">Agent A: 反驳</span>
<span class="line">...</span>
<span class="line">Moderator: 总结</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-实现示例" tabindex="-1"><a class="header-anchor" href="#_4-2-实现示例"><span>4.2 实现示例</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MultiAgentSystem</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Coordinator Agent</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ChatClient</span> coordinatorAgent<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Worker Agents</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ChatClient</span> researcherAgent<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ChatClient</span> coderAgent<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ChatClient</span> reviewerAgent<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">executeComplexTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 1. Coordinator 分解任务</span></span>
<span class="line">        <span class="token class-name">TaskPlan</span> plan <span class="token operator">=</span> coordinatorAgent<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;你是任务协调者，将复杂任务分解为子任务&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span><span class="token class-name">TaskPlan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 2. 分配给不同 Agent</span></span>
<span class="line">        <span class="token class-name">String</span> research <span class="token operator">=</span> researcherAgent<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>plan<span class="token punctuation">.</span><span class="token function">getSubTask1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">String</span> code <span class="token operator">=</span> coderAgent<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>plan<span class="token punctuation">.</span><span class="token function">getSubTask2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n背景：&quot;</span> <span class="token operator">+</span> research<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">String</span> review <span class="token operator">=</span> reviewerAgent<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token string">&quot;审查代码：\\n&quot;</span> <span class="token operator">+</span> code<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 3. Coordinator 整合结果</span></span>
<span class="line">        <span class="token keyword">return</span> coordinatorAgent<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">                任务：%s</span>
<span class="line">                研究结果：%s</span>
<span class="line">                代码：%s</span>
<span class="line">                审查意见：%s</span>
<span class="line">                请整合以上信息给出最终答案</span>
<span class="line">                &quot;&quot;&quot;</span><span class="token punctuation">,</span> task<span class="token punctuation">,</span> research<span class="token punctuation">,</span> code<span class="token punctuation">,</span> review<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-agent-通信" tabindex="-1"><a class="header-anchor" href="#_4-3-agent-通信"><span>4.3 Agent 通信</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgentCommunicationService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> redis<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Agent 发送消息</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> fromAgent<span class="token punctuation">,</span> <span class="token class-name">String</span> toAgent<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span>fromAgent<span class="token punctuation">,</span> toAgent<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redis<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPush</span><span class="token punctuation">(</span><span class="token string">&quot;agent:&quot;</span> <span class="token operator">+</span> toAgent<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Agent 接收消息</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> <span class="token function">receiveMessages</span><span class="token punctuation">(</span><span class="token class-name">String</span> agentId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> messages <span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token string">&quot;agent:&quot;</span> <span class="token operator">+</span> agentId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redis<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;agent:&quot;</span> <span class="token operator">+</span> agentId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> messages<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Agent 广播</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token class-name">String</span> fromAgent<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> allAgents <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;researcher&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coder&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;reviewer&quot;</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> agent <span class="token operator">:</span> allAgents<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>agent<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fromAgent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">sendMessage</span><span class="token punctuation">(</span>fromAgent<span class="token punctuation">,</span> agent<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,12)),s("h3",q,[s("a",A,[s("span",null,[n[9]||(n[9]=a("5. ",-1)),t(p,{to:"/tutorials/java-to-llm/08-agent-development/langchain4j/"},{default:e(()=>[...n[8]||(n[8]=[a("LangChain4j 框架",-1)])]),_:1})])])]),n[26]||(n[26]=l(`<h4 id="_5-1-langchain4j-简介" tabindex="-1"><a class="header-anchor" href="#_5-1-langchain4j-简介"><span>5.1 LangChain4j 简介</span></a></h4><p><strong>LangChain4j</strong> 是 Java 版的 LangChain，提供更丰富的 Agent 功能。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>dev.langchain4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>langchain4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.27.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-2-langchain4j-agent" tabindex="-1"><a class="header-anchor" href="#_5-2-langchain4j-agent"><span>5.2 LangChain4j Agent</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">dev<span class="token punctuation">.</span>langchain4j<span class="token punctuation">.</span>agent<span class="token punctuation">.</span>tool<span class="token punctuation">.</span></span><span class="token class-name">Tool</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">dev<span class="token punctuation">.</span>langchain4j<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">AiServices</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LangChain4jAgent</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 定义工具</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DatabaseTools</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span><span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span><span class="token string">&quot;查询订单&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getOrders</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> orderService<span class="token punctuation">.</span><span class="token function">findByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 定义 Agent 接口</span></span>
<span class="line">    <span class="token keyword">interface</span> <span class="token class-name">Assistant</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> <span class="token function">chat</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 创建 Agent</span></span>
<span class="line">        <span class="token class-name">Assistant</span> agent <span class="token operator">=</span> <span class="token class-name">AiServices</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token class-name">Assistant</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">chatLanguageModel</span><span class="token punctuation">(</span>openAiModel<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">tools</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DatabaseTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 使用 Agent</span></span>
<span class="line">        <span class="token class-name">String</span> answer <span class="token operator">=</span> agent<span class="token punctuation">.</span><span class="token function">chat</span><span class="token punctuation">(</span><span class="token string">&quot;查询用户123的订单信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🎯-agent-设计最佳实践" tabindex="-1"><a class="header-anchor" href="#🎯-agent-设计最佳实践"><span>🎯 Agent 设计最佳实践</span></a></h2><h3 id="_1-工具设计原则" tabindex="-1"><a class="header-anchor" href="#_1-工具设计原则"><span>1. 工具设计原则</span></a></h3><p>✅ <strong>单一职责</strong> - 每个工具只做一件事<br> ✅ <strong>清晰描述</strong> - @Description 要准确描述功能<br> ✅ <strong>错误处理</strong> - 工具要有良好的错误处理<br> ✅ <strong>幂等性</strong> - 同样的输入产生同样的输出<br> ✅ <strong>安全性</strong> - 验证输入，防止注入攻击</p><h3 id="_2-agent-提示词模板" tabindex="-1"><a class="header-anchor" href="#_2-agent-提示词模板"><span>2. Agent 提示词模板</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> agentSystemPrompt <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">你是一个智能助手，可以使用工具完成任务。</span>
<span class="line"></span>
<span class="line">工作流程：</span>
<span class="line">1. Thought: 思考需要做什么</span>
<span class="line">2. Action: 选择并调用合适的工具</span>
<span class="line">3. Observation: 观察工具返回的结果</span>
<span class="line">4. 重复 1-3 直到任务完成</span>
<span class="line">5. Final Answer: 给出最终答案</span>
<span class="line"></span>
<span class="line">注意事项：</span>
<span class="line">- 只调用真正需要的工具</span>
<span class="line">- 仔细观察工具返回结果</span>
<span class="line">- 如果工具失败，尝试其他方法</span>
<span class="line">- 最后给出清晰的答案</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-错误处理" tabindex="-1"><a class="header-anchor" href="#_3-错误处理"><span>3. 错误处理</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RobustAgentService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">executeWithRetry</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">,</span> <span class="token keyword">int</span> maxRetries<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">int</span> attempts <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Exception</span> lastError <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span>attempts <span class="token operator">&lt;</span> maxRetries<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> chatClient<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span><span class="token string">&quot;tool1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tool2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                lastError <span class="token operator">=</span> e<span class="token punctuation">;</span></span>
<span class="line">                attempts<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Attempt {} failed: {}&quot;</span><span class="token punctuation">,</span> attempts<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                </span>
<span class="line">                <span class="token comment">// 等待后重试</span></span>
<span class="line">                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> attempts<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AgentExecutionException</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;Failed after &quot;</span> <span class="token operator">+</span> maxRetries <span class="token operator">+</span> <span class="token string">&quot; attempts&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">            lastError</span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🚀-实战项目" tabindex="-1"><a class="header-anchor" href="#🚀-实战项目"><span>🚀 实战项目</span></a></h2><h3 id="项目-1-个人助理-agent" tabindex="-1"><a class="header-anchor" href="#项目-1-个人助理-agent"><span>项目 1：个人助理 Agent</span></a></h3><ul><li>日程管理</li><li>邮件处理</li><li>任务提醒</li></ul><h3 id="项目-2-数据分析-agent" tabindex="-1"><a class="header-anchor" href="#项目-2-数据分析-agent"><span>项目 2：数据分析 Agent</span></a></h3><ul><li>自动查询数据</li><li>生成可视化图表</li><li>编写分析报告</li></ul><h3 id="项目-3-devops-agent" tabindex="-1"><a class="header-anchor" href="#项目-3-devops-agent"><span>项目 3：DevOps Agent</span></a></h3><ul><li>监控系统状态</li><li>自动部署</li><li>故障诊断</li></ul><hr><h2 id="📖-推荐资源" tabindex="-1"><a class="header-anchor" href="#📖-推荐资源"><span>📖 推荐资源</span></a></h2>`,23)),s("ul",null,[s("li",null,[s("a",w,[n[10]||(n[10]=a("Spring AI Tools 文档",-1)),t(i)])]),s("li",null,[s("a",x,[n[11]||(n[11]=a("LangChain4j 文档",-1)),t(i)])]),s("li",null,[s("a",j,[n[12]||(n[12]=a("ReAct 论文",-1)),t(i)])])]),n[27]||(n[27]=s("hr",null,null,-1)),n[28]||(n[28]=s("h2",{id:"🚀-下一步",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🚀-下一步"},[s("span",null,"🚀 下一步")])],-1)),s("p",null,[n[15]||(n[15]=s("strong",null,"下一步",-1)),n[16]||(n[16]=a(" → ",-1)),t(p,{to:"/tutorials/java-to-llm/09-fine-tuning/"},{default:e(()=>[...n[13]||(n[13]=[a("第九部分：模型微调",-1)])]),_:1}),n[17]||(n[17]=a("（可选）",-1)),n[18]||(n[18]=s("br",null,null,-1)),n[19]||(n[19]=s("strong",null,"或跳到",-1)),n[20]||(n[20]=a(" → ",-1)),t(p,{to:"/tutorials/java-to-llm/10-enterprise-practices/"},{default:e(()=>[...n[14]||(n[14]=[a("第十部分：企业级实践",-1)])]),_:1})]),n[29]||(n[29]=s("hr",null,null,-1)),n[30]||(n[30]=s("p",null,[s("strong",null,"Agent 是 AI 应用的未来！"),a(" 从简单的工具调用到复杂的多 Agent 协作，Agent 能够完成越来越复杂的任务。🤖")],-1))])}const I=o(d,[["render",S]]),R=JSON.parse('{"path":"/tutorials/java-to-llm/08-agent-development/","title":"第八部分：Agent 开发","lang":"zh-CN","frontmatter":{"title":"第八部分：Agent 开发"},"headers":[{"level":2,"title":"📖 本部分概述","slug":"📖-本部分概述","link":"#📖-本部分概述","children":[]},{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"💡 什么是 Agent？","slug":"💡-什么是-agent","link":"#💡-什么是-agent","children":[{"level":3,"title":"Agent vs 简单对话","slug":"agent-vs-简单对话","link":"#agent-vs-简单对话","children":[]},{"level":3,"title":"Agent 工作流程","slug":"agent-工作流程","link":"#agent-工作流程","children":[]}]},{"level":2,"title":"📚 课程内容","slug":"📚-课程内容","link":"#📚-课程内容","children":[{"level":3,"title":"1. Agent 概念","slug":"_1-agent-概念","link":"#_1-agent-概念","children":[]},{"level":3,"title":"2. ReAct Agent","slug":"_2-react-agent","link":"#_2-react-agent","children":[]},{"level":3,"title":"3. 工具集成","slug":"_3-工具集成","link":"#_3-工具集成","children":[]},{"level":3,"title":"4. 多 Agent 系统","slug":"_4-多-agent-系统","link":"#_4-多-agent-系统","children":[]},{"level":3,"title":"5. LangChain4j 框架","slug":"_5-langchain4j-框架","link":"#_5-langchain4j-框架","children":[]}]},{"level":2,"title":"🎯 Agent 设计最佳实践","slug":"🎯-agent-设计最佳实践","link":"#🎯-agent-设计最佳实践","children":[{"level":3,"title":"1. 工具设计原则","slug":"_1-工具设计原则","link":"#_1-工具设计原则","children":[]},{"level":3,"title":"2. Agent 提示词模板","slug":"_2-agent-提示词模板","link":"#_2-agent-提示词模板","children":[]},{"level":3,"title":"3. 错误处理","slug":"_3-错误处理","link":"#_3-错误处理","children":[]}]},{"level":2,"title":"🚀 实战项目","slug":"🚀-实战项目","link":"#🚀-实战项目","children":[{"level":3,"title":"项目 1：个人助理 Agent","slug":"项目-1-个人助理-agent","link":"#项目-1-个人助理-agent","children":[]},{"level":3,"title":"项目 2：数据分析 Agent","slug":"项目-2-数据分析-agent","link":"#项目-2-数据分析-agent","children":[]},{"level":3,"title":"项目 3：DevOps Agent","slug":"项目-3-devops-agent","link":"#项目-3-devops-agent","children":[]}]},{"level":2,"title":"📖 推荐资源","slug":"📖-推荐资源","link":"#📖-推荐资源","children":[]},{"level":2,"title":"🚀 下一步","slug":"🚀-下一步","link":"#🚀-下一步","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-to-llm/08-agent-development/README.md"}');export{I as comp,R as data};
