import{_ as l,c as o,d as i,e as s,f as a,b as p,w as u,r as e,o as k}from"./app-DOpRTEVU.js";const r={},d={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-data-preferences-0000001821000613-V5",target:"_blank",rel:"noopener noreferrer"};function v(m,n){const t=e("ExternalLinkIcon"),c=e("RouteLink");return k(),o("div",null,[n[4]||(n[4]=i(`<h1 id="preferences-轻量级存储" tabindex="-1"><a class="header-anchor" href="#preferences-轻量级存储"><span>Preferences 轻量级存储</span></a></h1><blockquote><p>轻量级键值对存储方案</p></blockquote><h2 id="📚-preferences-概述" tabindex="-1"><a class="header-anchor" href="#📚-preferences-概述"><span>📚 Preferences 概述</span></a></h2><p>Preferences 是 HarmonyOS 提供的轻量级存储方案，用于保存少量配置数据。</p><h3 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">✅ 适合存储</span>
<span class="line">├─ 用户设置（主题、语言）</span>
<span class="line">├─ 应用配置（首次启动标记）</span>
<span class="line">├─ 简单键值对</span>
<span class="line">└─ 轻量级数据（&lt; 10KB）</span>
<span class="line"></span>
<span class="line">❌ 不适合存储</span>
<span class="line">├─ 大量数据</span>
<span class="line">├─ 复杂关系数据</span>
<span class="line">└─ 二进制数据</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔧-基本操作" tabindex="-1"><a class="header-anchor" href="#🔧-基本操作"><span>🔧 基本操作</span></a></h2><h3 id="获取-preferences-实例" tabindex="-1"><a class="header-anchor" href="#获取-preferences-实例"><span>获取 Preferences 实例</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> preferences <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.preferences&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获取 Preferences 实例</span></span>
<span class="line"><span class="token keyword">const</span> dataPreferences <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;myPreferences&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="写入数据" tabindex="-1"><a class="header-anchor" href="#写入数据"><span>写入数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 写入字符串</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 写入数字</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 写入布尔值</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;isLoggedIn&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 写入数组</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;favorites&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;item1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;item2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 持久化到磁盘</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取数据" tabindex="-1"><a class="header-anchor" href="#读取数据"><span>读取数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 读取字符串</span></span>
<span class="line"><span class="token keyword">const</span> username <span class="token operator">=</span> <span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 默认值 &#39;&#39;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;用户名:&#39;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 读取数字</span></span>
<span class="line"><span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;年龄:&#39;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 读取布尔值</span></span>
<span class="line"><span class="token keyword">const</span> isLoggedIn <span class="token operator">=</span> <span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;isLoggedIn&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;是否登录:&#39;</span><span class="token punctuation">,</span> isLoggedIn<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 删除指定键</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 清空所有数据</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 持久化</span></span>
<span class="line"><span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查键是否存在" tabindex="-1"><a class="header-anchor" href="#检查键是否存在"><span>检查键是否存在</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> hasKey <span class="token operator">=</span> <span class="token keyword">await</span> dataPreferences<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>hasKey<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;用户名存在&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💾-实战案例" tabindex="-1"><a class="header-anchor" href="#💾-实战案例"><span>💾 实战案例</span></a></h2><h3 id="用户设置管理" tabindex="-1"><a class="header-anchor" href="#用户设置管理"><span>用户设置管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> preferences <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.preferences&#39;</span></span>
<span class="line"><span class="token keyword">import</span> common <span class="token keyword">from</span> <span class="token string">&#39;@ohos.app.ability.common&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">UserSettings</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> context<span class="token operator">:</span> common<span class="token punctuation">.</span>UIAbilityContext</span>
<span class="line">  <span class="token keyword">private</span> prefs<span class="token operator">:</span> preferences<span class="token punctuation">.</span>Preferences</span>
<span class="line">  </span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span>context<span class="token operator">:</span> common<span class="token punctuation">.</span>UIAbilityContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>prefs <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">,</span> <span class="token string">&#39;userSettings&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 保存主题</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">setTheme</span><span class="token punctuation">(</span>theme<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;theme&#39;</span><span class="token punctuation">,</span> theme<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取主题</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;theme&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 保存语言</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">setLanguage</span><span class="token punctuation">(</span>language<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;language&#39;</span><span class="token punctuation">,</span> language<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取语言</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;language&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 保存通知设置</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">setNotificationEnabled</span><span class="token punctuation">(</span>enabled<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;notificationEnabled&#39;</span><span class="token punctuation">,</span> enabled<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取通知设置</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getNotificationEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;notificationEnabled&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">boolean</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取所有设置</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getAllSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      theme<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      language<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      notificationEnabled<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNotificationEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 重置设置</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">resetSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct SettingsPage <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token keyword">as</span> common<span class="token punctuation">.</span>UIAbilityContext</span>
<span class="line">  <span class="token keyword">private</span> userSettings<span class="token operator">:</span> UserSettings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserSettings</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> theme<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;light&#39;</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> language<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;zh-CN&#39;</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> notificationEnabled<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">loadSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>theme <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">getTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>language <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>notificationEnabled <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">getNotificationEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> space<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 主题设置</span></span>
<span class="line">      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;主题&#39;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">layoutWeight</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token function">Select</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;浅色&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token string">&#39;light&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;深色&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token string">&#39;dark&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">selected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>theme <span class="token operator">===</span> <span class="token string">&#39;light&#39;</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onSelect</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>theme <span class="token operator">=</span> index <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;light&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;dark&#39;</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>theme<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 语言设置</span></span>
<span class="line">      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;语言&#39;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">layoutWeight</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token function">Select</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;中文&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">selected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">&#39;zh-CN&#39;</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onSelect</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>language <span class="token operator">=</span> index <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;zh-CN&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">setLanguage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>language<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 通知设置</span></span>
<span class="line">      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;推送通知&#39;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">layoutWeight</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token function">Toggle</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> ToggleType<span class="token punctuation">.</span>Switch<span class="token punctuation">,</span> isOn<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>notificationEnabled <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>checked<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>notificationEnabled <span class="token operator">=</span> checked</span>
<span class="line">            <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">setNotificationEnabled</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 重置按钮</span></span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;重置设置&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userSettings<span class="token punctuation">.</span><span class="token function">resetSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="首次启动引导" tabindex="-1"><a class="header-anchor" href="#首次启动引导"><span>首次启动引导</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> prefs<span class="token operator">:</span> preferences<span class="token punctuation">.</span>Preferences</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span>context<span class="token operator">:</span> common<span class="token punctuation">.</span>UIAbilityContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>prefs <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;appConfig&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 是否首次启动</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">isFirstLaunch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;isFirstLaunch&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">boolean</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 标记已启动</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">markLaunched</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;isFirstLaunch&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取启动次数</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getLaunchCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;launchCount&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">number</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 增加启动次数</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">incrementLaunchCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLaunchCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;launchCount&#39;</span><span class="token punctuation">,</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 应用启动时</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">EntryAbility</span> <span class="token keyword">extends</span> <span class="token class-name">UIAbility</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> launchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> appConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> appConfig<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 增加启动次数</span></span>
<span class="line">    <span class="token keyword">await</span> appConfig<span class="token punctuation">.</span><span class="token function">incrementLaunchCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 检查是否首次启动</span></span>
<span class="line">    <span class="token keyword">const</span> isFirst <span class="token operator">=</span> <span class="token keyword">await</span> appConfig<span class="token punctuation">.</span><span class="token function">isFirstLaunch</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isFirst<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;首次启动，显示引导页&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> appConfig<span class="token punctuation">.</span><span class="token function">markLaunched</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="缓存管理" tabindex="-1"><a class="header-anchor" href="#缓存管理"><span>缓存管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">CacheManager</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> prefs<span class="token operator">:</span> preferences<span class="token punctuation">.</span>Preferences</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span>context<span class="token operator">:</span> common<span class="token punctuation">.</span>UIAbilityContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>prefs <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;cache&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 保存缓存</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">setCache</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> ttl<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">3600000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> cacheData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      value<span class="token operator">:</span> value<span class="token punctuation">,</span></span>
<span class="line">      expireAt<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ttl</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>cacheData<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取缓存</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getCache</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> cached <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cached<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> cacheData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>cached<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 检查是否过期</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> cacheData<span class="token punctuation">.</span>expireAt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">return</span> cacheData<span class="token punctuation">.</span>value</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 清除过期缓存</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">clearExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 注意：实际应用中需要遍历所有键</span></span>
<span class="line">    <span class="token comment">// Preferences 不提供直接遍历方法</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用</span></span>
<span class="line"><span class="token keyword">const</span> cacheManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CacheManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> cacheManager<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 保存缓存（1小时有效）</span></span>
<span class="line"><span class="token keyword">await</span> cacheManager<span class="token punctuation">.</span><span class="token function">setCache</span><span class="token punctuation">(</span><span class="token string">&#39;userList&#39;</span><span class="token punctuation">,</span> userList<span class="token punctuation">,</span> <span class="token number">3600000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 读取缓存</span></span>
<span class="line"><span class="token keyword">const</span> cachedUsers <span class="token operator">=</span> <span class="token keyword">await</span> cacheManager<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token string">&#39;userList&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>cachedUsers<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;使用缓存数据&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;缓存已过期，重新加载&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="_1-及时持久化" tabindex="-1"><a class="header-anchor" href="#_1-及时持久化"><span>1. 及时持久化</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 写入后立即持久化</span></span>
<span class="line"><span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 忘记持久化</span></span>
<span class="line"><span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 数据可能丢失</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-使用默认值" tabindex="-1"><a class="header-anchor" href="#_2-使用默认值"><span>2. 使用默认值</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 提供默认值</span></span>
<span class="line"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;theme&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 不提供默认值</span></span>
<span class="line"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;theme&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>theme <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 需要额外处理</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-错误处理" tabindex="-1"><a class="header-anchor" href="#_3-错误处理"><span>3. 错误处理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;保存失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,32)),s("ul",null,[s("li",null,[s("a",d,[n[0]||(n[0]=a("Preferences 官方文档",-1)),p(t)])])]),n[5]||(n[5]=s("hr",null,null,-1)),s("p",null,[n[2]||(n[2]=s("strong",null,"下一节",-1)),n[3]||(n[3]=a(" → ",-1)),p(c,{to:"/tutorials/harmonyos-dev/07-data-management/02-%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.html"},{default:u(()=>[...n[1]||(n[1]=[a("关系型数据库",-1)])]),_:1})])])}const h=l(r,[["render",v]]),y=JSON.parse('{"path":"/tutorials/harmonyos-dev/07-data-management/01-Preferencesqingliangjicunchu.html","title":"Preferences 轻量级存储","lang":"zh-CN","frontmatter":{"title":"Preferences 轻量级存储","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"📚 Preferences 概述","slug":"📚-preferences-概述","link":"#📚-preferences-概述","children":[{"level":3,"title":"适用场景","slug":"适用场景","link":"#适用场景","children":[]}]},{"level":2,"title":"🔧 基本操作","slug":"🔧-基本操作","link":"#🔧-基本操作","children":[{"level":3,"title":"获取 Preferences 实例","slug":"获取-preferences-实例","link":"#获取-preferences-实例","children":[]},{"level":3,"title":"写入数据","slug":"写入数据","link":"#写入数据","children":[]},{"level":3,"title":"读取数据","slug":"读取数据","link":"#读取数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]},{"level":3,"title":"检查键是否存在","slug":"检查键是否存在","link":"#检查键是否存在","children":[]}]},{"level":2,"title":"💾 实战案例","slug":"💾-实战案例","link":"#💾-实战案例","children":[{"level":3,"title":"用户设置管理","slug":"用户设置管理","link":"#用户设置管理","children":[]},{"level":3,"title":"首次启动引导","slug":"首次启动引导","link":"#首次启动引导","children":[]},{"level":3,"title":"缓存管理","slug":"缓存管理","link":"#缓存管理","children":[]}]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"1. 及时持久化","slug":"_1-及时持久化","link":"#_1-及时持久化","children":[]},{"level":3,"title":"2. 使用默认值","slug":"_2-使用默认值","link":"#_2-使用默认值","children":[]},{"level":3,"title":"3. 错误处理","slug":"_3-错误处理","link":"#_3-错误处理","children":[]}]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/07-data-management/01-Preferences轻量级存储.md"}');export{h as comp,y as data};
