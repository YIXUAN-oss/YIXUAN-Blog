import{_ as l,c,d as t,e as n,f as p,b as e,r as i,o}from"./app-CzE7hWk8.js";const u={},r={href:"https://web.dev/performance/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.mozilla.org/en-US/docs/Web/Performance",target:"_blank",rel:"noopener noreferrer"},d={href:"https://hpbn.co/",target:"_blank",rel:"noopener noreferrer"};function m(v,s){const a=i("ExternalLinkIcon");return o(),c("div",null,[s[3]||(s[3]=t(`<h1 id="如何构建高性能的-web-应用" tabindex="-1"><a class="header-anchor" href="#如何构建高性能的-web-应用"><span>如何构建高性能的 Web 应用</span></a></h1><p>在当今互联网时代，Web 应用的性能直接影响用户体验和业务成功。本文将从多个角度介绍如何构建高性能的 Web 应用。</p><h2 id="🎯-性能优化的重要性" tabindex="-1"><a class="header-anchor" href="#🎯-性能优化的重要性"><span>🎯 性能优化的重要性</span></a></h2><h3 id="用户体验" tabindex="-1"><a class="header-anchor" href="#用户体验"><span>用户体验</span></a></h3><p>研究表明：</p><ul><li>页面加载时间超过 3 秒，53% 的用户会放弃访问</li><li>每增加 1 秒加载时间，转化率降低 7%</li><li>性能是留住用户的关键因素</li></ul><h3 id="商业价值" tabindex="-1"><a class="header-anchor" href="#商业价值"><span>商业价值</span></a></h3><ul><li><strong>Amazon</strong>: 每 100ms 的延迟导致 1% 的销售损失</li><li><strong>Google</strong>: 页面生成延迟 0.5 秒导致流量下降 20%</li><li><strong>Pinterest</strong>: 减少 40% 的加载时间，流量增长 15%</li></ul><h2 id="🚀-前端优化" tabindex="-1"><a class="header-anchor" href="#🚀-前端优化"><span>🚀 前端优化</span></a></h2><h3 id="_1-资源优化" tabindex="-1"><a class="header-anchor" href="#_1-资源优化"><span>1. 资源优化</span></a></h3><h4 id="图片优化" tabindex="-1"><a class="header-anchor" href="#图片优化"><span>图片优化</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 使用现代图片格式</span></span>
<span class="line"><span class="token comment">// WebP 比 JPEG 小 25-35%</span></span>
<span class="line"><span class="token operator">&lt;</span>picture<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>source srcset<span class="token operator">=</span><span class="token string">&quot;image.webp&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;image/webp&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>source srcset<span class="token operator">=</span><span class="token string">&quot;image.jpg&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;image/jpeg&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;image.jpg&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;描述&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>picture<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 响应式图片</span></span>
<span class="line"><span class="token operator">&lt;</span>img </span>
<span class="line">  srcset<span class="token operator">=</span><span class="token string">&quot;small.jpg 480w, medium.jpg 800w, large.jpg 1200w&quot;</span></span>
<span class="line">  sizes<span class="token operator">=</span><span class="token string">&quot;(max-width: 600px) 480px, (max-width: 900px) 800px, 1200px&quot;</span></span>
<span class="line">  src<span class="token operator">=</span><span class="token string">&quot;medium.jpg&quot;</span> </span>
<span class="line">  alt<span class="token operator">=</span><span class="token string">&quot;响应式图片&quot;</span></span>
<span class="line"><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 懒加载</span></span>
<span class="line"><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;image.jpg&quot;</span> loading<span class="token operator">=</span><span class="token string">&quot;lazy&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;懒加载图片&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="css-优化" tabindex="-1"><a class="header-anchor" href="#css-优化"><span>CSS 优化</span></a></h4><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token comment">/* 1. 使用 CSS Sprites 减少请求 */</span></span>
<span class="line"><span class="token selector">.icon</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>sprites.png<span class="token punctuation">)</span></span> no-repeat<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* 2. 避免使用 @import */</span></span>
<span class="line"><span class="token comment">/* ❌ 不推荐 */</span></span>
<span class="line"><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;style.css&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* ✅ 推荐 */</span></span>
<span class="line">&lt;link rel=<span class="token string">&quot;stylesheet&quot;</span> href=<span class="token string">&quot;style.css&quot;</span>&gt;</span>
<span class="line"></span>
<span class="line"><span class="token comment">/* 3. 使用 CSS 动画代替 JavaScript */</span></span>
<span class="line"><span class="token selector">.element</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.3s ease<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.element:hover</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-5px<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="javascript-优化" tabindex="-1"><a class="header-anchor" href="#javascript-优化"><span>JavaScript 优化</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 1. 代码分割（Code Splitting）</span></span>
<span class="line"><span class="token comment">// 使用动态导入</span></span>
<span class="line"><span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./module.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. Tree Shaking</span></span>
<span class="line"><span class="token comment">// 只导入需要的部分</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> debounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 避免阻塞渲染</span></span>
<span class="line"><span class="token comment">// 使用 defer 或 async</span></span>
<span class="line"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;app.js&quot;</span> defer<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 4. 防抖和节流</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> timeout<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">executedFunction</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 搜索输入防抖</span></span>
<span class="line"><span class="token keyword">const</span> searchInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#search&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">searchInput<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">search</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-渲染优化" tabindex="-1"><a class="header-anchor" href="#_2-渲染优化"><span>2. 渲染优化</span></a></h3><h4 id="虚拟滚动" tabindex="-1"><a class="header-anchor" href="#虚拟滚动"><span>虚拟滚动</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// React 虚拟滚动示例</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FixedSizeList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-window&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">VirtualList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> items <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">Row</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> style <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token punctuation">{</span>items<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">&lt;</span>FixedSizeList</span>
<span class="line">      height<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">600</span><span class="token punctuation">}</span></span>
<span class="line">      itemCount<span class="token operator">=</span><span class="token punctuation">{</span>items<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>
<span class="line">      itemSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">50</span><span class="token punctuation">}</span></span>
<span class="line">      width<span class="token operator">=</span><span class="token string">&quot;100%&quot;</span></span>
<span class="line">    <span class="token operator">&gt;</span></span>
<span class="line">      <span class="token punctuation">{</span>Row<span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>FixedSizeList<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="避免重排和重绘" tabindex="-1"><a class="header-anchor" href="#避免重排和重绘"><span>避免重排和重绘</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// ❌ 不推荐：多次操作 DOM</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ 推荐：批量操作</span></span>
<span class="line">element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&#39;width: 1000px; height: 1000px;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ 使用 DocumentFragment</span></span>
<span class="line"><span class="token keyword">const</span> fragment <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  div<span class="token punctuation">.</span>textContent <span class="token operator">=</span> i<span class="token punctuation">;</span></span>
<span class="line">  fragment<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-缓存策略" tabindex="-1"><a class="header-anchor" href="#_3-缓存策略"><span>3. 缓存策略</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Service Worker 缓存</span></span>
<span class="line">self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;install&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span></span>
<span class="line">    caches<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;v1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cache</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> cache<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">        <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;/styles/main.css&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;/scripts/main.js&#39;</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;fetch&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span></span>
<span class="line">    caches<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> response <span class="token operator">||</span> <span class="token function">fetch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🖥️-后端优化" tabindex="-1"><a class="header-anchor" href="#🖥️-后端优化"><span>🖥️ 后端优化</span></a></h2><h3 id="_1-数据库优化" tabindex="-1"><a class="header-anchor" href="#_1-数据库优化"><span>1. 数据库优化</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_user_email <span class="token keyword">ON</span> users<span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 避免 SELECT *</span></span>
<span class="line"><span class="token comment">-- ❌ 不推荐</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 推荐</span></span>
<span class="line"><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> email <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 使用 EXPLAIN 分析查询</span></span>
<span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 批量插入</span></span>
<span class="line"><span class="token comment">-- ❌ 不推荐：多次插入</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 推荐：批量插入</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-缓存策略" tabindex="-1"><a class="header-anchor" href="#_2-缓存策略"><span>2. 缓存策略</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// Redis 缓存示例</span></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserRepository</span> userRepository<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;user:&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 先从缓存获取</span></span>
<span class="line">        <span class="token class-name">User</span> user <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> user<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 缓存未命中，从数据库获取</span></span>
<span class="line">        user <span class="token operator">=</span> userRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 设置缓存，过期时间 1 小时</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> user<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-api-优化" tabindex="-1"><a class="header-anchor" href="#_3-api-优化"><span>3. API 优化</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># FastAPI 异步示例</span></span>
<span class="line"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI</span>
<span class="line"><span class="token keyword">import</span> asyncio</span>
<span class="line"></span>
<span class="line">app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/users/{user_id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_user</span><span class="token punctuation">(</span>user_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 异步数据库查询</span></span>
<span class="line">    user <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>fetch_one<span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM users WHERE id = :id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> user_id<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> user</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 并发请求</span></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/dashboard&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_dashboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 并发执行多个查询</span></span>
<span class="line">    users<span class="token punctuation">,</span> posts<span class="token punctuation">,</span> comments <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span></span>
<span class="line">        get_users<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        get_posts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        get_comments<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;users&quot;</span><span class="token punctuation">:</span> users<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;posts&quot;</span><span class="token punctuation">:</span> posts<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;comments&quot;</span><span class="token punctuation">:</span> comments</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-性能监控" tabindex="-1"><a class="header-anchor" href="#📊-性能监控"><span>📊 性能监控</span></a></h2><h3 id="_1-web-vitals" tabindex="-1"><a class="header-anchor" href="#_1-web-vitals"><span>1. Web Vitals</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 监控核心 Web 指标</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getCLS<span class="token punctuation">,</span> getFID<span class="token punctuation">,</span> getFCP<span class="token punctuation">,</span> getLCP<span class="token punctuation">,</span> getTTFB <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;web-vitals&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">sendToAnalytics</span><span class="token punctuation">(</span><span class="token parameter">metric</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>metric<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 发送到分析服务</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">getCLS</span><span class="token punctuation">(</span>sendToAnalytics<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Cumulative Layout Shift</span></span>
<span class="line"><span class="token function">getFID</span><span class="token punctuation">(</span>sendToAnalytics<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// First Input Delay</span></span>
<span class="line"><span class="token function">getFCP</span><span class="token punctuation">(</span>sendToAnalytics<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// First Contentful Paint</span></span>
<span class="line"><span class="token function">getLCP</span><span class="token punctuation">(</span>sendToAnalytics<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Largest Contentful Paint</span></span>
<span class="line"><span class="token function">getTTFB</span><span class="token punctuation">(</span>sendToAnalytics<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Time to First Byte</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-performance-api" tabindex="-1"><a class="header-anchor" href="#_2-performance-api"><span>2. Performance API</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 使用 Performance API</span></span>
<span class="line"><span class="token keyword">const</span> perfData <span class="token operator">=</span> window<span class="token punctuation">.</span>performance<span class="token punctuation">.</span>timing<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> pageLoadTime <span class="token operator">=</span> perfData<span class="token punctuation">.</span>loadEventEnd <span class="token operator">-</span> perfData<span class="token punctuation">.</span>navigationStart<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> connectTime <span class="token operator">=</span> perfData<span class="token punctuation">.</span>responseEnd <span class="token operator">-</span> perfData<span class="token punctuation">.</span>requestStart<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> renderTime <span class="token operator">=</span> perfData<span class="token punctuation">.</span>domComplete <span class="token operator">-</span> perfData<span class="token punctuation">.</span>domLoading<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面加载时间:&#39;</span><span class="token punctuation">,</span> pageLoadTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;请求响应时间:&#39;</span><span class="token punctuation">,</span> connectTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面渲染时间:&#39;</span><span class="token punctuation">,</span> renderTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 性能标记</span></span>
<span class="line">performance<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token string">&#39;search-start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 执行搜索操作</span></span>
<span class="line"><span class="token function">performSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">performance<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token string">&#39;search-end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 测量时间</span></span>
<span class="line">performance<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;search-start&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;search-end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> measure <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">getEntriesByName</span><span class="token punctuation">(</span><span class="token string">&#39;search&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;搜索耗时:&#39;</span><span class="token punctuation">,</span> measure<span class="token punctuation">.</span>duration<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🛠️-实用工具" tabindex="-1"><a class="header-anchor" href="#🛠️-实用工具"><span>🛠️ 实用工具</span></a></h2><h3 id="性能测试工具" tabindex="-1"><a class="header-anchor" href="#性能测试工具"><span>性能测试工具</span></a></h3><ol><li><strong>Lighthouse</strong> - Chrome 内置性能审计工具</li><li><strong>WebPageTest</strong> - 详细的性能测试报告</li><li><strong>GTmetrix</strong> - 综合性能分析</li><li><strong>Chrome DevTools</strong> - 开发者工具</li></ol><h3 id="监控服务" tabindex="-1"><a class="header-anchor" href="#监控服务"><span>监控服务</span></a></h3><ul><li><strong>Google Analytics</strong> - 用户行为分析</li><li><strong>New Relic</strong> - 应用性能监控</li><li><strong>Datadog</strong> - 全栈监控</li><li><strong>Sentry</strong> - 错误追踪</li></ul><h2 id="📋-性能优化清单" tabindex="-1"><a class="header-anchor" href="#📋-性能优化清单"><span>📋 性能优化清单</span></a></h2><h3 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 压缩和合并资源文件</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 使用 CDN 加速静态资源</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 启用 Gzip/Brotli 压缩</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 图片优化和懒加载</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 使用缓存策略</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 代码分割和按需加载</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 减少重排和重绘</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 使用 Service Worker</li></ul><h3 id="后端" tabindex="-1"><a class="header-anchor" href="#后端"><span>后端</span></a></h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 数据库索引优化</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 查询语句优化</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 使用缓存（Redis等）</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> API 响应压缩</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 异步处理</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 负载均衡</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> CDN 配置</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> HTTP/2 或 HTTP/3</li></ul><h3 id="监控" tabindex="-1"><a class="header-anchor" href="#监控"><span>监控</span></a></h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 配置性能监控</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 设置告警规则</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 定期性能审计</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 用户体验监控</li></ul><h2 id="💡-最佳实践总结" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践总结"><span>💡 最佳实践总结</span></a></h2><ol><li><strong>测量第一</strong> - 在优化前先测量，找出真正的瓶颈</li><li><strong>用户优先</strong> - 关注用户感知的性能指标</li><li><strong>持续优化</strong> - 性能优化是持续的过程</li><li><strong>平衡权衡</strong> - 在性能和功能之间找到平衡</li><li><strong>监控跟踪</strong> - 建立监控体系，及时发现问题</li></ol><h2 id="🎓-延伸阅读" tabindex="-1"><a class="header-anchor" href="#🎓-延伸阅读"><span>🎓 延伸阅读</span></a></h2>`,50)),n("ul",null,[n("li",null,[n("a",r,[s[0]||(s[0]=p("Web.dev - Performance",-1)),e(a)])]),n("li",null,[n("a",k,[s[1]||(s[1]=p("MDN - Web Performance",-1)),e(a)])]),n("li",null,[n("a",d,[s[2]||(s[2]=p("High Performance Browser Networking",-1)),e(a)])])]),s[4]||(s[4]=t('<hr><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>性能优化是一个系统工程，需要从前端到后端、从开发到运维全方位考虑。希望本文能为你提供一些实用的思路和方法。</p><p>如果你有任何问题或建议，欢迎在评论区交流！</p><p><strong>标签</strong>: #Web开发 #性能优化 #最佳实践</p><hr><div style="text-align:center;margin-top:40px;padding:20px;background:var(--bg-color-secondary);border-radius:10px;"><p>📧 联系作者：<a href="mailto:byyi.xuan@outlook.com">byyi.xuan@outlook.com</a></p><p>🐙 GitHub：<a href="https://github.com/YIXUAN-oss" target="_blank">@YIXUAN-oss</a></p></div>',7))])}const h=l(u,[["render",m]]),g=JSON.parse('{"path":"/blogs/example-article.html","title":"如何构建高性能的 Web 应用","lang":"zh-CN","frontmatter":{"title":"如何构建高性能的 Web 应用","date":"2025-10-16T00:00:00.000Z","categories":["Web开发"],"tags":["性能优化","最佳实践","Web"],"author":"懿轩"},"headers":[{"level":2,"title":"🎯 性能优化的重要性","slug":"🎯-性能优化的重要性","link":"#🎯-性能优化的重要性","children":[{"level":3,"title":"用户体验","slug":"用户体验","link":"#用户体验","children":[]},{"level":3,"title":"商业价值","slug":"商业价值","link":"#商业价值","children":[]}]},{"level":2,"title":"🚀 前端优化","slug":"🚀-前端优化","link":"#🚀-前端优化","children":[{"level":3,"title":"1. 资源优化","slug":"_1-资源优化","link":"#_1-资源优化","children":[]},{"level":3,"title":"2. 渲染优化","slug":"_2-渲染优化","link":"#_2-渲染优化","children":[]},{"level":3,"title":"3. 缓存策略","slug":"_3-缓存策略","link":"#_3-缓存策略","children":[]}]},{"level":2,"title":"🖥️ 后端优化","slug":"🖥️-后端优化","link":"#🖥️-后端优化","children":[{"level":3,"title":"1. 数据库优化","slug":"_1-数据库优化","link":"#_1-数据库优化","children":[]},{"level":3,"title":"2. 缓存策略","slug":"_2-缓存策略","link":"#_2-缓存策略","children":[]},{"level":3,"title":"3. API 优化","slug":"_3-api-优化","link":"#_3-api-优化","children":[]}]},{"level":2,"title":"📊 性能监控","slug":"📊-性能监控","link":"#📊-性能监控","children":[{"level":3,"title":"1. Web Vitals","slug":"_1-web-vitals","link":"#_1-web-vitals","children":[]},{"level":3,"title":"2. Performance API","slug":"_2-performance-api","link":"#_2-performance-api","children":[]}]},{"level":2,"title":"🛠️ 实用工具","slug":"🛠️-实用工具","link":"#🛠️-实用工具","children":[{"level":3,"title":"性能测试工具","slug":"性能测试工具","link":"#性能测试工具","children":[]},{"level":3,"title":"监控服务","slug":"监控服务","link":"#监控服务","children":[]}]},{"level":2,"title":"📋 性能优化清单","slug":"📋-性能优化清单","link":"#📋-性能优化清单","children":[{"level":3,"title":"前端","slug":"前端","link":"#前端","children":[]},{"level":3,"title":"后端","slug":"后端","link":"#后端","children":[]},{"level":3,"title":"监控","slug":"监控","link":"#监控","children":[]}]},{"level":2,"title":"💡 最佳实践总结","slug":"💡-最佳实践总结","link":"#💡-最佳实践总结","children":[]},{"level":2,"title":"🎓 延伸阅读","slug":"🎓-延伸阅读","link":"#🎓-延伸阅读","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1760669622000,"updatedTime":1760688349000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"blogs/example-article.md"}');export{h as comp,g as data};
