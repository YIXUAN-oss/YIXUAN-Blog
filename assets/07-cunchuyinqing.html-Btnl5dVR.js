import{_ as l,c as i,d as t,e as a,f as s,b as p,w as o,r as d,o as r}from"./app-BxcHLiku.js";const c={};function u(k,n){const e=d("RouteLink");return r(),i("div",null,[n[3]||(n[3]=t(`<h1 id="存储引擎" tabindex="-1"><a class="header-anchor" href="#存储引擎"><span>存储引擎</span></a></h1><blockquote><p>存储引擎是MySQL的核心组件，决定了数据的存储方式和性能特征。本章将深入学习MySQL的存储引擎。</p></blockquote><h2 id="📋-本章目录" tabindex="-1"><a class="header-anchor" href="#📋-本章目录"><span>📋 本章目录</span></a></h2><ul><li><a href="#%E4%B8%80mysql%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84">一、MySQL体系结构</a></li><li><a href="#%E4%BA%8C%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E6%A6%82%E8%BF%B0">二、存储引擎概述</a></li><li><a href="#%E4%B8%89innodb%E5%BC%95%E6%93%8E">三、InnoDB引擎</a></li><li><a href="#%E5%9B%9Bmyisam%E5%BC%95%E6%93%8E">四、MyISAM引擎</a></li><li><a href="#%E4%BA%94%E5%85%B6%E4%BB%96%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E">五、其他存储引擎</a></li><li><a href="#%E5%85%AD%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E7%9A%84%E9%80%89%E6%8B%A9">六、存储引擎的选择</a></li></ul><hr><h2 id="一、mysql体系结构" tabindex="-1"><a class="header-anchor" href="#一、mysql体系结构"><span>一、MySQL体系结构</span></a></h2><h3 id="_1-1-mysql整体架构" tabindex="-1"><a class="header-anchor" href="#_1-1-mysql整体架构"><span>1.1 MySQL整体架构</span></a></h3><p>MySQL采用<strong>分层架构</strong>，从上到下分为四层：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">┌─────────────────────────────────────┐</span>
<span class="line">│   连接层 (Connection Layer)         │</span>
<span class="line">│   - 连接处理、授权认证、安全管理     │</span>
<span class="line">└─────────────────────────────────────┘</span>
<span class="line">           ↓</span>
<span class="line">┌─────────────────────────────────────┐</span>
<span class="line">│   服务层 (Service Layer)            │</span>
<span class="line">│   - SQL接口、解析器、优化器、缓存    │</span>
<span class="line">└─────────────────────────────────────┘</span>
<span class="line">           ↓</span>
<span class="line">┌─────────────────────────────────────┐</span>
<span class="line">│   引擎层 (Storage Engine Layer)     │</span>
<span class="line">│   - InnoDB、MyISAM、Memory等        │</span>
<span class="line">└─────────────────────────────────────┘</span>
<span class="line">           ↓</span>
<span class="line">┌─────────────────────────────────────┐</span>
<span class="line">│   存储层 (File System Layer)        │</span>
<span class="line">│   - 数据文件、日志文件等             │</span>
<span class="line">└─────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-各层职责" tabindex="-1"><a class="header-anchor" href="#_1-2-各层职责"><span>1.2 各层职责</span></a></h3><p><strong>1. 连接层</strong></p><ul><li>客户端连接处理</li><li>用户认证和授权</li><li>连接池管理</li></ul><p><strong>2. 服务层</strong></p><ul><li>SQL接口：接收SQL语句</li><li>解析器：语法分析、语义分析</li><li>优化器：生成执行计划</li><li>查询缓存（MySQL 8.0已移除）</li></ul><p><strong>3. 引擎层</strong></p><ul><li>存储数据</li><li>建立索引</li><li>提供读写接口</li><li><strong>可插拔式架构</strong></li></ul><p><strong>4. 存储层</strong></p><ul><li>物理文件存储</li><li>日志文件管理</li></ul><hr><h2 id="二、存储引擎概述" tabindex="-1"><a class="header-anchor" href="#二、存储引擎概述"><span>二、存储引擎概述</span></a></h2><h3 id="_2-1-什么是存储引擎" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是存储引擎"><span>2.1 什么是存储引擎？</span></a></h3><p><strong>存储引擎</strong>是MySQL中用于存储数据、建立索引、更新/查询数据的技术实现方式。</p><p><strong>重要特性：</strong></p><ul><li>✅ 存储引擎是<strong>基于表的</strong>，不是基于库的</li><li>✅ 同一个数据库中不同表可以使用不同的存储引擎</li><li>✅ MySQL支持可插拔式存储引擎</li></ul><h3 id="_2-2-查看存储引擎" tabindex="-1"><a class="header-anchor" href="#_2-2-查看存储引擎"><span>2.2 查看存储引擎</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看支持的存储引擎</span></span>
<span class="line"><span class="token keyword">SHOW</span> ENGINES<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看默认存储引擎</span></span>
<span class="line"><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;default_storage_engine&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看表的存储引擎</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">TABLE</span> <span class="token keyword">STATUS</span> <span class="token keyword">FROM</span> database_name<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-指定存储引擎" tabindex="-1"><a class="header-anchor" href="#_2-3-指定存储引擎"><span>2.3 指定存储引擎</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建表时指定</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> my_table <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 修改表的存储引擎</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> my_table <span class="token keyword">ENGINE</span> <span class="token operator">=</span> MyISAM<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、innodb引擎" tabindex="-1"><a class="header-anchor" href="#三、innodb引擎"><span>三、InnoDB引擎</span></a></h2><h3 id="_3-1-innodb简介" tabindex="-1"><a class="header-anchor" href="#_3-1-innodb简介"><span>3.1 InnoDB简介</span></a></h3><p><strong>InnoDB</strong> 是MySQL 5.5及以后版本的<strong>默认存储引擎</strong>，也是最重要的存储引擎。</p><h3 id="_3-2-innodb的特点" tabindex="-1"><a class="header-anchor" href="#_3-2-innodb的特点"><span>3.2 InnoDB的特点</span></a></h3><table><thead><tr><th>特性</th><th>说明</th></tr></thead><tbody><tr><td><strong>事务支持</strong></td><td>✅ 完整的ACID支持</td></tr><tr><td><strong>锁机制</strong></td><td>✅ 行级锁，并发性能好</td></tr><tr><td><strong>外键约束</strong></td><td>✅ 支持FOREIGN KEY</td></tr><tr><td><strong>崩溃恢复</strong></td><td>✅ 自动崩溃恢复</td></tr><tr><td><strong>MVCC</strong></td><td>✅ 多版本并发控制</td></tr><tr><td><strong>索引类型</strong></td><td>B+Tree索引（聚集索引）</td></tr></tbody></table><h3 id="_3-3-innodb架构" tabindex="-1"><a class="header-anchor" href="#_3-3-innodb架构"><span>3.3 InnoDB架构</span></a></h3><p><strong>核心组件：</strong></p><ol><li><p><strong>缓冲池（Buffer Pool）</strong></p><ul><li>缓存数据页和索引页</li><li>提高读写性能</li><li>默认128MB</li></ul></li><li><p><strong>日志文件</strong></p><ul><li><code>redo log</code>：重做日志，保证持久性</li><li><code>undo log</code>：回滚日志，保证原子性</li><li><code>binlog</code>：二进制日志，用于复制和恢复</li></ul></li><li><p><strong>表空间</strong></p><ul><li>系统表空间：<code>ibdata1</code></li><li>独立表空间：<code>表名.ibd</code></li></ul></li></ol><h3 id="_3-4-innodb文件结构" tabindex="-1"><a class="header-anchor" href="#_3-4-innodb文件结构"><span>3.4 InnoDB文件结构</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看是否开启独立表空间</span></span>
<span class="line"><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;innodb_file_per_table&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 独立表空间模式（推荐）</span></span>
<span class="line">innodb_file_per_table <span class="token operator">=</span> <span class="token keyword">ON</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 表文件：table_name.ibd</span></span>
<span class="line"><span class="token comment">-- 包含：表结构、数据、索引</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>文件说明：</strong></p><ul><li><code>表名.ibd</code>：存储表结构、数据、索引</li><li><code>表名.sdi</code>：表结构定义文件（JSON格式）</li></ul><h3 id="_3-5-innodb的优势" tabindex="-1"><a class="header-anchor" href="#_3-5-innodb的优势"><span>3.5 InnoDB的优势</span></a></h3><p><strong>1. 事务支持</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span>  <span class="token comment">-- 保证原子性</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 行级锁</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 多个事务可以同时修改不同行</span></span>
<span class="line"><span class="token comment">-- 事务A：</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 事务B：（不会被阻塞）</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 外键约束</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    user_id <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>user_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> users<span class="token punctuation">(</span>id<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 崩溃恢复</strong></p><ul><li>使用redo log自动恢复未提交的数据</li><li>使用undo log回滚未完成的事务</li></ul><h3 id="_3-6-innodb适用场景" tabindex="-1"><a class="header-anchor" href="#_3-6-innodb适用场景"><span>3.6 InnoDB适用场景</span></a></h3><p>✅ <strong>推荐使用场景：</strong></p><ul><li>需要事务支持（转账、订单）</li><li>需要外键约束</li><li>高并发读写</li><li>频繁的UPDATE/DELETE操作</li><li>对数据一致性要求高</li></ul><hr><h2 id="四、myisam引擎" tabindex="-1"><a class="header-anchor" href="#四、myisam引擎"><span>四、MyISAM引擎</span></a></h2><h3 id="_4-1-myisam简介" tabindex="-1"><a class="header-anchor" href="#_4-1-myisam简介"><span>4.1 MyISAM简介</span></a></h3><p><strong>MyISAM</strong> 是MySQL 5.5之前的默认存储引擎，现在较少使用。</p><h3 id="_4-2-myisam的特点" tabindex="-1"><a class="header-anchor" href="#_4-2-myisam的特点"><span>4.2 MyISAM的特点</span></a></h3><table><thead><tr><th>特性</th><th>说明</th></tr></thead><tbody><tr><td><strong>事务支持</strong></td><td>❌ 不支持事务</td></tr><tr><td><strong>锁机制</strong></td><td>❌ 表级锁，并发性能差</td></tr><tr><td><strong>外键约束</strong></td><td>❌ 不支持</td></tr><tr><td><strong>崩溃恢复</strong></td><td>❌ 无自动恢复</td></tr><tr><td><strong>访问速度</strong></td><td>✅ 读取速度快</td></tr><tr><td><strong>存储空间</strong></td><td>✅ 占用空间小</td></tr></tbody></table><h3 id="_4-3-myisam文件结构" tabindex="-1"><a class="header-anchor" href="#_4-3-myisam文件结构"><span>4.3 MyISAM文件结构</span></a></h3><p>每个MyISAM表对应3个文件：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">table_name.MYD  -- 数据文件（MyData）</span>
<span class="line">table_name.MYI  -- 索引文件（MyIndex）</span>
<span class="line">table_name.sdi  -- 表结构文件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-myisam-vs-innodb" tabindex="-1"><a class="header-anchor" href="#_4-4-myisam-vs-innodb"><span>4.4 MyISAM vs InnoDB</span></a></h3><table><thead><tr><th>特性</th><th>InnoDB</th><th>MyISAM</th></tr></thead><tbody><tr><td>事务</td><td>✅ 支持</td><td>❌ 不支持</td></tr><tr><td>外键</td><td>✅ 支持</td><td>❌ 不支持</td></tr><tr><td>锁</td><td>行级锁</td><td>表级锁</td></tr><tr><td>崩溃恢复</td><td>✅ 自动</td><td>❌ 需手动</td></tr><tr><td>读性能</td><td>良好</td><td>优秀</td></tr><tr><td>写性能</td><td>优秀</td><td>一般</td></tr><tr><td>存储空间</td><td>较大</td><td>较小</td></tr></tbody></table><h3 id="_4-5-myisam适用场景" tabindex="-1"><a class="header-anchor" href="#_4-5-myisam适用场景"><span>4.5 MyISAM适用场景</span></a></h3><p>✅ <strong>适用场景：</strong></p><ul><li>以SELECT、INSERT为主</li><li>没有事务需求</li><li>并发要求不高</li><li>只读应用或日志系统</li></ul><p>❌ <strong>不适用场景：</strong></p><ul><li>需要事务</li><li>高并发写入</li><li>频繁UPDATE/DELETE</li></ul><hr><h2 id="五、其他存储引擎" tabindex="-1"><a class="header-anchor" href="#五、其他存储引擎"><span>五、其他存储引擎</span></a></h2><h3 id="_5-1-memory引擎" tabindex="-1"><a class="header-anchor" href="#_5-1-memory引擎"><span>5.1 Memory引擎</span></a></h3><p><strong>特点：</strong></p><ul><li>💾 数据存储在内存中</li><li>⚡ 访问速度极快</li><li>❌ 数据不持久化（重启丢失）</li><li>🔒 表级锁</li><li>📊 默认使用Hash索引</li></ul><p><strong>使用场景：</strong></p><ul><li>临时表</li><li>缓存表</li><li>会话数据</li><li>中间结果集</li></ul><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> cache_table <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">data</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> Memory<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-csv引擎" tabindex="-1"><a class="header-anchor" href="#_5-2-csv引擎"><span>5.2 CSV引擎</span></a></h3><p><strong>特点：</strong></p><ul><li>📄 数据存储为CSV文件</li><li>📤 方便数据导入导出</li><li>❌ 不支持索引</li></ul><p><strong>使用场景：</strong></p><ul><li>数据交换</li><li>日志存储</li></ul><h3 id="_5-3-archive引擎" tabindex="-1"><a class="header-anchor" href="#_5-3-archive引擎"><span>5.3 Archive引擎</span></a></h3><p><strong>特点：</strong></p><ul><li>🗜️ 高度压缩存储</li><li>📥 只支持INSERT和SELECT</li><li>❌ 不支持索引</li></ul><p><strong>使用场景：</strong></p><ul><li>历史数据归档</li><li>日志记录</li></ul><hr><h2 id="六、存储引擎的选择" tabindex="-1"><a class="header-anchor" href="#六、存储引擎的选择"><span>六、存储引擎的选择</span></a></h2><h3 id="_6-1-选择决策树" tabindex="-1"><a class="header-anchor" href="#_6-1-选择决策树"><span>6.1 选择决策树</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">需要事务支持？</span>
<span class="line">├─ 是 → InnoDB</span>
<span class="line">└─ 否 ↓</span>
<span class="line"></span>
<span class="line">需要外键约束？</span>
<span class="line">├─ 是 → InnoDB</span>
<span class="line">└─ 否 ↓</span>
<span class="line"></span>
<span class="line">高并发读写？</span>
<span class="line">├─ 是 → InnoDB</span>
<span class="line">└─ 否 ↓</span>
<span class="line"></span>
<span class="line">只读或日志？</span>
<span class="line">├─ 是 → MyISAM 或 Archive</span>
<span class="line">└─ 否 ↓</span>
<span class="line"></span>
<span class="line">临时数据？</span>
<span class="line">└─ 是 → Memory</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-各引擎推荐场景" tabindex="-1"><a class="header-anchor" href="#_6-2-各引擎推荐场景"><span>6.2 各引擎推荐场景</span></a></h3><p><strong>InnoDB（首选）：</strong></p><ul><li>✅ 几乎所有OLTP应用</li><li>✅ 电商订单系统</li><li>✅ 金融交易系统</li><li>✅ 用户管理系统</li><li>✅ 内容管理系统</li></ul><p><strong>MyISAM：</strong></p><ul><li>✅ 只读应用</li><li>✅ 数据仓库（历史数据）</li><li>✅ 日志系统</li><li>✅ 统计分析（低并发）</li></ul><p><strong>Memory：</strong></p><ul><li>✅ 会话缓存</li><li>✅ 临时计算结果</li><li>✅ 实时统计数据</li></ul><p><strong>Archive：</strong></p><ul><li>✅ 历史数据归档</li><li>✅ 审计日志</li><li>✅ 只写不改的数据</li></ul><h3 id="_6-3-实际应用建议" tabindex="-1"><a class="header-anchor" href="#_6-3-实际应用建议"><span>6.3 实际应用建议</span></a></h3><p><strong>大多数情况：使用InnoDB</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 推荐配置</span></span>
<span class="line"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span></span>
<span class="line">default_storage_engine <span class="token operator">=</span> <span class="token keyword">InnoDB</span></span>
<span class="line">innodb_file_per_table <span class="token operator">=</span> <span class="token keyword">ON</span></span>
<span class="line">innodb_buffer_pool_size <span class="token operator">=</span> <span class="token number">1</span>G  <span class="token comment">-- 根据内存调整</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>混合使用：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 核心业务表：InnoDB</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 日志表：MyISAM（或Archive）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> access_log <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span>MyISAM<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 临时表：Memory</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLE</span> temp_result <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span>Memory<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、本章总结" tabindex="-1"><a class="header-anchor" href="#七、本章总结"><span>七、本章总结</span></a></h2><h3 id="核心要点" tabindex="-1"><a class="header-anchor" href="#核心要点"><span>核心要点</span></a></h3><ol><li><strong>MySQL架构</strong>：连接层→服务层→引擎层→存储层</li><li><strong>InnoDB</strong>：默认引擎，支持事务、外键、行锁</li><li><strong>MyISAM</strong>：不支持事务，表锁，读性能好</li><li><strong>Memory</strong>：内存存储，速度快，数据不持久</li><li><strong>存储引擎可插拔</strong>：不同表可用不同引擎</li></ol><h3 id="选择建议" tabindex="-1"><a class="header-anchor" href="#选择建议"><span>选择建议</span></a></h3><table><thead><tr><th>场景</th><th>推荐引擎</th><th>理由</th></tr></thead><tbody><tr><td>大多数应用</td><td>InnoDB</td><td>事务、并发、可靠性</td></tr><tr><td>只读应用</td><td>MyISAM</td><td>读性能好</td></tr><tr><td>临时数据</td><td>Memory</td><td>速度快</td></tr><tr><td>归档数据</td><td>Archive</td><td>高压缩比</td></tr></tbody></table><h3 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h3><ol><li>✅ <strong>优先使用InnoDB</strong>（除非有特殊需求）</li><li>✅ <strong>开启独立表空间</strong>（innodb_file_per_table=ON）</li><li>✅ <strong>合理配置缓冲池</strong>（innodb_buffer_pool_size）</li><li>✅ <strong>避免混用引擎</strong>（同一业务用同一引擎）</li><li>✅ <strong>定期备份</strong>（尤其是MyISAM）</li></ol><hr><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 1. 查看当前数据库支持的存储引擎</span></span>
<span class="line"><span class="token keyword">SHOW</span> ENGINES<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 查看表的存储引擎</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">TABLE</span> <span class="token keyword">STATUS</span> <span class="token operator">LIKE</span> <span class="token string">&#39;table_name&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 创建不同引擎的表</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> innodb_table <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myisam_table <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span>MyISAM<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> memory_table <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span>Memory<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 4. 修改表的存储引擎</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> myisam_table <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 5. 比较不同引擎的性能差异（自行测试）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,118)),a("p",null,[a("strong",null,[n[1]||(n[1]=s("下一章：",-1)),p(e,{to:"/tutorials/database/mysql/%E7%AC%AC03%E7%AB%A0-%E9%AB%98%E7%BA%A7%E7%AF%87/08-%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E4%B8%8E%E4%BC%98%E5%8C%96.html"},{default:o(()=>[...n[0]||(n[0]=[s("第08章 - 索引原理与优化",-1)])]),_:1})]),n[2]||(n[2]=s(" →",-1))])])}const v=l(c,[["render",u]]),h=JSON.parse('{"path":"/tutorials/database/mysql/di03zhang-gaojipian/07-cunchuyinqing.html","title":"存储引擎","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 本章目录","slug":"📋-本章目录","link":"#📋-本章目录","children":[]},{"level":2,"title":"一、MySQL体系结构","slug":"一、mysql体系结构","link":"#一、mysql体系结构","children":[{"level":3,"title":"1.1 MySQL整体架构","slug":"_1-1-mysql整体架构","link":"#_1-1-mysql整体架构","children":[]},{"level":3,"title":"1.2 各层职责","slug":"_1-2-各层职责","link":"#_1-2-各层职责","children":[]}]},{"level":2,"title":"二、存储引擎概述","slug":"二、存储引擎概述","link":"#二、存储引擎概述","children":[{"level":3,"title":"2.1 什么是存储引擎？","slug":"_2-1-什么是存储引擎","link":"#_2-1-什么是存储引擎","children":[]},{"level":3,"title":"2.2 查看存储引擎","slug":"_2-2-查看存储引擎","link":"#_2-2-查看存储引擎","children":[]},{"level":3,"title":"2.3 指定存储引擎","slug":"_2-3-指定存储引擎","link":"#_2-3-指定存储引擎","children":[]}]},{"level":2,"title":"三、InnoDB引擎","slug":"三、innodb引擎","link":"#三、innodb引擎","children":[{"level":3,"title":"3.1 InnoDB简介","slug":"_3-1-innodb简介","link":"#_3-1-innodb简介","children":[]},{"level":3,"title":"3.2 InnoDB的特点","slug":"_3-2-innodb的特点","link":"#_3-2-innodb的特点","children":[]},{"level":3,"title":"3.3 InnoDB架构","slug":"_3-3-innodb架构","link":"#_3-3-innodb架构","children":[]},{"level":3,"title":"3.4 InnoDB文件结构","slug":"_3-4-innodb文件结构","link":"#_3-4-innodb文件结构","children":[]},{"level":3,"title":"3.5 InnoDB的优势","slug":"_3-5-innodb的优势","link":"#_3-5-innodb的优势","children":[]},{"level":3,"title":"3.6 InnoDB适用场景","slug":"_3-6-innodb适用场景","link":"#_3-6-innodb适用场景","children":[]}]},{"level":2,"title":"四、MyISAM引擎","slug":"四、myisam引擎","link":"#四、myisam引擎","children":[{"level":3,"title":"4.1 MyISAM简介","slug":"_4-1-myisam简介","link":"#_4-1-myisam简介","children":[]},{"level":3,"title":"4.2 MyISAM的特点","slug":"_4-2-myisam的特点","link":"#_4-2-myisam的特点","children":[]},{"level":3,"title":"4.3 MyISAM文件结构","slug":"_4-3-myisam文件结构","link":"#_4-3-myisam文件结构","children":[]},{"level":3,"title":"4.4 MyISAM vs InnoDB","slug":"_4-4-myisam-vs-innodb","link":"#_4-4-myisam-vs-innodb","children":[]},{"level":3,"title":"4.5 MyISAM适用场景","slug":"_4-5-myisam适用场景","link":"#_4-5-myisam适用场景","children":[]}]},{"level":2,"title":"五、其他存储引擎","slug":"五、其他存储引擎","link":"#五、其他存储引擎","children":[{"level":3,"title":"5.1 Memory引擎","slug":"_5-1-memory引擎","link":"#_5-1-memory引擎","children":[]},{"level":3,"title":"5.2 CSV引擎","slug":"_5-2-csv引擎","link":"#_5-2-csv引擎","children":[]},{"level":3,"title":"5.3 Archive引擎","slug":"_5-3-archive引擎","link":"#_5-3-archive引擎","children":[]}]},{"level":2,"title":"六、存储引擎的选择","slug":"六、存储引擎的选择","link":"#六、存储引擎的选择","children":[{"level":3,"title":"6.1 选择决策树","slug":"_6-1-选择决策树","link":"#_6-1-选择决策树","children":[]},{"level":3,"title":"6.2 各引擎推荐场景","slug":"_6-2-各引擎推荐场景","link":"#_6-2-各引擎推荐场景","children":[]},{"level":3,"title":"6.3 实际应用建议","slug":"_6-3-实际应用建议","link":"#_6-3-实际应用建议","children":[]}]},{"level":2,"title":"七、本章总结","slug":"七、本章总结","link":"#七、本章总结","children":[{"level":3,"title":"核心要点","slug":"核心要点","link":"#核心要点","children":[]},{"level":3,"title":"选择建议","slug":"选择建议","link":"#选择建议","children":[]},{"level":3,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/database/mysql/第03章-高级篇/07-存储引擎.md"}');export{v as comp,h as data};
