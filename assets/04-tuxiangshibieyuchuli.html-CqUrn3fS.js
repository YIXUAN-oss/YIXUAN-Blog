import{_ as l,c as i,d as c,e as s,f as a,b as p,w as u,r as e,o as r}from"./app-QnWV-YHu.js";const k={},d={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/image-classification-guidelines-0000001820880605-V5",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/ai-overview-0000001820880597-V5",target:"_blank",rel:"noopener noreferrer"},m={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-image-0000001821000413-V5",target:"_blank",rel:"noopener noreferrer"};function b(h,n){const t=e("ExternalLinkIcon"),o=e("RouteLink");return r(),i("div",null,[n[6]||(n[6]=c(`<h1 id="图像识别与处理" tabindex="-1"><a class="header-anchor" href="#图像识别与处理"><span>图像识别与处理</span></a></h1><blockquote><p>实现图像AI能力</p></blockquote><h2 id="📷-图像分类" tabindex="-1"><a class="header-anchor" href="#📷-图像分类"><span>📷 图像分类</span></a></h2><h3 id="基础图像分类" tabindex="-1"><a class="header-anchor" href="#基础图像分类"><span>基础图像分类</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> imageClassifier <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos.ai.vision&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建分类器</span></span>
<span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  modelType<span class="token operator">:</span> <span class="token string">&#39;MobileNetV3&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  topK<span class="token operator">:</span> <span class="token number">5</span>  <span class="token comment">// 返回前5个结果</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 加载图片</span></span>
<span class="line"><span class="token keyword">const</span> imageData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token string">&#39;path/to/image.jpg&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行分类</span></span>
<span class="line"><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>imageData<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">results<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>confidence<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎯-实战案例-智能相册" tabindex="-1"><a class="header-anchor" href="#🎯-实战案例-智能相册"><span>🎯 实战案例：智能相册</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct SmartAlbum <span class="token punctuation">{</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> photos<span class="token operator">:</span> Photo<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> tags<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">private</span> classifier<span class="token operator">:</span> ImageClassifier</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>classifier <span class="token operator">=</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scanPhotos</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">scanPhotos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> allPhotos <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPhotoList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> photo <span class="token keyword">of</span> allPhotos<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> imageData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadPhoto</span><span class="token punctuation">(</span>photo<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> tags <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>imageData<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      photo<span class="token punctuation">.</span>tags <span class="token operator">=</span> tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>label<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>photos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>photo<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">searchByText</span><span class="token punctuation">(</span>query<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>photos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>photo <span class="token operator">=&gt;</span> </span>
<span class="line">      photo<span class="token punctuation">.</span>tags<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>tag <span class="token operator">=&gt;</span> tag<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">SearchBar</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function-variable function">onSearch</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchByText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></span>
<span class="line">          <span class="token comment">// 显示搜索结果</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Grid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>photos<span class="token punctuation">,</span> <span class="token punctuation">(</span>photo<span class="token operator">:</span> Photo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Image</span><span class="token punctuation">(</span>photo<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="_1-模型选择" tabindex="-1"><a class="header-anchor" href="#_1-模型选择"><span>1. 模型选择</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 移动端使用轻量级模型</span></span>
<span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  modelType<span class="token operator">:</span> <span class="token string">&#39;MobileNetV3&#39;</span>  <span class="token comment">// 小而快</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-批量处理" tabindex="-1"><a class="header-anchor" href="#_2-批量处理"><span>2. 批量处理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">batchClassify</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  batchSize<span class="token operator">:</span> <span class="token number">16</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,13)),s("ul",null,[s("li",null,[s("a",d,[n[0]||(n[0]=a("图像分类开发指导",-1)),p(t)])]),s("li",null,[s("a",v,[n[1]||(n[1]=a("AI能力概述",-1)),p(t)])]),s("li",null,[s("a",m,[n[2]||(n[2]=a("图像Kit",-1)),p(t)])])]),n[7]||(n[7]=s("hr",null,null,-1)),s("p",null,[n[4]||(n[4]=s("strong",null,"第9章完成！",-1)),n[5]||(n[5]=a(" 继续学习 → ",-1)),p(o,{to:"/tutorials/harmonyos-dev/10-distributed-next/"},{default:u(()=>[...n[3]||(n[3]=[a("第10章：分布式能力升级",-1)])]),_:1})])])}const g=l(k,[["render",b]]),y=JSON.parse('{"path":"/tutorials/harmonyos-dev/09-ai-native/04-tuxiangshibieyuchuli.html","title":"图像识别与处理","lang":"zh-CN","frontmatter":{"title":"图像识别与处理","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"📷 图像分类","slug":"📷-图像分类","link":"#📷-图像分类","children":[{"level":3,"title":"基础图像分类","slug":"基础图像分类","link":"#基础图像分类","children":[]}]},{"level":2,"title":"🎯 实战案例：智能相册","slug":"🎯-实战案例-智能相册","link":"#🎯-实战案例-智能相册","children":[]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"1. 模型选择","slug":"_1-模型选择","link":"#_1-模型选择","children":[]},{"level":3,"title":"2. 批量处理","slug":"_2-批量处理","link":"#_2-批量处理","children":[]}]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/09-ai-native/04-图像识别与处理.md"}');export{g as comp,y as data};
