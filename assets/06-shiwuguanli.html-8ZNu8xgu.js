import{_ as p,c as l,d as t,e as a,f as n,b as o,w as c,r as i,o as r}from"./app-BxcHLiku.js";const d={};function k(u,s){const e=i("RouteLink");return r(),l("div",null,[s[3]||(s[3]=t(`<h1 id="事务管理" tabindex="-1"><a class="header-anchor" href="#事务管理"><span>事务管理</span></a></h1><blockquote><p>事务是数据库的核心特性之一，确保数据的一致性和可靠性。本章将深入学习事务的原理和使用。</p></blockquote><h2 id="📋-本章目录" tabindex="-1"><a class="header-anchor" href="#📋-本章目录"><span>📋 本章目录</span></a></h2><ul><li><a href="#%E4%B8%80%E4%BA%8B%E5%8A%A1%E6%A6%82%E8%BF%B0">一、事务概述</a></li><li><a href="#%E4%BA%8C%E4%BA%8B%E5%8A%A1%E7%9A%84acid%E7%89%B9%E6%80%A7">二、事务的ACID特性</a></li><li><a href="#%E4%B8%89%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C">三、事务操作</a></li><li><a href="#%E5%9B%9B%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB">四、事务隔离级别</a></li><li><a href="#%E4%BA%94%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98">五、并发问题</a></li><li><a href="#%E5%85%AD%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B">六、实战案例</a></li></ul><hr><h2 id="一、事务概述" tabindex="-1"><a class="header-anchor" href="#一、事务概述"><span>一、事务概述</span></a></h2><h3 id="_1-1-什么是事务" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是事务"><span>1.1 什么是事务？</span></a></h3><p><strong>事务（Transaction）</strong> 是一组操作的集合，是一个不可分割的工作单位。事务会将所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作<strong>要么同时成功，要么同时失败</strong>。</p><h3 id="_1-2-为什么需要事务" tabindex="-1"><a class="header-anchor" href="#_1-2-为什么需要事务"><span>1.2 为什么需要事务？</span></a></h3><p><strong>经典场景：银行转账</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 张三给李四转账1000元</span></span>
<span class="line"><span class="token comment">-- 步骤1：张三账户-1000</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 步骤2：李四账户+1000</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>问题</strong>：如果步骤1成功但步骤2失败（如系统崩溃），会导致：</p><ul><li>❌ 张三少了1000元</li><li>❌ 李四没有收到1000元</li><li>❌ 钱凭空消失了！</li></ul><p><strong>解决方案</strong>：使用事务</p><ul><li>✅ 两个操作要么都成功</li><li>✅ 要么都失败回滚</li><li>✅ 保证数据一致性</li></ul><h3 id="_1-3-💼-实际工作中什么时候用事务" tabindex="-1"><a class="header-anchor" href="#_1-3-💼-实际工作中什么时候用事务"><span>1.3 💼 实际工作中什么时候用事务？</span></a></h3><p><strong>场景1：电商下单（最常见）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 1. 创建订单</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> total_amount<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">299.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 2. 扣减库存</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> product_id <span class="token operator">=</span> <span class="token number">5001</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 3. 扣减用户余额</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">299.00</span> <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 4. 记录积分</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> points_log <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> points<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用事务</strong>：四个操作必须全部成功，任何一步失败都要回滚，否则会出现：订单创建了但没扣库存、钱扣了但订单没创建等数据不一致问题。</p><p><strong>场景2：秒杀抢购</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 检查库存并锁定</span></span>
<span class="line"><span class="token keyword">SELECT</span> stock <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1001</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 如果有库存，扣减</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1001</span> <span class="token operator">AND</span> stock <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 创建订单</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> product_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用事务</strong>：防止超卖。<code>FOR UPDATE</code> 加排他锁，确保并发情况下不会出现库存为负的情况。</p><p><strong>场景3：用户注册</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 1. 创建用户账户</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;***&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zs@example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 2. 初始化用户钱包</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> wallets <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> balance<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 3. 赠送新人优惠券</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> coupons <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> coupon_code<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;NEW100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用事务</strong>：注册流程涉及多个表，必须保证要么全部创建成功，要么全部失败。</p><p><strong>场景4：订单退款</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 1. 更新订单状态</span></span>
<span class="line"><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;REFUNDED&#39;</span> <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 2. 恢复库存</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">+</span> quantity <span class="token keyword">FROM</span> order_items <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 3. 退款到用户账户</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> refund_amount <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 4. 记录退款日志</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> refund_logs <span class="token punctuation">(</span>order_id<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> refund_time<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">,</span> <span class="token number">299.00</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用事务</strong>：退款涉及订单、库存、资金、日志等多个操作，必须保证数据一致性。</p><p><strong>场景5：批量转账（财务系统）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 工资发放：从公司账户转到多个员工账户</span></span>
<span class="line"><span class="token keyword">UPDATE</span> company_account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">100000</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> employee_accounts <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">5000</span> <span class="token keyword">WHERE</span> dept <span class="token operator">=</span> <span class="token string">&#39;IT&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> salary_records <span class="token keyword">SET</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;PAID&#39;</span> <span class="token keyword">WHERE</span> <span class="token keyword">month</span> <span class="token operator">=</span> <span class="token string">&#39;2024-01&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>不需要事务的场景：</strong></p><ul><li>❌ 简单的单表查询：<code>SELECT * FROM users WHERE id = 1</code></li><li>❌ 单条数据的插入（无关联操作）：<code>INSERT INTO logs (...)</code></li><li>❌ 统计查询：<code>SELECT COUNT(*) FROM orders</code></li><li>❌ 读多写少的日志表</li></ul><p><strong>需要事务的判断标准：</strong></p><ol><li>✅ 涉及多个表的操作</li><li>✅ 涉及金额、库存等关键数据</li><li>✅ 需要保证数据一致性</li><li>✅ 有业务上的原子性要求</li><li>✅ 并发操作需要加锁</li></ol><hr><h2 id="二、事务的acid特性" tabindex="-1"><a class="header-anchor" href="#二、事务的acid特性"><span>二、事务的ACID特性</span></a></h2><p>事务必须满足4个特性，简称<strong>ACID</strong>：</p><h3 id="_2-1-原子性-atomicity" tabindex="-1"><a class="header-anchor" href="#_2-1-原子性-atomicity"><span>2.1 原子性（Atomicity）</span></a></h3><p>事务是不可分割的最小操作单元，<strong>要么全部成功，要么全部失败</strong>。</p><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 操作1</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 操作2</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span>  <span class="token comment">-- 两个操作都成功</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 如果中途出错</span></span>
<span class="line"><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>  <span class="token comment">-- 两个操作都回滚</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-一致性-consistency" tabindex="-1"><a class="header-anchor" href="#_2-2-一致性-consistency"><span>2.2 一致性（Consistency）</span></a></h3><p>事务完成时，必须使所有数据都保持<strong>一致状态</strong>。</p><p><strong>示例：</strong></p><ul><li>转账前：张三1000 + 李四2000 = 3000</li><li>转账后：张三0 + 李四3000 = 3000</li><li>✅ 总金额保持一致</li></ul><h3 id="_2-3-隔离性-isolation" tabindex="-1"><a class="header-anchor" href="#_2-3-隔离性-isolation"><span>2.3 隔离性（Isolation）</span></a></h3><p>数据库系统提供的隔离机制，保证事务在<strong>不受外部并发操作影响</strong>的独立环境下运行。</p><p><strong>示例：</strong></p><ul><li>张三给李四转账（事务A）</li><li>王五给李四转账（事务B）</li><li>两个事务互不影响</li></ul><h3 id="_2-4-持久性-durability" tabindex="-1"><a class="header-anchor" href="#_2-4-持久性-durability"><span>2.4 持久性（Durability）</span></a></h3><p>事务一旦提交，对数据的改变就是<strong>永久的</strong>，即使系统故障也不会丢失。</p><p><strong>实现机制：</strong></p><ul><li>redo log（重做日志）</li><li>binlog（二进制日志）</li></ul><hr><h2 id="三、事务操作" tabindex="-1"><a class="header-anchor" href="#三、事务操作"><span>三、事务操作</span></a></h2><h3 id="_3-1-查看事务提交方式" tabindex="-1"><a class="header-anchor" href="#_3-1-查看事务提交方式"><span>3.1 查看事务提交方式</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看自动提交设置</span></span>
<span class="line"><span class="token keyword">SELECT</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 1表示自动提交（默认）</span></span>
<span class="line"><span class="token comment">-- 0表示手动提交</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-方式一-控制自动提交" tabindex="-1"><a class="header-anchor" href="#_3-2-方式一-控制自动提交"><span>3.2 方式一：控制自动提交</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看当前设置</span></span>
<span class="line"><span class="token keyword">SELECT</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span>  <span class="token comment">-- 默认为1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 设置为手动提交</span></span>
<span class="line"><span class="token keyword">SET</span> @<span class="token variable">@autocommit</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 执行SQL操作</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 提交事务</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 或回滚事务</span></span>
<span class="line"><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 恢复自动提交</span></span>
<span class="line"><span class="token keyword">SET</span> @<span class="token variable">@autocommit</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⚠️ <strong>注意</strong>：修改<code>@@autocommit</code>会影响当前会话的所有后续操作。</p><h3 id="_3-3-方式二-手动开启事务-推荐" tabindex="-1"><a class="header-anchor" href="#_3-3-方式二-手动开启事务-推荐"><span>3.3 方式二：手动开启事务（推荐）</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 开启事务</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 或</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 执行SQL操作</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 提交事务</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 或回滚事务</span></span>
<span class="line"><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-转账完整示例" tabindex="-1"><a class="header-anchor" href="#_3-4-转账完整示例"><span>3.4 转账完整示例</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建账户表</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> account <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    balance <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 插入测试数据</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> account <span class="token punctuation">(</span>name<span class="token punctuation">,</span> balance<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> </span>
<span class="line"><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 开始转账（张三转1000给李四）</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 1. 检查余额</span></span>
<span class="line"><span class="token keyword">SELECT</span> balance <span class="token keyword">FROM</span> account <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 张三账户-1000</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 李四账户+1000</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 4. 提交事务</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 验证结果</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> account<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 张三：1000，李四：2000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-回滚示例" tabindex="-1"><a class="header-anchor" href="#_3-5-回滚示例"><span>3.5 回滚示例</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 发现问题，回滚</span></span>
<span class="line"><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 数据恢复到事务开始前的状态</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> account<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、事务隔离级别" tabindex="-1"><a class="header-anchor" href="#四、事务隔离级别"><span>四、事务隔离级别</span></a></h2><h3 id="_4-1-为什么需要隔离级别" tabindex="-1"><a class="header-anchor" href="#_4-1-为什么需要隔离级别"><span>4.1 为什么需要隔离级别？</span></a></h3><p>多个事务并发执行时，如果不加控制，可能出现数据不一致的问题。</p><h3 id="_4-2-四种隔离级别" tabindex="-1"><a class="header-anchor" href="#_4-2-四种隔离级别"><span>4.2 四种隔离级别</span></a></h3><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td><strong>READ UNCOMMITTED</strong><br>读未提交</td><td>✅ 可能</td><td>✅ 可能</td><td>✅ 可能</td></tr><tr><td><strong>READ COMMITTED</strong><br>读已提交</td><td>❌ 不可能</td><td>✅ 可能</td><td>✅ 可能</td></tr><tr><td><strong>REPEATABLE READ</strong><br>可重复读（默认）</td><td>❌ 不可能</td><td>❌ 不可能</td><td>✅ 可能</td></tr><tr><td><strong>SERIALIZABLE</strong><br>串行化</td><td>❌ 不可能</td><td>❌ 不可能</td><td>❌ 不可能</td></tr></tbody></table><p><strong>隔离级别越高，数据一致性越好，但并发性能越差。</strong></p><h3 id="_4-3-查看和设置隔离级别" tabindex="-1"><a class="header-anchor" href="#_4-3-查看和设置隔离级别"><span>4.3 查看和设置隔离级别</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看当前会话隔离级别</span></span>
<span class="line"><span class="token keyword">SELECT</span> @<span class="token variable">@transaction_isolation</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看全局隔离级别</span></span>
<span class="line"><span class="token keyword">SELECT</span> @<span class="token variable">@global.transaction_isolation</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 设置会话隔离级别</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">COMMITTED</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">REPEATABLE</span> <span class="token keyword">READ</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 设置全局隔离级别</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">REPEATABLE</span> <span class="token keyword">READ</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、并发问题" tabindex="-1"><a class="header-anchor" href="#五、并发问题"><span>五、并发问题</span></a></h2><h3 id="_5-1-脏读-dirty-read" tabindex="-1"><a class="header-anchor" href="#_5-1-脏读-dirty-read"><span>5.1 脏读（Dirty Read）</span></a></h3><p><strong>定义</strong>：一个事务读取到另一个事务<strong>还未提交</strong>的数据。</p><p><strong>演示：</strong></p><table><thead><tr><th>时间</th><th>事务A</th><th>事务B</th></tr></thead><tbody><tr><td>T1</td><td><code>START TRANSACTION;</code></td><td></td></tr><tr><td>T2</td><td><code>UPDATE account SET balance = 1000 WHERE id = 1;</code></td><td></td></tr><tr><td>T3</td><td></td><td><code>START TRANSACTION;</code></td></tr><tr><td>T4</td><td></td><td><code>SELECT balance FROM account WHERE id = 1;</code><br><strong>读到1000（脏数据）</strong></td></tr><tr><td>T5</td><td><code>ROLLBACK;</code></td><td></td></tr><tr><td>T6</td><td></td><td><strong>数据实际是2000，读到的1000是脏数据！</strong></td></tr></tbody></table><p><strong>解决</strong>：设置隔离级别为 READ COMMITTED 或更高。</p><h3 id="_5-2-不可重复读-non-repeatable-read" tabindex="-1"><a class="header-anchor" href="#_5-2-不可重复读-non-repeatable-read"><span>5.2 不可重复读（Non-Repeatable Read）</span></a></h3><p><strong>定义</strong>：一个事务内多次读取同一数据，结果不一致（因为其他事务修改并提交了数据）。</p><p><strong>演示：</strong></p><table><thead><tr><th>时间</th><th>事务A</th><th>事务B</th></tr></thead><tbody><tr><td>T1</td><td><code>START TRANSACTION;</code></td><td></td></tr><tr><td>T2</td><td><code>SELECT balance FROM account WHERE id = 1;</code><br><strong>读到2000</strong></td><td></td></tr><tr><td>T3</td><td></td><td><code>START TRANSACTION;</code></td></tr><tr><td>T4</td><td></td><td><code>UPDATE account SET balance = 1000 WHERE id = 1;</code></td></tr><tr><td>T5</td><td></td><td><code>COMMIT;</code></td></tr><tr><td>T6</td><td><code>SELECT balance FROM account WHERE id = 1;</code><br><strong>读到1000（不一致）</strong></td><td></td></tr></tbody></table><p><strong>问题</strong>：同一事务内，两次查询结果不同。</p><p><strong>解决</strong>：设置隔离级别为 REPEATABLE READ 或更高。</p><h3 id="_5-3-幻读-phantom-read" tabindex="-1"><a class="header-anchor" href="#_5-3-幻读-phantom-read"><span>5.3 幻读（Phantom Read）</span></a></h3><p><strong>定义</strong>：一个事务内多次查询，后续查询发现了之前没有的记录（其他事务插入了新数据）。</p><p><strong>演示：</strong></p><table><thead><tr><th>时间</th><th>事务A</th><th>事务B</th></tr></thead><tbody><tr><td>T1</td><td><code>START TRANSACTION;</code></td><td></td></tr><tr><td>T2</td><td><code>SELECT * FROM account WHERE balance &gt; 1000;</code><br><strong>查到2条</strong></td><td></td></tr><tr><td>T3</td><td></td><td><code>START TRANSACTION;</code></td></tr><tr><td>T4</td><td></td><td><code>INSERT INTO account VALUES (3, &#39;王五&#39;, 1500);</code></td></tr><tr><td>T5</td><td></td><td><code>COMMIT;</code></td></tr><tr><td>T6</td><td><code>SELECT * FROM account WHERE balance &gt; 1000;</code><br><strong>查到3条（多了一条）</strong></td><td></td></tr></tbody></table><p><strong>问题</strong>：像看到了&quot;幻影&quot;，突然多出了记录。</p><p><strong>解决</strong>：设置隔离级别为 SERIALIZABLE。</p><h3 id="_5-4-并发问题对比" tabindex="-1"><a class="header-anchor" href="#_5-4-并发问题对比"><span>5.4 并发问题对比</span></a></h3><table><thead><tr><th>问题</th><th>发生原因</th><th>影响</th></tr></thead><tbody><tr><td><strong>脏读</strong></td><td>读到未提交的数据</td><td>读到的数据可能被回滚</td></tr><tr><td><strong>不可重复读</strong></td><td>读到已提交的修改</td><td>同一条记录多次读取不一致</td></tr><tr><td><strong>幻读</strong></td><td>读到已提交的插入</td><td>记录数量变化</td></tr></tbody></table><hr><h2 id="六、实战案例" tabindex="-1"><a class="header-anchor" href="#六、实战案例"><span>六、实战案例</span></a></h2><h3 id="案例1-转账业务" tabindex="-1"><a class="header-anchor" href="#案例1-转账业务"><span>案例1：转账业务</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建存储过程实现转账</span></span>
<span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> transfer<span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">IN</span> from_account <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">IN</span> to_account <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">IN</span> amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> from_balance <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 声明异常处理</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> <span class="token keyword">EXIT</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> SQLEXCEPTION</span>
<span class="line">    <span class="token keyword">BEGIN</span></span>
<span class="line">        <span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SELECT</span> <span class="token string">&#39;转账失败，已回滚&#39;</span> <span class="token keyword">AS</span> message<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 开启事务</span></span>
<span class="line">    <span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 检查余额</span></span>
<span class="line">    <span class="token keyword">SELECT</span> balance <span class="token keyword">INTO</span> from_balance </span>
<span class="line">    <span class="token keyword">FROM</span> account </span>
<span class="line">    <span class="token keyword">WHERE</span> name <span class="token operator">=</span> from_account<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">IF</span> from_balance <span class="token operator">&lt;</span> amount <span class="token keyword">THEN</span></span>
<span class="line">        SIGNAL SQLSTATE <span class="token string">&#39;45000&#39;</span> <span class="token keyword">SET</span> MESSAGE_TEXT <span class="token operator">=</span> <span class="token string">&#39;余额不足&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 转出</span></span>
<span class="line">    <span class="token keyword">UPDATE</span> account </span>
<span class="line">    <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> amount </span>
<span class="line">    <span class="token keyword">WHERE</span> name <span class="token operator">=</span> from_account<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 转入</span></span>
<span class="line">    <span class="token keyword">UPDATE</span> account </span>
<span class="line">    <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> amount </span>
<span class="line">    <span class="token keyword">WHERE</span> name <span class="token operator">=</span> to_account<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 提交事务</span></span>
<span class="line">    <span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token string">&#39;转账成功&#39;</span> <span class="token keyword">AS</span> message<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用存储过程</span></span>
<span class="line"><span class="token keyword">CALL</span> transfer<span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-秒杀场景" tabindex="-1"><a class="header-anchor" href="#案例2-秒杀场景"><span>案例2：秒杀场景</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 商品表</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> products <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    stock <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    sales <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 订单表</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    user_id <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 秒杀逻辑</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 1. 检查库存</span></span>
<span class="line"><span class="token keyword">SELECT</span> stock <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- 加锁</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 库存充足，扣减库存</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products </span>
<span class="line"><span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> sales <span class="token operator">=</span> sales <span class="token operator">+</span> <span class="token number">1</span> </span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">AND</span> stock <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 创建订单</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>product_id<span class="token punctuation">,</span> user_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 4. 提交事务</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例3-测试事务隔离级别" tabindex="-1"><a class="header-anchor" href="#案例3-测试事务隔离级别"><span>案例3：测试事务隔离级别</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 会话1：设置隔离级别</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> account <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：修改数据但不提交</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> balance <span class="token operator">=</span> <span class="token number">5000</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 回到会话1：再次查询</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> account <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  </span>
<span class="line"><span class="token comment">-- 读未提交级别：会读到5000（脏读）</span></span>
<span class="line"><span class="token comment">-- 读已提交级别：仍读到原值</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：提交</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话1：再次查询</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> account <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 现在都能读到5000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、本章总结" tabindex="-1"><a class="header-anchor" href="#七、本章总结"><span>七、本章总结</span></a></h2><h3 id="核心要点" tabindex="-1"><a class="header-anchor" href="#核心要点"><span>核心要点</span></a></h3><ol><li><strong>事务定义</strong>：一组操作的集合，要么全成功，要么全失败</li><li><strong>ACID特性</strong>：原子性、一致性、隔离性、持久性</li><li><strong>事务操作</strong>：START TRANSACTION、COMMIT、ROLLBACK</li><li><strong>隔离级别</strong>：读未提交、读已提交、可重复读、串行化</li><li><strong>并发问题</strong>：脏读、不可重复读、幻读</li></ol><h3 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h3><ol><li>✅ <strong>使用事务保护关键业务</strong>（转账、订单、库存）</li><li>✅ <strong>尽量缩短事务时间</strong>，避免长事务</li><li>✅ <strong>选择合适的隔离级别</strong>（默认REPEATABLE READ通常够用）</li><li>✅ <strong>注意死锁问题</strong>，合理设计事务逻辑</li><li>✅ <strong>使用异常处理</strong>，确保异常时能回滚</li></ol><h3 id="隔离级别选择" tabindex="-1"><a class="header-anchor" href="#隔离级别选择"><span>隔离级别选择</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">性能要求高，允许脏读？</span>
<span class="line">└─ 读未提交（不推荐）</span>
<span class="line"></span>
<span class="line">防止脏读？</span>
<span class="line">└─ 读已提交（Oracle、PostgreSQL默认）</span>
<span class="line"></span>
<span class="line">防止不可重复读？</span>
<span class="line">└─ 可重复读（MySQL默认，推荐）</span>
<span class="line"></span>
<span class="line">严格串行执行？</span>
<span class="line">└─ 串行化（性能最差，很少用）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 1. 创建测试数据</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> wallet <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">    user_id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    balance <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> wallet <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 实现转账（带异常处理）</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> wallet <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">101</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> wallet <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">102</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 测试回滚</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> wallet <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">101</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 发现错误，回滚</span></span>
<span class="line"><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 4. 测试不同隔离级别的效果</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 开启两个会话，观察脏读现象</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,116)),a("p",null,[a("strong",null,[s[1]||(s[1]=n("进阶篇完成！下一步：",-1)),o(e,{to:"/tutorials/database/mysql/%E7%AC%AC03%E7%AB%A0-%E9%AB%98%E7%BA%A7%E7%AF%87/07-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html"},{default:c(()=>[...s[0]||(s[0]=[n("第07章 - 存储引擎",-1)])]),_:1})]),s[2]||(s[2]=n(" →",-1))])])}const v=p(d,[["render",k]]),b=JSON.parse('{"path":"/tutorials/database/mysql/di02zhang-jinjiepian/06-shiwuguanli.html","title":"事务管理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 本章目录","slug":"📋-本章目录","link":"#📋-本章目录","children":[]},{"level":2,"title":"一、事务概述","slug":"一、事务概述","link":"#一、事务概述","children":[{"level":3,"title":"1.1 什么是事务？","slug":"_1-1-什么是事务","link":"#_1-1-什么是事务","children":[]},{"level":3,"title":"1.2 为什么需要事务？","slug":"_1-2-为什么需要事务","link":"#_1-2-为什么需要事务","children":[]},{"level":3,"title":"1.3 💼 实际工作中什么时候用事务？","slug":"_1-3-💼-实际工作中什么时候用事务","link":"#_1-3-💼-实际工作中什么时候用事务","children":[]}]},{"level":2,"title":"二、事务的ACID特性","slug":"二、事务的acid特性","link":"#二、事务的acid特性","children":[{"level":3,"title":"2.1 原子性（Atomicity）","slug":"_2-1-原子性-atomicity","link":"#_2-1-原子性-atomicity","children":[]},{"level":3,"title":"2.2 一致性（Consistency）","slug":"_2-2-一致性-consistency","link":"#_2-2-一致性-consistency","children":[]},{"level":3,"title":"2.3 隔离性（Isolation）","slug":"_2-3-隔离性-isolation","link":"#_2-3-隔离性-isolation","children":[]},{"level":3,"title":"2.4 持久性（Durability）","slug":"_2-4-持久性-durability","link":"#_2-4-持久性-durability","children":[]}]},{"level":2,"title":"三、事务操作","slug":"三、事务操作","link":"#三、事务操作","children":[{"level":3,"title":"3.1 查看事务提交方式","slug":"_3-1-查看事务提交方式","link":"#_3-1-查看事务提交方式","children":[]},{"level":3,"title":"3.2 方式一：控制自动提交","slug":"_3-2-方式一-控制自动提交","link":"#_3-2-方式一-控制自动提交","children":[]},{"level":3,"title":"3.3 方式二：手动开启事务（推荐）","slug":"_3-3-方式二-手动开启事务-推荐","link":"#_3-3-方式二-手动开启事务-推荐","children":[]},{"level":3,"title":"3.4 转账完整示例","slug":"_3-4-转账完整示例","link":"#_3-4-转账完整示例","children":[]},{"level":3,"title":"3.5 回滚示例","slug":"_3-5-回滚示例","link":"#_3-5-回滚示例","children":[]}]},{"level":2,"title":"四、事务隔离级别","slug":"四、事务隔离级别","link":"#四、事务隔离级别","children":[{"level":3,"title":"4.1 为什么需要隔离级别？","slug":"_4-1-为什么需要隔离级别","link":"#_4-1-为什么需要隔离级别","children":[]},{"level":3,"title":"4.2 四种隔离级别","slug":"_4-2-四种隔离级别","link":"#_4-2-四种隔离级别","children":[]},{"level":3,"title":"4.3 查看和设置隔离级别","slug":"_4-3-查看和设置隔离级别","link":"#_4-3-查看和设置隔离级别","children":[]}]},{"level":2,"title":"五、并发问题","slug":"五、并发问题","link":"#五、并发问题","children":[{"level":3,"title":"5.1 脏读（Dirty Read）","slug":"_5-1-脏读-dirty-read","link":"#_5-1-脏读-dirty-read","children":[]},{"level":3,"title":"5.2 不可重复读（Non-Repeatable Read）","slug":"_5-2-不可重复读-non-repeatable-read","link":"#_5-2-不可重复读-non-repeatable-read","children":[]},{"level":3,"title":"5.3 幻读（Phantom Read）","slug":"_5-3-幻读-phantom-read","link":"#_5-3-幻读-phantom-read","children":[]},{"level":3,"title":"5.4 并发问题对比","slug":"_5-4-并发问题对比","link":"#_5-4-并发问题对比","children":[]}]},{"level":2,"title":"六、实战案例","slug":"六、实战案例","link":"#六、实战案例","children":[{"level":3,"title":"案例1：转账业务","slug":"案例1-转账业务","link":"#案例1-转账业务","children":[]},{"level":3,"title":"案例2：秒杀场景","slug":"案例2-秒杀场景","link":"#案例2-秒杀场景","children":[]},{"level":3,"title":"案例3：测试事务隔离级别","slug":"案例3-测试事务隔离级别","link":"#案例3-测试事务隔离级别","children":[]}]},{"level":2,"title":"七、本章总结","slug":"七、本章总结","link":"#七、本章总结","children":[{"level":3,"title":"核心要点","slug":"核心要点","link":"#核心要点","children":[]},{"level":3,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]},{"level":3,"title":"隔离级别选择","slug":"隔离级别选择","link":"#隔离级别选择","children":[]}]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/database/mysql/第02章-进阶篇/06-事务管理.md"}');export{v as comp,b as data};
