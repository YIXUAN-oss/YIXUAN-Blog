import{_ as o,c as r,d as t,e as n,b as e,w as i,f as a,r as c,o as d}from"./app-QnWV-YHu.js";const u={},v={id:"第一章-spring-基础入门",tabindex:"-1"},k={class:"header-anchor",href:"#第一章-spring-基础入门"},g={id:"第二章-spring-核心注解",tabindex:"-1"},m={class:"header-anchor",href:"#第二章-spring-核心注解"},b={id:"第三章-spring-aop",tabindex:"-1"},h={class:"header-anchor",href:"#第三章-spring-aop"},S={id:"第四章-spring-事务管理",tabindex:"-1"},x={class:"header-anchor",href:"#第四章-spring-事务管理"},f={id:"第五章-spring-面试题集",tabindex:"-1"},y={class:"header-anchor",href:"#第五章-spring-面试题集"},w={href:"https://spring.io/projects/spring-framework",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.spring.io/spring-framework/reference/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://spring.io/blog",target:"_blank",rel:"noopener noreferrer"},D={href:"https://spring.io/guides",target:"_blank",rel:"noopener noreferrer"};function C(I,s){const l=c("RouteLink"),p=c("ExternalLinkIcon");return d(),r("div",null,[s[12]||(s[12]=t('<h1 id="spring-框架教程" tabindex="-1"><a class="header-anchor" href="#spring-框架教程"><span>Spring 框架教程</span></a></h1><blockquote><p>从零开始掌握 Spring 框架，成为 Java 企业级开发专家</p></blockquote><h2 id="📚-教程简介" tabindex="-1"><a class="header-anchor" href="#📚-教程简介"><span>📚 教程简介</span></a></h2><p>本教程将带你系统学习 Spring 框架，从基础概念到实战应用，涵盖 IoC、DI、AOP、事务管理等核心知识点。Spring 是 Java 企业级开发的基石，掌握 Spring 是每个 Java 开发者的必备技能。</p><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>✅ 深入理解 IoC 和 DI 的核心思想</li><li>✅ 熟练掌握 Spring Bean 的管理</li><li>✅ 掌握 AOP 面向切面编程</li><li>✅ 熟悉 Spring 事务管理机制</li><li>✅ 掌握 Spring 常用注解</li><li>✅ 能够进行 Spring 项目开发</li><li>✅ 应对常见的 Spring 面试题</li></ul><h2 id="📖-教程目录" tabindex="-1"><a class="header-anchor" href="#📖-教程目录"><span>📖 教程目录</span></a></h2>',7)),n("h3",v,[n("a",k,[n("span",null,[e(l,{to:"/tutorials/java-backend/spring/1.Spring%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.html"},{default:i(()=>[...s[0]||(s[0]=[a("第一章：Spring 基础入门",-1)])]),_:1})])])]),s[13]||(s[13]=n("ul",null,[n("li",null,"Spring 是什么？Spring 的核心特性"),n("li",null,"Spring 框架体系结构"),n("li",null,"IoC 控制反转详解"),n("li",null,"DI 依赖注入详解"),n("li",null,"Bean 的配置与管理"),n("li",null,"创建第一个 Spring 项目")],-1)),n("h3",g,[n("a",m,[n("span",null,[e(l,{to:"/tutorials/java-backend/spring/2.Spring%E6%A0%B8%E5%BF%83%E6%B3%A8%E8%A7%A3.html"},{default:i(()=>[...s[1]||(s[1]=[a("第二章：Spring 核心注解",-1)])]),_:1})])])]),s[14]||(s[14]=n("ul",null,[n("li",null,"组件注解：@Component、@Service、@Repository、@Controller"),n("li",null,"依赖注入注解：@Autowired、@Resource、@Qualifier"),n("li",null,"配置注解：@Configuration、@Bean、@ComponentScan"),n("li",null,"属性注解：@Value、@PropertySource"),n("li",null,"作用域注解：@Scope"),n("li",null,"生命周期注解：@PostConstruct、@PreDestroy")],-1)),n("h3",b,[n("a",h,[n("span",null,[e(l,{to:"/tutorials/java-backend/spring/3.SpringAOP.html"},{default:i(()=>[...s[2]||(s[2]=[a("第三章：Spring AOP",-1)])]),_:1})])])]),s[15]||(s[15]=n("ul",null,[n("li",null,"AOP 核心概念"),n("li",null,"AOP 的实现方式（JDK 动态代理 vs CGLIB）"),n("li",null,"切点表达式详解"),n("li",null,"通知类型：前置、后置、环绕、异常、最终"),n("li",null,"AOP 实战应用（日志、权限、事务）"),n("li",null,"AOP 常见问题")],-1)),n("h3",S,[n("a",x,[n("span",null,[e(l,{to:"/tutorials/java-backend/spring/4.Spring%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86.html"},{default:i(()=>[...s[3]||(s[3]=[a("第四章：Spring 事务管理",-1)])]),_:1})])])]),s[16]||(s[16]=n("ul",null,[n("li",null,"事务的基本概念"),n("li",null,"编程式事务 vs 声明式事务"),n("li",null,"@Transactional 注解详解"),n("li",null,"事务传播行为"),n("li",null,"事务隔离级别"),n("li",null,"事务失效场景及解决方案")],-1)),n("h3",f,[n("a",y,[n("span",null,[e(l,{to:"/tutorials/java-backend/spring/5.Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E9%9B%86.html"},{default:i(()=>[...s[4]||(s[4]=[a("第五章：Spring 面试题集",-1)])]),_:1})])])]),s[17]||(s[17]=t(`<ul><li>IoC 和 DI 相关面试题</li><li>Bean 生命周期面试题</li><li>AOP 相关面试题</li><li>事务管理面试题</li><li>高频面试题解析</li></ul><h2 id="🚀-快速开始" tabindex="-1"><a class="header-anchor" href="#🚀-快速开始"><span>🚀 快速开始</span></a></h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3><p><strong>前置要求：</strong></p><ul><li>JDK 8 或更高版本</li><li>Maven 3.5+</li><li>IDE（推荐 IntelliJ IDEA）</li></ul><h3 id="创建第一个-spring-项目" tabindex="-1"><a class="header-anchor" href="#创建第一个-spring-项目"><span>创建第一个 Spring 项目</span></a></h3><p><strong>步骤1：创建 Maven 项目</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mvn archetype:generate <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.example <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>spring-demo <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DarchetypeArtifactId</span><span class="token operator">=</span>maven-archetype-quickstart <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DinteractiveMode</span><span class="token operator">=</span>false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤2：添加 Spring 依赖</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- Spring Context --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">&lt;!-- JUnit --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤3：创建 Bean</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Spring!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤4：创建 Spring 配置</strong></p><p><strong>方式1：XML 配置</strong></p><p><code>applicationContext.xml</code>:</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span></span>
<span class="line">       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span></span>
<span class="line">       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans</span>
<span class="line">       http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.service.UserService<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方式2：注解配置（推荐）</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.example&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Spring!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤5：测试运行</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// XML 方式</span></span>
<span class="line">        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> </span>
<span class="line">            <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;applicationContext.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 注解方式</span></span>
<span class="line">        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> </span>
<span class="line">            <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">UserService</span> userService <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        userService<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-学习建议" tabindex="-1"><a class="header-anchor" href="#💡-学习建议"><span>💡 学习建议</span></a></h2><ol><li><strong>理解核心思想</strong> - 深入理解 IoC 和 DI，这是 Spring 的基础</li><li><strong>动手实践</strong> - 每学完一个知识点，立即编码实践</li><li><strong>对比学习</strong> - 对比 XML 配置和注解配置的差异</li><li><strong>阅读源码</strong> - 有能力的同学可以阅读 Spring 源码</li><li><strong>循序渐进</strong> - 从简单到复杂，逐步掌握</li></ol><h2 id="🌟-spring-核心概念速览" tabindex="-1"><a class="header-anchor" href="#🌟-spring-核心概念速览"><span>🌟 Spring 核心概念速览</span></a></h2><h3 id="ioc-控制反转" tabindex="-1"><a class="header-anchor" href="#ioc-控制反转"><span>IoC（控制反转）</span></a></h3><p><strong>传统方式：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 自己创建依赖</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Spring IoC：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDao<span class="token punctuation">;</span> <span class="token comment">// Spring 注入依赖</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>优势：</strong></p><ul><li>解耦：对象之间的依赖关系由 Spring 管理</li><li>易测试：可以方便地注入 Mock 对象</li><li>易维护：修改依赖不需要改动代码</li></ul><h3 id="di-依赖注入" tabindex="-1"><a class="header-anchor" href="#di-依赖注入"><span>DI（依赖注入）</span></a></h3><p><strong>三种注入方式：</strong></p><ol><li><strong>构造器注入（推荐）</strong></li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserDao</span> userDao<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token class-name">UserDao</span> userDao<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>userDao <span class="token operator">=</span> userDao<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>Setter 注入</strong></li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDao<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserDao</span><span class="token punctuation">(</span><span class="token class-name">UserDao</span> userDao<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>userDao <span class="token operator">=</span> userDao<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>字段注入（不推荐）</strong></li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDao<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bean-作用域" tabindex="-1"><a class="header-anchor" href="#bean-作用域"><span>Bean 作用域</span></a></h3><table><thead><tr><th>作用域</th><th>说明</th></tr></thead><tbody><tr><td>singleton</td><td>单例（默认）</td></tr><tr><td>prototype</td><td>每次获取创建新实例</td></tr><tr><td>request</td><td>Web 应用中每个请求一个实例</td></tr><tr><td>session</td><td>Web 应用中每个会话一个实例</td></tr></tbody></table><h3 id="aop-核心概念" tabindex="-1"><a class="header-anchor" href="#aop-核心概念"><span>AOP 核心概念</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">切面（Aspect）= 切点（Pointcut） + 通知（Advice）</span>
<span class="line"></span>
<span class="line">切点：在哪里切入</span>
<span class="line">通知：切入后做什么</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>通知类型：</strong></p><ul><li>@Before：前置通知</li><li>@After：后置通知</li><li>@AfterReturning：返回后通知</li><li>@AfterThrowing：异常通知</li><li>@Around：环绕通知</li></ul><h2 id="📚-spring-体系结构" tabindex="-1"><a class="header-anchor" href="#📚-spring-体系结构"><span>📚 Spring 体系结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Spring Framework</span>
<span class="line">├── Core Container (核心容器)</span>
<span class="line">│   ├── Beans</span>
<span class="line">│   ├── Core</span>
<span class="line">│   ├── Context</span>
<span class="line">│   └── SpEL</span>
<span class="line">│</span>
<span class="line">├── AOP (面向切面)</span>
<span class="line">│   ├── AOP</span>
<span class="line">│   └── Aspects</span>
<span class="line">│</span>
<span class="line">├── Data Access (数据访问)</span>
<span class="line">│   ├── JDBC</span>
<span class="line">│   ├── ORM</span>
<span class="line">│   ├── Transactions</span>
<span class="line">│   └── OXM</span>
<span class="line">│</span>
<span class="line">├── Web (Web 层)</span>
<span class="line">│   ├── Web</span>
<span class="line">│   ├── Servlet (Spring MVC)</span>
<span class="line">│   ├── WebSocket</span>
<span class="line">│   └── Portlet</span>
<span class="line">│</span>
<span class="line">└── Test (测试)</span>
<span class="line">    └── Test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🏗️-spring-项目结构" tabindex="-1"><a class="header-anchor" href="#🏗️-spring-项目结构"><span>🏗️ Spring 项目结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">spring-demo/</span>
<span class="line">├── src/</span>
<span class="line">│   ├── main/</span>
<span class="line">│   │   ├── java/</span>
<span class="line">│   │   │   └── com/example/</span>
<span class="line">│   │   │       ├── config/          # 配置类</span>
<span class="line">│   │   │       │   └── AppConfig.java</span>
<span class="line">│   │   │       ├── controller/      # 控制层</span>
<span class="line">│   │   │       ├── service/         # 业务层</span>
<span class="line">│   │   │       │   ├── UserService.java</span>
<span class="line">│   │   │       │   └── impl/</span>
<span class="line">│   │   │       │       └── UserServiceImpl.java</span>
<span class="line">│   │   │       ├── dao/             # 数据访问层</span>
<span class="line">│   │   │       │   └── UserDao.java</span>
<span class="line">│   │   │       ├── entity/          # 实体类</span>
<span class="line">│   │   │       │   └── User.java</span>
<span class="line">│   │   │       └── aspect/          # 切面类</span>
<span class="line">│   │   │           └── LogAspect.java</span>
<span class="line">│   │   └── resources/</span>
<span class="line">│   │       ├── applicationContext.xml</span>
<span class="line">│   │       └── application.properties</span>
<span class="line">│   └── test/</span>
<span class="line">│       └── java/</span>
<span class="line">└── pom.xml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-推荐资源" tabindex="-1"><a class="header-anchor" href="#📚-推荐资源"><span>📚 推荐资源</span></a></h2><h3 id="官方文档" tabindex="-1"><a class="header-anchor" href="#官方文档"><span>官方文档</span></a></h3>`,50)),n("ul",null,[n("li",null,[n("a",w,[s[5]||(s[5]=a("Spring Framework 官方文档",-1)),e(p)])]),n("li",null,[n("a",A,[s[6]||(s[6]=a("Spring Framework 参考文档",-1)),e(p)])])]),s[18]||(s[18]=n("h3",{id:"推荐书籍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#推荐书籍"},[n("span",null,"推荐书籍")])],-1)),s[19]||(s[19]=n("ul",null,[n("li",null,"《Spring 实战》（第 5 版）"),n("li",null,"《Spring 源码深度解析》"),n("li",null,"《精通 Spring 4.x 企业应用开发实战》")],-1)),s[20]||(s[20]=n("h3",{id:"在线资源",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在线资源"},[n("span",null,"在线资源")])],-1)),n("ul",null,[n("li",null,[n("a",j,[s[7]||(s[7]=a("Spring 官方博客",-1)),e(p)])]),n("li",null,[n("a",D,[s[8]||(s[8]=a("Spring Guides",-1)),e(p)])])]),s[21]||(s[21]=t(`<h2 id="⚠️-注意事项" tabindex="-1"><a class="header-anchor" href="#⚠️-注意事项"><span>⚠️ 注意事项</span></a></h2><ol><li><strong>版本选择</strong> - 建议使用 Spring 5.x 版本，与 Spring Boot 2.x 兼容</li><li><strong>注解优先</strong> - 优先使用注解配置，XML 配置作为了解</li><li><strong>依赖注入</strong> - 优先使用构造器注入，保证不可变性</li><li><strong>事务管理</strong> - 理解事务传播行为，避免事务失效</li><li><strong>AOP 使用</strong> - 合理使用 AOP，避免过度使用</li></ol><h2 id="🎯-学习路线图" tabindex="-1"><a class="header-anchor" href="#🎯-学习路线图"><span>🎯 学习路线图</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">第1周：Spring 基础</span>
<span class="line">├─ IoC 和 DI 概念</span>
<span class="line">├─ Bean 配置和管理</span>
<span class="line">├─ 注解配置</span>
<span class="line">└─ 依赖注入方式</span>
<span class="line"></span>
<span class="line">第2周：Spring 注解</span>
<span class="line">├─ 组件注解</span>
<span class="line">├─ 依赖注入注解</span>
<span class="line">├─ 配置注解</span>
<span class="line">└─ 生命周期注解</span>
<span class="line"></span>
<span class="line">第3周：Spring AOP</span>
<span class="line">├─ AOP 核心概念</span>
<span class="line">├─ 切点表达式</span>
<span class="line">├─ 通知类型</span>
<span class="line">└─ AOP 实战</span>
<span class="line"></span>
<span class="line">第4周：Spring 事务</span>
<span class="line">├─ 事务管理概念</span>
<span class="line">├─ @Transactional 使用</span>
<span class="line">├─ 事务传播行为</span>
<span class="line">└─ 事务失效场景</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🤝-spring-vs-spring-boot" tabindex="-1"><a class="header-anchor" href="#🤝-spring-vs-spring-boot"><span>🤝 Spring vs Spring Boot</span></a></h2><table><thead><tr><th>特性</th><th>Spring</th><th>Spring Boot</th></tr></thead><tbody><tr><td>配置</td><td>需要大量 XML/注解配置</td><td>自动配置，开箱即用</td></tr><tr><td>依赖管理</td><td>手动管理依赖版本</td><td>starter 统一管理</td></tr><tr><td>内嵌服务器</td><td>需要外部 Tomcat</td><td>内置 Tomcat/Jetty</td></tr><tr><td>学习曲线</td><td>陡峭</td><td>平缓</td></tr><tr><td>开发效率</td><td>一般</td><td>高</td></tr><tr><td>适用场景</td><td>传统企业级应用</td><td>微服务、快速开发</td></tr></tbody></table><p><strong>学习建议：</strong> 先学 Spring 理解原理，再学 Spring Boot 提高效率。</p><h2 id="📄-版权说明" tabindex="-1"><a class="header-anchor" href="#📄-版权说明"><span>📄 版权说明</span></a></h2><p>本教程仅供学习使用，欢迎分享传播。</p><hr><p><strong>准备好了吗？让我们开始 Spring 学习之旅！🚀</strong></p>`,11)),n("p",null,[n("strong",null,[s[10]||(s[10]=a("建议从 ",-1)),e(l,{to:"/tutorials/java-backend/spring/1.Spring%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.html"},{default:i(()=>[...s[9]||(s[9]=[a("第一章：Spring 基础入门",-1)])]),_:1}),s[11]||(s[11]=a(" 开始学习",-1))])])])}const B=o(u,[["render",C]]),E=JSON.parse('{"path":"/tutorials/java-backend/spring/","title":"Spring 框架教程","lang":"zh-CN","frontmatter":{"title":"Spring 框架教程","autoGroup":false,"autoSort":false,"sidebarDepth":0},"headers":[{"level":2,"title":"📚 教程简介","slug":"📚-教程简介","link":"#📚-教程简介","children":[]},{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"📖 教程目录","slug":"📖-教程目录","link":"#📖-教程目录","children":[{"level":3,"title":"第一章：Spring 基础入门","slug":"第一章-spring-基础入门","link":"#第一章-spring-基础入门","children":[]},{"level":3,"title":"第二章：Spring 核心注解","slug":"第二章-spring-核心注解","link":"#第二章-spring-核心注解","children":[]},{"level":3,"title":"第三章：Spring AOP","slug":"第三章-spring-aop","link":"#第三章-spring-aop","children":[]},{"level":3,"title":"第四章：Spring 事务管理","slug":"第四章-spring-事务管理","link":"#第四章-spring-事务管理","children":[]},{"level":3,"title":"第五章：Spring 面试题集","slug":"第五章-spring-面试题集","link":"#第五章-spring-面试题集","children":[]}]},{"level":2,"title":"🚀 快速开始","slug":"🚀-快速开始","link":"#🚀-快速开始","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"创建第一个 Spring 项目","slug":"创建第一个-spring-项目","link":"#创建第一个-spring-项目","children":[]}]},{"level":2,"title":"💡 学习建议","slug":"💡-学习建议","link":"#💡-学习建议","children":[]},{"level":2,"title":"🌟 Spring 核心概念速览","slug":"🌟-spring-核心概念速览","link":"#🌟-spring-核心概念速览","children":[{"level":3,"title":"IoC（控制反转）","slug":"ioc-控制反转","link":"#ioc-控制反转","children":[]},{"level":3,"title":"DI（依赖注入）","slug":"di-依赖注入","link":"#di-依赖注入","children":[]},{"level":3,"title":"Bean 作用域","slug":"bean-作用域","link":"#bean-作用域","children":[]},{"level":3,"title":"AOP 核心概念","slug":"aop-核心概念","link":"#aop-核心概念","children":[]}]},{"level":2,"title":"📚 Spring 体系结构","slug":"📚-spring-体系结构","link":"#📚-spring-体系结构","children":[]},{"level":2,"title":"🏗️ Spring 项目结构","slug":"🏗️-spring-项目结构","link":"#🏗️-spring-项目结构","children":[]},{"level":2,"title":"📚 推荐资源","slug":"📚-推荐资源","link":"#📚-推荐资源","children":[{"level":3,"title":"官方文档","slug":"官方文档","link":"#官方文档","children":[]},{"level":3,"title":"推荐书籍","slug":"推荐书籍","link":"#推荐书籍","children":[]},{"level":3,"title":"在线资源","slug":"在线资源","link":"#在线资源","children":[]}]},{"level":2,"title":"⚠️ 注意事项","slug":"⚠️-注意事项","link":"#⚠️-注意事项","children":[]},{"level":2,"title":"🎯 学习路线图","slug":"🎯-学习路线图","link":"#🎯-学习路线图","children":[]},{"level":2,"title":"🤝 Spring vs Spring Boot","slug":"🤝-spring-vs-spring-boot","link":"#🤝-spring-vs-spring-boot","children":[]},{"level":2,"title":"📄 版权说明","slug":"📄-版权说明","link":"#📄-版权说明","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/spring/README.md"}');export{B as comp,E as data};
