import{_ as o,c as u,d as p,e as s,b as e,w as i,f as a,r as c,o as d}from"./app-B1lgwjy6.js";const r={},k={id:"第一章-redis-基础",tabindex:"-1"},m={class:"header-anchor",href:"#第一章-redis-基础"},v={id:"第二章-五大数据类型",tabindex:"-1"},b={class:"header-anchor",href:"#第二章-五大数据类型"},h={id:"第三章-持久化机制",tabindex:"-1"},g={class:"header-anchor",href:"#第三章-持久化机制"},f={id:"第四章-spring-boot-整合-redis",tabindex:"-1"},y={class:"header-anchor",href:"#第四章-spring-boot-整合-redis"},R={id:"第五章-缓存策略与实战",tabindex:"-1"},E={class:"header-anchor",href:"#第五章-缓存策略与实战"},S={id:"第六章-redis-集群与高可用",tabindex:"-1"},x={class:"header-anchor",href:"#第六章-redis-集群与高可用"},w={href:"https://redis.io/documentation",target:"_blank",rel:"noopener noreferrer"},j={href:"http://redisdoc.com/",target:"_blank",rel:"noopener noreferrer"};function A(B,n){const l=c("RouteLink"),t=c("ExternalLinkIcon");return d(),u("div",null,[n[13]||(n[13]=p('<h1 id="redis-缓存数据库教程" tabindex="-1"><a class="header-anchor" href="#redis-缓存数据库教程"><span>Redis 缓存数据库教程</span></a></h1><blockquote><p>掌握高性能缓存技术，提升系统性能与架构能力</p></blockquote><h2 id="📚-教程简介" tabindex="-1"><a class="header-anchor" href="#📚-教程简介"><span>📚 教程简介</span></a></h2><p>本教程将带你系统学习 Redis 缓存数据库，从基础概念到企业级应用，涵盖高性能缓存、分布式架构、集群部署等核心技术。Redis 是目前最流行的 NoSQL 数据库之一，也是互联网公司必备的技术栈，掌握 Redis 是每个后端开发者的必备技能。</p><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>✅ 理解 Redis 的核心原理和应用场景</li><li>✅ 熟练掌握 Redis 五大数据类型及操作命令</li><li>✅ 掌握 Redis 持久化机制和数据安全</li><li>✅ 熟悉 Spring Boot 整合 Redis 开发</li><li>✅ 能够解决缓存穿透、击穿、雪崩等问题</li><li>✅ 掌握 Redis 集群部署和高可用方案</li><li>✅ 应对常见的 Redis 面试题</li></ul><h2 id="📖-教程目录" tabindex="-1"><a class="header-anchor" href="#📖-教程目录"><span>📖 教程目录</span></a></h2>',7)),s("h3",k,[s("a",m,[s("span",null,[e(l,{to:"/tutorials/java-backend/redis/01-Redis%E5%9F%BA%E7%A1%80.html"},{default:i(()=>[...n[0]||(n[0]=[a("第一章：Redis 基础",-1)])]),_:1})])])]),n[14]||(n[14]=s("ul",null,[s("li",null,"Redis 是什么？为什么选择 Redis？"),s("li",null,"Redis 的特性与优势"),s("li",null,"Redis 安装与环境配置"),s("li",null,"Redis 数据类型概述"),s("li",null,"基本命令与客户端使用"),s("li",null,"Redis 配置文件详解")],-1)),s("h3",v,[s("a",b,[s("span",null,[e(l,{to:"/tutorials/java-backend/redis/02-%E4%BA%94%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"},{default:i(()=>[...n[1]||(n[1]=[a("第二章：五大数据类型",-1)])]),_:1})])])]),n[15]||(n[15]=s("ul",null,[s("li",null,"String（字符串）- 最基础的数据类型"),s("li",null,"List（列表）- 消息队列与时间轴"),s("li",null,"Set（集合）- 去重与集合运算"),s("li",null,"Hash（哈希）- 对象存储的最佳选择"),s("li",null,"Zset（有序集合）- 排行榜与延时队列"),s("li",null,"各类型的应用场景与最佳实践")],-1)),s("h3",h,[s("a",g,[s("span",null,[e(l,{to:"/tutorials/java-backend/redis/03-%E6%8C%81%E4%B9%85%E5%8C%96%E6%9C%BA%E5%88%B6.html"},{default:i(()=>[...n[2]||(n[2]=[a("第三章：持久化机制",-1)])]),_:1})])])]),n[16]||(n[16]=s("ul",null,[s("li",null,"RDB 持久化 - 快照存储"),s("li",null,"AOF 持久化 - 日志记录"),s("li",null,"混合持久化 - 最佳方案"),s("li",null,"持久化策略选择与对比"),s("li",null,"数据恢复与备份"),s("li",null,"持久化性能优化")],-1)),s("h3",f,[s("a",y,[s("span",null,[e(l,{to:"/tutorials/java-backend/redis/04-SpringBoot%E6%95%B4%E5%90%88Redis.html"},{default:i(()=>[...n[3]||(n[3]=[a("第四章：Spring Boot 整合 Redis",-1)])]),_:1})])])]),n[17]||(n[17]=s("ul",null,[s("li",null,"Spring Data Redis 简介"),s("li",null,"RedisTemplate 使用详解"),s("li",null,"序列化配置与优化"),s("li",null,"缓存注解（@Cacheable、@CacheEvict 等）"),s("li",null,"实战案例：用户缓存系统"),s("li",null,"分布式锁实现")],-1)),s("h3",R,[s("a",E,[s("span",null,[e(l,{to:"/tutorials/java-backend/redis/05-%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5%E4%B8%8E%E5%AE%9E%E6%88%98.html"},{default:i(()=>[...n[4]||(n[4]=[a("第五章：缓存策略与实战",-1)])]),_:1})])])]),n[18]||(n[18]=s("ul",null,[s("li",null,"缓存穿透 - 布隆过滤器解决方案"),s("li",null,"缓存击穿 - 热点数据保护"),s("li",null,"缓存雪崩 - 过期时间策略"),s("li",null,"缓存更新策略 - Cache Aside Pattern"),s("li",null,"双写一致性问题"),s("li",null,"缓存最佳实践")],-1)),s("h3",S,[s("a",x,[s("span",null,[e(l,{to:"/tutorials/java-backend/redis/06-Redis%E9%9B%86%E7%BE%A4%E4%B8%8E%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:i(()=>[...n[5]||(n[5]=[a("第六章：Redis 集群与高可用",-1)])]),_:1})])])]),n[19]||(n[19]=p(`<ul><li>主从复制 - 读写分离</li><li>哨兵模式 - 自动故障转移</li><li>Redis Cluster - 分布式集群</li><li>集群方案对比与选择</li><li>高可用架构设计</li><li>监控与运维</li></ul><h2 id="🚀-快速开始" tabindex="-1"><a class="header-anchor" href="#🚀-快速开始"><span>🚀 快速开始</span></a></h2><h3 id="安装-redis" tabindex="-1"><a class="header-anchor" href="#安装-redis"><span>安装 Redis</span></a></h3><p><strong>前置要求：</strong></p><ul><li>支持的操作系统（Linux、macOS、Windows）</li></ul><p><strong>Windows：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 1. 下载 Redis for Windows</span></span>
<span class="line">https://github.com/microsoftarchive/redis/releases</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 解压到指定目录（如：C:\\Program Files\\Redis）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 启动 Redis 服务</span></span>
<span class="line">redis-server.exe redis.windows.conf</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 启动客户端测试</span></span>
<span class="line">redis-cli.exe</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Linux：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Ubuntu/Debian</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> update</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> redis-server</span>
<span class="line"></span>
<span class="line"><span class="token comment"># CentOS/RHEL</span></span>
<span class="line"><span class="token function">sudo</span> yum <span class="token function">install</span> redis</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 或者编译安装</span></span>
<span class="line"><span class="token function">wget</span> http://download.redis.io/releases/redis-7.0.0.tar.gz</span>
<span class="line"><span class="token function">tar</span> xzf redis-7.0.0.tar.gz</span>
<span class="line"><span class="token builtin class-name">cd</span> redis-7.0.0</span>
<span class="line"><span class="token function">make</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动 Redis</span></span>
<span class="line">redis-server</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 客户端连接</span></span>
<span class="line">redis-cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>macOS：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用 Homebrew</span></span>
<span class="line">brew <span class="token function">install</span> redis</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动 Redis</span></span>
<span class="line">brew services start redis</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 客户端连接</span></span>
<span class="line">redis-cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 连接 Redis</span></span>
<span class="line">redis-cli</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 字符串操作</span></span>
<span class="line">SET name <span class="token string">&quot;John&quot;</span></span>
<span class="line">GET name</span>
<span class="line">INCR counter</span>
<span class="line">EXPIRE name <span class="token number">60</span></span>
<span class="line">TTL name</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 列表操作</span></span>
<span class="line">LPUSH mylist <span class="token string">&quot;item1&quot;</span></span>
<span class="line">RPUSH mylist <span class="token string">&quot;item2&quot;</span></span>
<span class="line">LRANGE mylist <span class="token number">0</span> <span class="token parameter variable">-1</span></span>
<span class="line">LPOP mylist</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 哈希操作</span></span>
<span class="line">HSET user:1 name <span class="token string">&quot;John&quot;</span></span>
<span class="line">HSET user:1 age <span class="token number">30</span></span>
<span class="line">HGETALL user:1</span>
<span class="line">HGET user:1 name</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 集合操作</span></span>
<span class="line">SADD myset <span class="token string">&quot;member1&quot;</span></span>
<span class="line">SADD myset <span class="token string">&quot;member2&quot;</span></span>
<span class="line">SMEMBERS myset</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 有序集合操作</span></span>
<span class="line">ZADD rank <span class="token number">100</span> <span class="token string">&quot;user1&quot;</span></span>
<span class="line">ZADD rank <span class="token number">200</span> <span class="token string">&quot;user2&quot;</span></span>
<span class="line">ZRANGE rank <span class="token number">0</span> <span class="token parameter variable">-1</span> WITHSCORES</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-学习建议" tabindex="-1"><a class="header-anchor" href="#💡-学习建议"><span>💡 学习建议</span></a></h2><ol><li><strong>理论与实践结合</strong> - 先理解 Redis 的工作原理，再动手操作</li><li><strong>命令多练习</strong> - 熟练掌握各种数据类型的命令</li><li><strong>关注性能</strong> - 学会分析 Redis 性能指标</li><li><strong>场景驱动</strong> - 结合实际业务场景学习</li><li><strong>深入源码</strong> - 有能力的同学可以研究 Redis 源码</li></ol><h2 id="🌟-redis-常用命令速查" tabindex="-1"><a class="header-anchor" href="#🌟-redis-常用命令速查"><span>🌟 Redis 常用命令速查</span></a></h2><h3 id="连接与管理" tabindex="-1"><a class="header-anchor" href="#连接与管理"><span>连接与管理</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">redis-cli              <span class="token comment"># 连接本地 Redis</span></span>
<span class="line">redis-cli <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">6379</span>   <span class="token comment"># 连接指定 Redis</span></span>
<span class="line">AUTH password          <span class="token comment"># 认证</span></span>
<span class="line">PING                   <span class="token comment"># 测试连接</span></span>
<span class="line">INFO                   <span class="token comment"># 查看服务器信息</span></span>
<span class="line">CONFIG GET *           <span class="token comment"># 查看配置</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="键操作" tabindex="-1"><a class="header-anchor" href="#键操作"><span>键操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">KEYS pattern           <span class="token comment"># 查找键（生产环境慎用）</span></span>
<span class="line">EXISTS key             <span class="token comment"># 检查键是否存在</span></span>
<span class="line">DEL key                <span class="token comment"># 删除键</span></span>
<span class="line">EXPIRE key seconds     <span class="token comment"># 设置过期时间</span></span>
<span class="line">TTL key                <span class="token comment"># 查看剩余时间</span></span>
<span class="line">RENAME key newkey      <span class="token comment"># 重命名</span></span>
<span class="line">TYPE key               <span class="token comment"># 查看类型</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作"><span>数据库操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">SELECT index           <span class="token comment"># 切换数据库</span></span>
<span class="line">DBSIZE                <span class="token comment"># 查看键数量</span></span>
<span class="line">FLUSHDB               <span class="token comment"># 清空当前数据库</span></span>
<span class="line">FLUSHALL              <span class="token comment"># 清空所有数据库</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-spring-boot-整合-redis" tabindex="-1"><a class="header-anchor" href="#💡-spring-boot-整合-redis"><span>💡 Spring Boot 整合 Redis</span></a></h2><h3 id="_1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_1-添加依赖"><span>1. 添加依赖</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 如果使用 JSON 序列化 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-配置文件"><span>2. 配置文件</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">redis</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost</span>
<span class="line">    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span></span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> </span>
<span class="line">    <span class="token key atrule">database</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 3000ms</span>
<span class="line">    <span class="token key atrule">lettuce</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">pool</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">max-active</span><span class="token punctuation">:</span> <span class="token number">8</span>      <span class="token comment"># 连接池最大连接数</span></span>
<span class="line">        <span class="token key atrule">max-idle</span><span class="token punctuation">:</span> <span class="token number">8</span>        <span class="token comment"># 连接池最大空闲连接数</span></span>
<span class="line">        <span class="token key atrule">min-idle</span><span class="token punctuation">:</span> <span class="token number">0</span>        <span class="token comment"># 连接池最小空闲连接数</span></span>
<span class="line">        <span class="token key atrule">max-wait</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>1ms     <span class="token comment"># 连接池最大阻塞等待时间</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-配置类" tabindex="-1"><a class="header-anchor" href="#_3-配置类"><span>3. 配置类</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> factory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        template<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 使用 Jackson2JsonRedisSerializer 来序列化和反序列化</span></span>
<span class="line">        <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> serializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        mapper<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">PropertyAccessor</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">,</span> <span class="token class-name">JsonAutoDetect<span class="token punctuation">.</span>Visibility</span><span class="token punctuation">.</span><span class="token constant">ANY</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        mapper<span class="token punctuation">.</span><span class="token function">activateDefaultTyping</span><span class="token punctuation">(</span><span class="token class-name">LazyLoadingJavaTypeValidator</span><span class="token punctuation">.</span>instance<span class="token punctuation">,</span> </span>
<span class="line">                                     <span class="token class-name">ObjectMapper<span class="token punctuation">.</span>DefaultTyping</span><span class="token punctuation">.</span><span class="token constant">NON_FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        serializer<span class="token punctuation">.</span><span class="token function">setObjectMapper</span><span class="token punctuation">(</span>mapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 设置 key 和 value 的序列化规则</span></span>
<span class="line">        template<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        template<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span>serializer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        template<span class="token punctuation">.</span><span class="token function">setHashKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        template<span class="token punctuation">.</span><span class="token function">setHashValueSerializer</span><span class="token punctuation">(</span>serializer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        template<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> template<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-使用示例" tabindex="-1"><a class="header-anchor" href="#_4-使用示例"><span>4. 使用示例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 字符串操作</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 哈希操作</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserField</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> field<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> field<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 列表操作</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pushToList</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPush</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-缓存注解" tabindex="-1"><a class="header-anchor" href="#_5-缓存注解"><span>5. 缓存注解</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token annotation punctuation">@CacheConfig</span><span class="token punctuation">(</span>cacheNames <span class="token operator">=</span> <span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">&quot;#id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 从数据库查询</span></span>
<span class="line">        <span class="token keyword">return</span> userRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@CachePut</span><span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">&quot;#user.id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 更新数据库</span></span>
<span class="line">        <span class="token keyword">return</span> userRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">&quot;#id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 删除数据库记录</span></span>
<span class="line">        userRepository<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔥-常见应用场景" tabindex="-1"><a class="header-anchor" href="#🔥-常见应用场景"><span>🔥 常见应用场景</span></a></h2><ol><li><strong>缓存</strong> - 热点数据缓存</li><li><strong>Session共享</strong> - 分布式Session</li><li><strong>分布式锁</strong> - 保证原子性</li><li><strong>排行榜</strong> - Zset实现</li><li><strong>消息队列</strong> - List/Stream</li><li><strong>限流</strong> - 令牌桶算法</li></ol><h2 id="📊-数据类型选择" tabindex="-1"><a class="header-anchor" href="#📊-数据类型选择"><span>📊 数据类型选择</span></a></h2><table><thead><tr><th>场景</th><th>数据类型</th><th>说明</th></tr></thead><tbody><tr><td>缓存对象</td><td>String</td><td>序列化存储</td></tr><tr><td>购物车</td><td>Hash</td><td>商品ID为field</td></tr><tr><td>消息队列</td><td>List</td><td>LPUSH/RPOP</td></tr><tr><td>点赞/关注</td><td>Set</td><td>去重</td></tr><tr><td>排行榜</td><td>Zset</td><td>自动排序</td></tr></tbody></table><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><ol><li><strong>合理设置过期时间</strong> - 避免内存溢出</li><li><strong>避免大key</strong> - 拆分为多个小key</li><li><strong>使用Pipeline</strong> - 批量操作减少网络开销</li><li><strong>选择合适的数据类型</strong> - 提升性能</li><li><strong>监控Redis状态</strong> - 及时发现问题</li></ol><h2 id="🔥-面试重点" tabindex="-1"><a class="header-anchor" href="#🔥-面试重点"><span>🔥 面试重点</span></a></h2><ol><li>Redis为什么这么快？</li><li>Redis的数据类型及应用场景</li><li>Redis持久化机制对比</li><li>缓存穿透、击穿、雪崩的解决方案</li><li>Redis如何实现分布式锁？</li><li>Redis主从复制原理</li><li>Redis集群方案对比</li></ol><h2 id="📚-推荐资源" tabindex="-1"><a class="header-anchor" href="#📚-推荐资源"><span>📚 推荐资源</span></a></h2>`,42)),s("ul",null,[n[8]||(n[8]=s("li",null,"《Redis设计与实现》",-1)),n[9]||(n[9]=s("li",null,"《Redis实战》",-1)),s("li",null,[s("a",w,[n[6]||(n[6]=a("Redis官方文档",-1)),e(t)])]),s("li",null,[s("a",j,[n[7]||(n[7]=a("Redis命令参考",-1)),e(t)])])]),n[20]||(n[20]=s("hr",null,null,-1)),s("p",null,[n[11]||(n[11]=s("strong",null,"开始学习",-1)),n[12]||(n[12]=a(" → ",-1)),e(l,{to:"/tutorials/java-backend/redis/01-Redis%E5%9F%BA%E7%A1%80.html"},{default:i(()=>[...n[10]||(n[10]=[a("01-Redis基础",-1)])]),_:1})])])}const L=o(r,[["render",A]]),_=JSON.parse('{"path":"/tutorials/java-backend/redis/","title":"Redis 缓存数据库教程","lang":"zh-CN","frontmatter":{"title":"Redis 缓存数据库教程","autoGroup":false,"autoSort":false,"sidebarDepth":0},"headers":[{"level":2,"title":"📚 教程简介","slug":"📚-教程简介","link":"#📚-教程简介","children":[]},{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"📖 教程目录","slug":"📖-教程目录","link":"#📖-教程目录","children":[{"level":3,"title":"第一章：Redis 基础","slug":"第一章-redis-基础","link":"#第一章-redis-基础","children":[]},{"level":3,"title":"第二章：五大数据类型","slug":"第二章-五大数据类型","link":"#第二章-五大数据类型","children":[]},{"level":3,"title":"第三章：持久化机制","slug":"第三章-持久化机制","link":"#第三章-持久化机制","children":[]},{"level":3,"title":"第四章：Spring Boot 整合 Redis","slug":"第四章-spring-boot-整合-redis","link":"#第四章-spring-boot-整合-redis","children":[]},{"level":3,"title":"第五章：缓存策略与实战","slug":"第五章-缓存策略与实战","link":"#第五章-缓存策略与实战","children":[]},{"level":3,"title":"第六章：Redis 集群与高可用","slug":"第六章-redis-集群与高可用","link":"#第六章-redis-集群与高可用","children":[]}]},{"level":2,"title":"🚀 快速开始","slug":"🚀-快速开始","link":"#🚀-快速开始","children":[{"level":3,"title":"安装 Redis","slug":"安装-redis","link":"#安装-redis","children":[]},{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]}]},{"level":2,"title":"💡 学习建议","slug":"💡-学习建议","link":"#💡-学习建议","children":[]},{"level":2,"title":"🌟 Redis 常用命令速查","slug":"🌟-redis-常用命令速查","link":"#🌟-redis-常用命令速查","children":[{"level":3,"title":"连接与管理","slug":"连接与管理","link":"#连接与管理","children":[]},{"level":3,"title":"键操作","slug":"键操作","link":"#键操作","children":[]},{"level":3,"title":"数据库操作","slug":"数据库操作","link":"#数据库操作","children":[]}]},{"level":2,"title":"💡 Spring Boot 整合 Redis","slug":"💡-spring-boot-整合-redis","link":"#💡-spring-boot-整合-redis","children":[{"level":3,"title":"1. 添加依赖","slug":"_1-添加依赖","link":"#_1-添加依赖","children":[]},{"level":3,"title":"2. 配置文件","slug":"_2-配置文件","link":"#_2-配置文件","children":[]},{"level":3,"title":"3. 配置类","slug":"_3-配置类","link":"#_3-配置类","children":[]},{"level":3,"title":"4. 使用示例","slug":"_4-使用示例","link":"#_4-使用示例","children":[]},{"level":3,"title":"5. 缓存注解","slug":"_5-缓存注解","link":"#_5-缓存注解","children":[]}]},{"level":2,"title":"🔥 常见应用场景","slug":"🔥-常见应用场景","link":"#🔥-常见应用场景","children":[]},{"level":2,"title":"📊 数据类型选择","slug":"📊-数据类型选择","link":"#📊-数据类型选择","children":[]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[]},{"level":2,"title":"🔥 面试重点","slug":"🔥-面试重点","link":"#🔥-面试重点","children":[]},{"level":2,"title":"📚 推荐资源","slug":"📚-推荐资源","link":"#📚-推荐资源","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/redis/README.md"}');export{L as comp,_ as data};
