import{_ as l,c,d as o,e as a,f as s,b as t,w as e,r as i,o as u}from"./app-I6OnLCmc.js";const r={};function k(d,n){const p=i("RouteLink");return u(),c("div",null,[n[8]||(n[8]=o(`<h1 id="字典与集合" tabindex="-1"><a class="header-anchor" href="#字典与集合"><span>字典与集合</span></a></h1><h2 id="一、字典-dictionary" tabindex="-1"><a class="header-anchor" href="#一、字典-dictionary"><span>一、字典（Dictionary）</span></a></h2><h3 id="_1-字典的定义" tabindex="-1"><a class="header-anchor" href="#_1-字典的定义"><span>1. 字典的定义</span></a></h3><p>字典是一种**键值对（key-value）**的数据结构，通过键来访问值。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 字面量定义</span></span>
<span class="line"><span class="token punctuation">{</span>key1<span class="token punctuation">:</span> value1<span class="token punctuation">,</span> key2<span class="token punctuation">:</span> value2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 变量定义</span></span>
<span class="line">变量名称 <span class="token operator">=</span> <span class="token punctuation">{</span>key1<span class="token punctuation">:</span> value1<span class="token punctuation">,</span> key2<span class="token punctuation">:</span> value2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义空字典</span></span>
<span class="line">变量名称 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">变量名称 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>特点：</strong></p><ul><li>使用 <code>{}</code> 定义</li><li>键值对之间用逗号分隔</li><li>键（key）必须是不可变类型（字符串、数字、元组）</li><li>值（value）可以是任意类型</li><li>键不能重复，值可以重复</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 定义字典</span></span>
<span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span> <span class="token number">95.5</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;dict&#39;&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-字典的访问" tabindex="-1"><a class="header-anchor" href="#_2-字典的访问"><span>2. 字典的访问</span></a></h3><h4 id="通过键访问值" tabindex="-1"><a class="header-anchor" href="#通过键访问值"><span>通过键访问值</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1：使用[]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 张三</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># 18</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果键不存在，会报错</span></span>
<span class="line"><span class="token comment"># print(student[&quot;score&quot;])  # KeyError</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用get()方法（推荐）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 张三</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># None（键不存在返回None）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0（指定默认值）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-字典的修改" tabindex="-1"><a class="header-anchor" href="#_3-字典的修改"><span>3. 字典的修改</span></a></h3><h4 id="修改值" tabindex="-1"><a class="header-anchor" href="#修改值"><span>修改值</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改已存在的键的值</span></span>
<span class="line">student<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">19</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 19}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加键值对" tabindex="-1"><a class="header-anchor" href="#添加键值对"><span>添加键值对</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 添加新的键值对</span></span>
<span class="line">student<span class="token punctuation">[</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;男&quot;</span></span>
<span class="line">student<span class="token punctuation">[</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">95.5</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 18, &#39;gender&#39;: &#39;男&#39;, &#39;score&#39;: 95.5}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-字典的删除" tabindex="-1"><a class="header-anchor" href="#_4-字典的删除"><span>4. 字典的删除</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span> <span class="token number">95.5</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># pop() - 删除指定键，并返回对应的值</span></span>
<span class="line">score <span class="token operator">=</span> student<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span>    <span class="token comment"># 95.5</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 18, &#39;gender&#39;: &#39;男&#39;}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># del - 删除指定键</span></span>
<span class="line"><span class="token keyword">del</span> student<span class="token punctuation">[</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 18}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># clear() - 清空字典</span></span>
<span class="line">student<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>  <span class="token comment"># {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_5-字典的常用方法" tabindex="-1"><a class="header-anchor" href="#_5-字典的常用方法"><span>5. 字典的常用方法</span></a></h3><h4 id="keys-获取所有键" tabindex="-1"><a class="header-anchor" href="#keys-获取所有键"><span>keys() - 获取所有键</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">keys <span class="token operator">=</span> student<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>  <span class="token comment"># dict_keys([&#39;name&#39;, &#39;age&#39;, &#39;gender&#39;])</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;name&#39;, &#39;age&#39;, &#39;gender&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="values-获取所有值" tabindex="-1"><a class="header-anchor" href="#values-获取所有值"><span>values() - 获取所有值</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">values <span class="token operator">=</span> student<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>  <span class="token comment"># dict_values([&#39;张三&#39;, 18, &#39;男&#39;])</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;张三&#39;, 18, &#39;男&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="items-获取所有键值对" tabindex="-1"><a class="header-anchor" href="#items-获取所有键值对"><span>items() - 获取所有键值对</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">items <span class="token operator">=</span> student<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>  <span class="token comment"># dict_items([(&#39;name&#39;, &#39;张三&#39;), (&#39;age&#39;, 18), (&#39;gender&#39;, &#39;男&#39;)])</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="update-更新字典" tabindex="-1"><a class="header-anchor" href="#update-更新字典"><span>update() - 更新字典</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新字典</span></span>
<span class="line">student<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 19, &#39;gender&#39;: &#39;男&#39;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_6-字典的遍历" tabindex="-1"><a class="header-anchor" href="#_6-字典的遍历"><span>6. 字典的遍历</span></a></h3><h4 id="遍历键" tabindex="-1"><a class="header-anchor" href="#遍历键"><span>遍历键</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1</span></span>
<span class="line"><span class="token keyword">for</span> key <span class="token keyword">in</span> student<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> student<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2</span></span>
<span class="line"><span class="token keyword">for</span> key <span class="token keyword">in</span> student<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> student<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="遍历值" tabindex="-1"><a class="header-anchor" href="#遍历值"><span>遍历值</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> value <span class="token keyword">in</span> student<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="遍历键值对-推荐" tabindex="-1"><a class="header-anchor" href="#遍历键值对-推荐"><span>遍历键值对（推荐）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> student<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：</span></span>
<span class="line"><span class="token comment"># name: 张三</span></span>
<span class="line"><span class="token comment"># age: 18</span></span>
<span class="line"><span class="token comment"># gender: 男</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_7-字典推导式" tabindex="-1"><a class="header-anchor" href="#_7-字典推导式"><span>7. 字典推导式</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 基本语法</span></span>
<span class="line"><span class="token punctuation">{</span>key_expression<span class="token punctuation">:</span> value_expression <span class="token keyword">for</span> item <span class="token keyword">in</span> iterable<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例1：创建平方字典</span></span>
<span class="line">squares <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>squares<span class="token punctuation">)</span>  <span class="token comment"># {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例2：字典键值互换</span></span>
<span class="line">original <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span></span>
<span class="line">swapped <span class="token operator">=</span> <span class="token punctuation">{</span>value<span class="token punctuation">:</span> key <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> original<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>swapped<span class="token punctuation">)</span>  <span class="token comment"># {1: &#39;a&#39;, 2: &#39;b&#39;, 3: &#39;c&#39;}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例3：带条件的字典推导式</span></span>
<span class="line">scores <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">:</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">:</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">:</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">:</span> <span class="token number">95</span><span class="token punctuation">}</span></span>
<span class="line">high_scores <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token punctuation">:</span> score <span class="token keyword">for</span> name<span class="token punctuation">,</span> score <span class="token keyword">in</span> scores<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>high_scores<span class="token punctuation">)</span>  <span class="token comment"># {&#39;李四&#39;: 92, &#39;赵六&#39;: 95}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_8-嵌套字典" tabindex="-1"><a class="header-anchor" href="#_8-嵌套字典"><span>8. 嵌套字典</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 学生信息字典</span></span>
<span class="line">students <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;001&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span> <span class="token number">85</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;002&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span> <span class="token number">92</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;003&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span> <span class="token number">78</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 访问嵌套字典</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>students<span class="token punctuation">[</span><span class="token string">&quot;001&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 张三</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>students<span class="token punctuation">[</span><span class="token string">&quot;002&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 92</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 遍历嵌套字典</span></span>
<span class="line"><span class="token keyword">for</span> student_id<span class="token punctuation">,</span> info <span class="token keyword">in</span> students<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;学号：</span><span class="token interpolation"><span class="token punctuation">{</span>student_id<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;姓名：</span><span class="token interpolation"><span class="token punctuation">{</span>info<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;年龄：</span><span class="token interpolation"><span class="token punctuation">{</span>info<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;成绩：</span><span class="token interpolation"><span class="token punctuation">{</span>info<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、集合-set" tabindex="-1"><a class="header-anchor" href="#二、集合-set"><span>二、集合（Set）</span></a></h2><h3 id="_1-集合的定义" tabindex="-1"><a class="header-anchor" href="#_1-集合的定义"><span>1. 集合的定义</span></a></h3><p>集合是一种<strong>无序、不重复</strong>的数据容器。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 字面量定义</span></span>
<span class="line"><span class="token punctuation">{</span>元素<span class="token number">1</span><span class="token punctuation">,</span> 元素<span class="token number">2</span><span class="token punctuation">,</span> 元素<span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 变量定义</span></span>
<span class="line">变量名称 <span class="token operator">=</span> <span class="token punctuation">{</span>元素<span class="token number">1</span><span class="token punctuation">,</span> 元素<span class="token number">2</span><span class="token punctuation">,</span> 元素<span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义空集合（注意：不能用{}，会被识别为字典）</span></span>
<span class="line">变量名称 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>特点：</strong></p><ul><li>使用 <code>{}</code> 定义</li><li>元素不能重复（自动去重）</li><li>元素无序（不支持索引）</li><li>元素必须是不可变类型</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 定义集合</span></span>
<span class="line">my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;set&#39;&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 自动去重</span></span>
<span class="line">my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义空集合</span></span>
<span class="line">empty_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>empty_set<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;set&#39;&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-集合的添加" tabindex="-1"><a class="header-anchor" href="#_2-集合的添加"><span>2. 集合的添加</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># add() - 添加单个元素</span></span>
<span class="line">my_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># update() - 添加多个元素</span></span>
<span class="line">my_set<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 6, 7}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-集合的删除" tabindex="-1"><a class="header-anchor" href="#_3-集合的删除"><span>3. 集合的删除</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># remove() - 删除指定元素（元素不存在会报错）</span></span>
<span class="line">my_set<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 4, 5}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># discard() - 删除指定元素（元素不存在不会报错）</span></span>
<span class="line">my_set<span class="token punctuation">.</span>discard<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 不会报错</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 4, 5}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># pop() - 随机删除一个元素</span></span>
<span class="line">element <span class="token operator">=</span> my_set<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;删除的元素：</span><span class="token interpolation"><span class="token punctuation">{</span>element<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># clear() - 清空集合</span></span>
<span class="line">my_set<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># set()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-集合运算" tabindex="-1"><a class="header-anchor" href="#_4-集合运算"><span>4. 集合运算</span></a></h3><h4 id="交集" tabindex="-1"><a class="header-anchor" href="#交集"><span>交集（&amp;）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line">set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1：使用&amp;</span></span>
<span class="line">result <span class="token operator">=</span> set1 <span class="token operator">&amp;</span> set2</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {4, 5}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用intersection()</span></span>
<span class="line">result <span class="token operator">=</span> set1<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>set2<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {4, 5}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="并集" tabindex="-1"><a class="header-anchor" href="#并集"><span>并集（|）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line">set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1：使用|</span></span>
<span class="line">result <span class="token operator">=</span> set1 <span class="token operator">|</span> set2</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 6, 7, 8}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用union()</span></span>
<span class="line">result <span class="token operator">=</span> set1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>set2<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 6, 7, 8}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="差集" tabindex="-1"><a class="header-anchor" href="#差集"><span>差集（-）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line">set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1：使用-</span></span>
<span class="line">result <span class="token operator">=</span> set1 <span class="token operator">-</span> set2</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用difference()</span></span>
<span class="line">result <span class="token operator">=</span> set1<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>set2<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="对称差集" tabindex="-1"><a class="header-anchor" href="#对称差集"><span>对称差集（^）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line">set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1：使用^</span></span>
<span class="line">result <span class="token operator">=</span> set1 <span class="token operator">^</span> set2</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 6, 7, 8}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用symmetric_difference()</span></span>
<span class="line">result <span class="token operator">=</span> set1<span class="token punctuation">.</span>symmetric_difference<span class="token punctuation">(</span>set2<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 6, 7, 8}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_5-集合的遍历" tabindex="-1"><a class="header-anchor" href="#_5-集合的遍历"><span>5. 集合的遍历</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># for循环遍历</span></span>
<span class="line"><span class="token keyword">for</span> element <span class="token keyword">in</span> my_set<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 集合是无序的，遍历顺序可能不固定！</p><hr><h3 id="_6-集合推导式" tabindex="-1"><a class="header-anchor" href="#_6-集合推导式"><span>6. 集合推导式</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 基本语法</span></span>
<span class="line"><span class="token punctuation">{</span>expression <span class="token keyword">for</span> item <span class="token keyword">in</span> iterable <span class="token keyword">if</span> condition<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例1：生成平方集合</span></span>
<span class="line">squares <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>squares<span class="token punctuation">)</span>  <span class="token comment"># {1, 4, 9, 16, 25}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例2：过滤偶数</span></span>
<span class="line">evens <span class="token operator">=</span> <span class="token punctuation">{</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>evens<span class="token punctuation">)</span>  <span class="token comment"># {2, 4, 6, 8, 10}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、数据容器对比" tabindex="-1"><a class="header-anchor" href="#三、数据容器对比"><span>三、数据容器对比</span></a></h2><table><thead><tr><th>特性</th><th>列表</th><th>元组</th><th>字典</th><th>集合</th></tr></thead><tbody><tr><td>定义符号</td><td>[]</td><td>()</td><td>{key:value}</td><td>{元素}</td></tr><tr><td>有序性</td><td>有序</td><td>有序</td><td>无序（3.7+有序）</td><td>无序</td></tr><tr><td>可变性</td><td>可变</td><td>不可变</td><td>可变</td><td>可变</td></tr><tr><td>重复元素</td><td>允许</td><td>允许</td><td>键不允许</td><td>不允许</td></tr><tr><td>索引访问</td><td>支持</td><td>支持</td><td>不支持</td><td>不支持</td></tr><tr><td>使用场景</td><td>通用序列</td><td>不可变序列</td><td>键值对映射</td><td>去重、集合运算</td></tr></tbody></table><hr><h2 id="四、实战练习" tabindex="-1"><a class="header-anchor" href="#四、实战练习"><span>四、实战练习</span></a></h2><h3 id="练习1-统计字符出现次数" tabindex="-1"><a class="header-anchor" href="#练习1-统计字符出现次数"><span>练习1：统计字符出现次数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line">char_count <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> char <span class="token keyword">in</span> text<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> char <span class="token keyword">in</span> char_count<span class="token punctuation">:</span></span>
<span class="line">        char_count<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        char_count<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>char_count<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># {&#39;h&#39;: 1, &#39;e&#39;: 1, &#39;l&#39;: 3, &#39;o&#39;: 2, &#39; &#39;: 1, &#39;w&#39;: 1, &#39;r&#39;: 1, &#39;d&#39;: 1}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用get()方法简化</span></span>
<span class="line">char_count <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">for</span> char <span class="token keyword">in</span> text<span class="token punctuation">:</span></span>
<span class="line">    char_count<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">=</span> char_count<span class="token punctuation">.</span>get<span class="token punctuation">(</span>char<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>char_count<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-列表去重" tabindex="-1"><a class="header-anchor" href="#练习2-列表去重"><span>练习2：列表去重</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用集合去重</span></span>
<span class="line">unique_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>unique_list<span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习3-学生成绩管理" tabindex="-1"><a class="header-anchor" href="#练习3-学生成绩管理"><span>练习3：学生成绩管理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 学生成绩字典</span></span>
<span class="line">students <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;张三&quot;</span><span class="token punctuation">:</span> <span class="token number">85</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;李四&quot;</span><span class="token punctuation">:</span> <span class="token number">92</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;王五&quot;</span><span class="token punctuation">:</span> <span class="token number">78</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">:</span> <span class="token number">95</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;孙七&quot;</span><span class="token punctuation">:</span> <span class="token number">88</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 统计信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;总人数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均分：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sum</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;最高分：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">max</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;最低分：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">min</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 找出最高分的学生</span></span>
<span class="line">max_score <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> name<span class="token punctuation">,</span> score <span class="token keyword">in</span> students<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> score <span class="token operator">==</span> max_score<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;最高分学生：</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，分数：</span><span class="token interpolation"><span class="token punctuation">{</span>score<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 及格学生</span></span>
<span class="line">passed <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token punctuation">:</span> score <span class="token keyword">for</span> name<span class="token punctuation">,</span> score <span class="token keyword">in</span> students<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;及格学生：</span><span class="token interpolation"><span class="token punctuation">{</span>passed<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、知识点总结" tabindex="-1"><a class="header-anchor" href="#五、知识点总结"><span>五、知识点总结</span></a></h2><h3 id="✅-核心要点" tabindex="-1"><a class="header-anchor" href="#✅-核心要点"><span>✅ 核心要点</span></a></h3><ol><li><strong>字典</strong>：键值对结构，通过键访问值</li><li><strong>集合</strong>：无序不重复，用于去重和集合运算</li><li><strong>字典方法</strong>：get、keys、values、items、update</li><li><strong>集合运算</strong>：交集、并集、差集、对称差集</li><li><strong>推导式</strong>：字典推导式、集合推导式</li></ol><h3 id="📝-面试重点" tabindex="-1"><a class="header-anchor" href="#📝-面试重点"><span>📝 面试重点</span></a></h3><ul><li>字典和列表的区别</li><li>字典的键必须是不可变类型</li><li>集合的特点：无序、不重复</li><li>集合运算的应用</li><li>如何选择合适的数据容器</li></ul><hr>`,94)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),t(p,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/06-%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84.html"},{default:e(()=>[...n[0]||(n[0]=[s("列表与元组",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),t(p,{to:"/tutorials/python-ai/python/%E7%AC%AC02%E7%AB%A0-%E6%A0%B8%E5%BF%83%E7%AF%87/01-%E5%87%BD%E6%95%B0%E5%9F%BA%E7%A1%80.html"},{default:e(()=>[...n[1]||(n[1]=[s("第02章-核心篇",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const v=l(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di01zhang-jichubiancheng/07-zidianyujihe.html","title":"字典与集合","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、字典（Dictionary）","slug":"一、字典-dictionary","link":"#一、字典-dictionary","children":[{"level":3,"title":"1. 字典的定义","slug":"_1-字典的定义","link":"#_1-字典的定义","children":[]},{"level":3,"title":"2. 字典的访问","slug":"_2-字典的访问","link":"#_2-字典的访问","children":[]},{"level":3,"title":"3. 字典的修改","slug":"_3-字典的修改","link":"#_3-字典的修改","children":[]},{"level":3,"title":"4. 字典的删除","slug":"_4-字典的删除","link":"#_4-字典的删除","children":[]},{"level":3,"title":"5. 字典的常用方法","slug":"_5-字典的常用方法","link":"#_5-字典的常用方法","children":[]},{"level":3,"title":"6. 字典的遍历","slug":"_6-字典的遍历","link":"#_6-字典的遍历","children":[]},{"level":3,"title":"7. 字典推导式","slug":"_7-字典推导式","link":"#_7-字典推导式","children":[]},{"level":3,"title":"8. 嵌套字典","slug":"_8-嵌套字典","link":"#_8-嵌套字典","children":[]}]},{"level":2,"title":"二、集合（Set）","slug":"二、集合-set","link":"#二、集合-set","children":[{"level":3,"title":"1. 集合的定义","slug":"_1-集合的定义","link":"#_1-集合的定义","children":[]},{"level":3,"title":"2. 集合的添加","slug":"_2-集合的添加","link":"#_2-集合的添加","children":[]},{"level":3,"title":"3. 集合的删除","slug":"_3-集合的删除","link":"#_3-集合的删除","children":[]},{"level":3,"title":"4. 集合运算","slug":"_4-集合运算","link":"#_4-集合运算","children":[]},{"level":3,"title":"5. 集合的遍历","slug":"_5-集合的遍历","link":"#_5-集合的遍历","children":[]},{"level":3,"title":"6. 集合推导式","slug":"_6-集合推导式","link":"#_6-集合推导式","children":[]}]},{"level":2,"title":"三、数据容器对比","slug":"三、数据容器对比","link":"#三、数据容器对比","children":[]},{"level":2,"title":"四、实战练习","slug":"四、实战练习","link":"#四、实战练习","children":[{"level":3,"title":"练习1：统计字符出现次数","slug":"练习1-统计字符出现次数","link":"#练习1-统计字符出现次数","children":[]},{"level":3,"title":"练习2：列表去重","slug":"练习2-列表去重","link":"#练习2-列表去重","children":[]},{"level":3,"title":"练习3：学生成绩管理","slug":"练习3-学生成绩管理","link":"#练习3-学生成绩管理","children":[]}]},{"level":2,"title":"五、知识点总结","slug":"五、知识点总结","link":"#五、知识点总结","children":[{"level":3,"title":"✅ 核心要点","slug":"✅-核心要点","link":"#✅-核心要点","children":[]},{"level":3,"title":"📝 面试重点","slug":"📝-面试重点","link":"#📝-面试重点","children":[]}]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第01章-基础编程/07-字典与集合.md"}');export{v as comp,b as data};
