import{_ as o,c as r,d as p,e as n,b as e,w as l,f as a,r as c,o as u}from"./app-DOpRTEVU.js";const d={},v={id:"第一章-servlet-基础入门",tabindex:"-1"},k={class:"header-anchor",href:"#第一章-servlet-基础入门"},m={id:"第二章-servlet-核心技术",tabindex:"-1"},b={class:"header-anchor",href:"#第二章-servlet-核心技术"},h={id:"第三章-jsp-技术",tabindex:"-1"},g={class:"header-anchor",href:"#第三章-jsp-技术"},S={id:"第四章-session-和-cookie",tabindex:"-1"},x={class:"header-anchor",href:"#第四章-session-和-cookie"},f={id:"第五章-servlet-面试题集",tabindex:"-1"},y={class:"header-anchor",href:"#第五章-servlet-面试题集"},j={href:"https://jakarta.ee/specifications/servlet/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://tomcat.apache.org/tomcat-9.0-doc/",target:"_blank",rel:"noopener noreferrer"};function w(E,s){const t=c("RouteLink"),i=c("ExternalLinkIcon");return u(),r("div",null,[s[10]||(s[10]=p('<h1 id="servlet-教程" tabindex="-1"><a class="header-anchor" href="#servlet-教程"><span>Servlet 教程</span></a></h1><blockquote><p>从零开始掌握 Servlet，理解 Java Web 开发基础</p></blockquote><h2 id="📚-教程简介" tabindex="-1"><a class="header-anchor" href="#📚-教程简介"><span>📚 教程简介</span></a></h2><p>本教程将带你系统学习 Servlet 技术，从基础概念到实战应用。虽然现代企业开发主要使用 Spring Boot，但 Servlet 作为 Java Web 的基石，理解其原理对深入掌握框架至关重要。</p><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>✅ 理解 Servlet 的工作原理</li><li>✅ 掌握 Servlet 生命周期</li><li>✅ 熟练处理 HTTP 请求和响应</li><li>✅ 掌握 Session 和 Cookie 机制</li><li>✅ 了解 JSP 技术</li><li>✅ 理解过滤器和监听器</li><li>✅ 应对常见的 Servlet 面试题</li></ul><h2 id="📖-教程目录" tabindex="-1"><a class="header-anchor" href="#📖-教程目录"><span>📖 教程目录</span></a></h2>',7)),n("h3",v,[n("a",k,[n("span",null,[e(t,{to:"/tutorials/java-backend/servlet/1.Servlet%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.html"},{default:l(()=>[...s[0]||(s[0]=[a("第一章：Servlet 基础入门",-1)])]),_:1})])])]),s[11]||(s[11]=n("ul",null,[n("li",null,"Servlet 是什么？"),n("li",null,"Servlet 体系结构"),n("li",null,"创建第一个 Servlet"),n("li",null,"Servlet 生命周期"),n("li",null,"web.xml 配置"),n("li",null,"注解配置（Servlet 3.0+）")],-1)),n("h3",m,[n("a",b,[n("span",null,[e(t,{to:"/tutorials/java-backend/servlet/2.Servlet%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF.html"},{default:l(()=>[...s[1]||(s[1]=[a("第二章：Servlet 核心技术",-1)])]),_:1})])])]),s[12]||(s[12]=n("ul",null,[n("li",null,"HttpServletRequest 详解"),n("li",null,"HttpServletResponse 详解"),n("li",null,"请求转发 vs 重定向"),n("li",null,"中文乱码问题"),n("li",null,"文件上传下载"),n("li",null,"过滤器（Filter）"),n("li",null,"监听器（Listener）")],-1)),n("h3",h,[n("a",g,[n("span",null,[e(t,{to:"/tutorials/java-backend/servlet/3.JSP%E6%8A%80%E6%9C%AF.html"},{default:l(()=>[...s[2]||(s[2]=[a("第三章：JSP 技术",-1)])]),_:1})])])]),s[13]||(s[13]=n("ul",null,[n("li",null,"JSP 基础语法"),n("li",null,"JSP 内置对象"),n("li",null,"EL 表达式"),n("li",null,"JSTL 标签库"),n("li",null,"JSP 与 Servlet 的关系")],-1)),n("h3",S,[n("a",x,[n("span",null,[e(t,{to:"/tutorials/java-backend/servlet/4.Session%E5%92%8CCookie.html"},{default:l(()=>[...s[3]||(s[3]=[a("第四章：Session 和 Cookie",-1)])]),_:1})])])]),s[14]||(s[14]=n("ul",null,[n("li",null,"HTTP 无状态协议"),n("li",null,"Cookie 机制详解"),n("li",null,"Session 机制详解"),n("li",null,"Session 与 Cookie 的区别"),n("li",null,"分布式 Session 解决方案")],-1)),n("h3",f,[n("a",y,[n("span",null,[e(t,{to:"/tutorials/java-backend/servlet/5.Servlet%E9%9D%A2%E8%AF%95%E9%A2%98%E9%9B%86.html"},{default:l(()=>[...s[4]||(s[4]=[a("第五章：Servlet 面试题集",-1)])]),_:1})])])]),s[15]||(s[15]=p(`<ul><li>Servlet 基础面试题</li><li>生命周期面试题</li><li>Session 和 Cookie 面试题</li><li>过滤器和监听器面试题</li><li>高频面试题解析</li></ul><h2 id="🚀-快速开始" tabindex="-1"><a class="header-anchor" href="#🚀-快速开始"><span>🚀 快速开始</span></a></h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3><p><strong>前置要求：</strong></p><ul><li>JDK 8 或更高版本</li><li>Tomcat 8.5 或更高版本</li><li>Maven 3.5+</li><li>IDE（推荐 IntelliJ IDEA）</li></ul><h3 id="创建第一个-servlet-项目" tabindex="-1"><a class="header-anchor" href="#创建第一个-servlet-项目"><span>创建第一个 Servlet 项目</span></a></h3><p><strong>步骤1：创建 Maven Web 项目</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mvn archetype:generate <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.example <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>servlet-demo <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DarchetypeArtifactId</span><span class="token operator">=</span>maven-archetype-webapp <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-DinteractiveMode</span><span class="token operator">=</span>false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤2：添加依赖</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- Servlet API --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤3：创建 Servlet</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">PrintWriter</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> </span>
<span class="line">            <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;html&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;head&gt;&lt;title&gt;Hello Servlet&lt;/title&gt;&lt;/head&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;body&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;Hello, Servlet!&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/body&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/html&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤4：部署运行</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用 Tomcat Maven 插件</span></span>
<span class="line">mvn tomcat7:run</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 访问</span></span>
<span class="line">http://localhost:8080/servlet-demo/hello</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-学习建议" tabindex="-1"><a class="header-anchor" href="#💡-学习建议"><span>💡 学习建议</span></a></h2><ol><li><strong>理解原理</strong> - 深入理解 Servlet 的工作机制</li><li><strong>动手实践</strong> - 每个知识点都要编码实践</li><li><strong>对比学习</strong> - 对比 Servlet 和 Spring MVC</li><li><strong>掌握基础</strong> - Servlet 是 Java Web 的基石</li><li><strong>循序渐进</strong> - 从简单到复杂，逐步掌握</li></ol><h2 id="🌟-servlet-核心概念速览" tabindex="-1"><a class="header-anchor" href="#🌟-servlet-核心概念速览"><span>🌟 Servlet 核心概念速览</span></a></h2><h3 id="servlet-是什么" tabindex="-1"><a class="header-anchor" href="#servlet-是什么"><span>Servlet 是什么？</span></a></h3><p><strong>Servlet</strong> 是运行在服务器端的 Java 程序，用于处理客户端请求并生成响应。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">浏览器 → HTTP请求 → Tomcat → Servlet → 处理请求 → 生成响应 → 浏览器</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="servlet-生命周期" tabindex="-1"><a class="header-anchor" href="#servlet-生命周期"><span>Servlet 生命周期</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 加载类：Tomcat 启动时或首次访问时</span>
<span class="line">2. 实例化：调用构造器</span>
<span class="line">3. 初始化：调用 init() 方法</span>
<span class="line">4. 服务：每次请求调用 service() 方法</span>
<span class="line">5. 销毁：Tomcat 关闭时调用 destroy() 方法</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>生命周期方法：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">MyServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1. 构造器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2. 初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> </span>
<span class="line">            <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;3. 处理请求&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;4. 销毁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http-方法" tabindex="-1"><a class="header-anchor" href="#http-方法"><span>HTTP 方法</span></a></h3><table><thead><tr><th>方法</th><th>说明</th><th>Servlet 方法</th></tr></thead><tbody><tr><td>GET</td><td>获取资源</td><td>doGet()</td></tr><tr><td>POST</td><td>提交数据</td><td>doPost()</td></tr><tr><td>PUT</td><td>更新资源</td><td>doPut()</td></tr><tr><td>DELETE</td><td>删除资源</td><td>doDelete()</td></tr><tr><td>HEAD</td><td>获取响应头</td><td>doHead()</td></tr><tr><td>OPTIONS</td><td>获取服务器支持的方法</td><td>doOptions()</td></tr></tbody></table><h3 id="请求转发-vs-重定向" tabindex="-1"><a class="header-anchor" href="#请求转发-vs-重定向"><span>请求转发 vs 重定向</span></a></h3><p><strong>请求转发（Forward）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/target.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>服务器内部跳转</li><li>浏览器地址不变</li><li>只有一次请求</li><li>可以共享 request 数据</li></ul><p><strong>重定向（Redirect）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">&quot;/servlet-demo/target.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>浏览器重新发起请求</li><li>浏览器地址改变</li><li>两次请求</li><li>不能共享 request 数据</li></ul><h2 id="🏗️-servlet-项目结构" tabindex="-1"><a class="header-anchor" href="#🏗️-servlet-项目结构"><span>🏗️ Servlet 项目结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">servlet-demo/</span>
<span class="line">├── pom.xml</span>
<span class="line">├── src/</span>
<span class="line">│   └── main/</span>
<span class="line">│       ├── java/</span>
<span class="line">│       │   └── com/example/</span>
<span class="line">│       │       ├── servlet/</span>
<span class="line">│       │       │   ├── HelloServlet.java</span>
<span class="line">│       │       │   └── UserServlet.java</span>
<span class="line">│       │       ├── filter/</span>
<span class="line">│       │       │   └── EncodingFilter.java</span>
<span class="line">│       │       └── listener/</span>
<span class="line">│       │           └── OnlineCountListener.java</span>
<span class="line">│       └── webapp/</span>
<span class="line">│           ├── WEB-INF/</span>
<span class="line">│           │   ├── web.xml</span>
<span class="line">│           │   └── lib/</span>
<span class="line">│           ├── index.jsp</span>
<span class="line">│           └── css/</span>
<span class="line">└── target/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-servlet-体系结构" tabindex="-1"><a class="header-anchor" href="#📚-servlet-体系结构"><span>📚 Servlet 体系结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">javax.servlet</span>
<span class="line">├── Servlet (接口)</span>
<span class="line">│   └── GenericServlet (抽象类)</span>
<span class="line">│       └── HttpServlet (抽象类) ← 通常继承这个</span>
<span class="line">│</span>
<span class="line">├── ServletRequest (接口)</span>
<span class="line">│   └── HttpServletRequest (接口)</span>
<span class="line">│</span>
<span class="line">├── ServletResponse (接口)</span>
<span class="line">│   └── HttpServletResponse (接口)</span>
<span class="line">│</span>
<span class="line">├── Filter (接口)</span>
<span class="line">├── FilterChain (接口)</span>
<span class="line">├── ServletContext (接口)</span>
<span class="line">└── ServletConfig (接口)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔧-servlet-三大组件" tabindex="-1"><a class="header-anchor" href="#🔧-servlet-三大组件"><span>🔧 Servlet 三大组件</span></a></h2><h3 id="_1-servlet" tabindex="-1"><a class="header-anchor" href="#_1-servlet"><span>1. Servlet</span></a></h3><p><strong>作用：</strong> 处理请求，生成响应</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 处理 GET 请求</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-filter-过滤器" tabindex="-1"><a class="header-anchor" href="#_2-filter-过滤器"><span>2. Filter（过滤器）</span></a></h3><p><strong>作用：</strong> 请求前后的拦截处理</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EncodingFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> </span>
<span class="line">                         <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 前置处理</span></span>
<span class="line">        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 放行</span></span>
<span class="line">        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 后置处理</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-listener-监听器" tabindex="-1"><a class="header-anchor" href="#_3-listener-监听器"><span>3. Listener（监听器）</span></a></h3><p><strong>作用：</strong> 监听应用、会话、请求的生命周期事件</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@WebListener</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OnlineCountListener</span> <span class="token keyword">implements</span> <span class="token class-name">HttpSessionListener</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sessionCreated</span><span class="token punctuation">(</span><span class="token class-name">HttpSessionEvent</span> se<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 会话创建时</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;用户上线&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sessionDestroyed</span><span class="token punctuation">(</span><span class="token class-name">HttpSessionEvent</span> se<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 会话销毁时</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;用户下线&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-推荐资源" tabindex="-1"><a class="header-anchor" href="#📚-推荐资源"><span>📚 推荐资源</span></a></h2><h3 id="官方文档" tabindex="-1"><a class="header-anchor" href="#官方文档"><span>官方文档</span></a></h3>`,49)),n("ul",null,[n("li",null,[n("a",j,[s[5]||(s[5]=a("Servlet 规范",-1)),e(i)])]),n("li",null,[n("a",q,[s[6]||(s[6]=a("Tomcat 文档",-1)),e(i)])])]),s[16]||(s[16]=p(`<h3 id="推荐书籍" tabindex="-1"><a class="header-anchor" href="#推荐书籍"><span>推荐书籍</span></a></h3><ul><li>《Head First Servlets and JSP》</li><li>《深入分析 Java Web 技术内幕》</li></ul><h2 id="⚠️-注意事项" tabindex="-1"><a class="header-anchor" href="#⚠️-注意事项"><span>⚠️ 注意事项</span></a></h2><ol><li><strong>Servlet 不是线程安全的</strong> - 避免使用成员变量</li><li><strong>及时关闭资源</strong> - 使用 try-with-resources</li><li><strong>处理中文乱码</strong> - 设置正确的编码</li><li><strong>scope=&quot;provided&quot;</strong> - Servlet API 由容器提供</li><li><strong>了解即可</strong> - 现代开发主要使用 Spring MVC/Boot</li></ol><h2 id="🎯-学习路线图" tabindex="-1"><a class="header-anchor" href="#🎯-学习路线图"><span>🎯 学习路线图</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">第1周：Servlet 基础</span>
<span class="line">├─ Servlet 概念</span>
<span class="line">├─ 生命周期</span>
<span class="line">├─ 请求响应处理</span>
<span class="line">└─ 配置方式</span>
<span class="line"></span>
<span class="line">第2周：核心技术</span>
<span class="line">├─ Request/Response API</span>
<span class="line">├─ 请求转发与重定向</span>
<span class="line">├─ 文件上传下载</span>
<span class="line">└─ Filter 和 Listener</span>
<span class="line"></span>
<span class="line">第3周：JSP 技术</span>
<span class="line">├─ JSP 基础语法</span>
<span class="line">├─ 内置对象</span>
<span class="line">├─ EL 和 JSTL</span>
<span class="line">└─ JSP 与 Servlet 协作</span>
<span class="line"></span>
<span class="line">第4周：会话管理</span>
<span class="line">├─ Cookie 机制</span>
<span class="line">├─ Session 机制</span>
<span class="line">├─ 会话跟踪</span>
<span class="line">└─ 安全性</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🤝-servlet-vs-spring-mvc" tabindex="-1"><a class="header-anchor" href="#🤝-servlet-vs-spring-mvc"><span>🤝 Servlet vs Spring MVC</span></a></h2><table><thead><tr><th>特性</th><th>Servlet</th><th>Spring MVC</th></tr></thead><tbody><tr><td>开发效率</td><td>低</td><td>高</td></tr><tr><td>代码简洁</td><td>繁琐</td><td>简洁</td></tr><tr><td>配置</td><td>复杂</td><td>简单</td></tr><tr><td>功能</td><td>基础</td><td>强大</td></tr><tr><td>学习成本</td><td>低</td><td>中</td></tr><tr><td>使用场景</td><td>学习基础</td><td>企业开发</td></tr></tbody></table><p><strong>学习建议：</strong> 学习 Servlet 理解原理，使用 Spring MVC 进行开发。</p><h2 id="📄-版权说明" tabindex="-1"><a class="header-anchor" href="#📄-版权说明"><span>📄 版权说明</span></a></h2><p>本教程仅供学习使用，欢迎分享传播。</p><hr><p><strong>准备好了吗？让我们开始 Servlet 学习之旅！🚀</strong></p>`,13)),n("p",null,[n("strong",null,[s[8]||(s[8]=a("建议从 ",-1)),e(t,{to:"/tutorials/java-backend/servlet/1.Servlet%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.html"},{default:l(()=>[...s[7]||(s[7]=[a("第一章：Servlet 基础入门",-1)])]),_:1}),s[9]||(s[9]=a(" 开始学习",-1))])])])}const T=o(d,[["render",w]]),C=JSON.parse('{"path":"/tutorials/java-backend/servlet/","title":"Servlet 教程","lang":"zh-CN","frontmatter":{"title":"Servlet 教程"},"headers":[{"level":2,"title":"📚 教程简介","slug":"📚-教程简介","link":"#📚-教程简介","children":[]},{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"📖 教程目录","slug":"📖-教程目录","link":"#📖-教程目录","children":[{"level":3,"title":"第一章：Servlet 基础入门","slug":"第一章-servlet-基础入门","link":"#第一章-servlet-基础入门","children":[]},{"level":3,"title":"第二章：Servlet 核心技术","slug":"第二章-servlet-核心技术","link":"#第二章-servlet-核心技术","children":[]},{"level":3,"title":"第三章：JSP 技术","slug":"第三章-jsp-技术","link":"#第三章-jsp-技术","children":[]},{"level":3,"title":"第四章：Session 和 Cookie","slug":"第四章-session-和-cookie","link":"#第四章-session-和-cookie","children":[]},{"level":3,"title":"第五章：Servlet 面试题集","slug":"第五章-servlet-面试题集","link":"#第五章-servlet-面试题集","children":[]}]},{"level":2,"title":"🚀 快速开始","slug":"🚀-快速开始","link":"#🚀-快速开始","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"创建第一个 Servlet 项目","slug":"创建第一个-servlet-项目","link":"#创建第一个-servlet-项目","children":[]}]},{"level":2,"title":"💡 学习建议","slug":"💡-学习建议","link":"#💡-学习建议","children":[]},{"level":2,"title":"🌟 Servlet 核心概念速览","slug":"🌟-servlet-核心概念速览","link":"#🌟-servlet-核心概念速览","children":[{"level":3,"title":"Servlet 是什么？","slug":"servlet-是什么","link":"#servlet-是什么","children":[]},{"level":3,"title":"Servlet 生命周期","slug":"servlet-生命周期","link":"#servlet-生命周期","children":[]},{"level":3,"title":"HTTP 方法","slug":"http-方法","link":"#http-方法","children":[]},{"level":3,"title":"请求转发 vs 重定向","slug":"请求转发-vs-重定向","link":"#请求转发-vs-重定向","children":[]}]},{"level":2,"title":"🏗️ Servlet 项目结构","slug":"🏗️-servlet-项目结构","link":"#🏗️-servlet-项目结构","children":[]},{"level":2,"title":"📚 Servlet 体系结构","slug":"📚-servlet-体系结构","link":"#📚-servlet-体系结构","children":[]},{"level":2,"title":"🔧 Servlet 三大组件","slug":"🔧-servlet-三大组件","link":"#🔧-servlet-三大组件","children":[{"level":3,"title":"1. Servlet","slug":"_1-servlet","link":"#_1-servlet","children":[]},{"level":3,"title":"2. Filter（过滤器）","slug":"_2-filter-过滤器","link":"#_2-filter-过滤器","children":[]},{"level":3,"title":"3. Listener（监听器）","slug":"_3-listener-监听器","link":"#_3-listener-监听器","children":[]}]},{"level":2,"title":"📚 推荐资源","slug":"📚-推荐资源","link":"#📚-推荐资源","children":[{"level":3,"title":"官方文档","slug":"官方文档","link":"#官方文档","children":[]},{"level":3,"title":"推荐书籍","slug":"推荐书籍","link":"#推荐书籍","children":[]}]},{"level":2,"title":"⚠️ 注意事项","slug":"⚠️-注意事项","link":"#⚠️-注意事项","children":[]},{"level":2,"title":"🎯 学习路线图","slug":"🎯-学习路线图","link":"#🎯-学习路线图","children":[]},{"level":2,"title":"🤝 Servlet vs Spring MVC","slug":"🤝-servlet-vs-spring-mvc","link":"#🤝-servlet-vs-spring-mvc","children":[]},{"level":2,"title":"📄 版权说明","slug":"📄-版权说明","link":"#📄-版权说明","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/servlet/README.md"}');export{T as comp,C as data};
