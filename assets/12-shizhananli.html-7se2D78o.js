import{_ as s,c as a,d as p,o as t}from"./app-DnBTedau.js";const e={};function c(o,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="实战案例" tabindex="-1"><a class="header-anchor" href="#实战案例"><span>实战案例</span></a></h1><blockquote><p>通过实战项目掌握计算机视觉</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>应用CV解决实际问题</li><li>掌握完整项目流程</li><li>学会综合运用技术</li></ul><h2 id="_1-人脸识别系统" tabindex="-1"><a class="header-anchor" href="#_1-人脸识别系统"><span>1. 人脸识别系统</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> face_recognition</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载已知人脸</span></span>
<span class="line">known_image <span class="token operator">=</span> face_recognition<span class="token punctuation">.</span>load_image_file<span class="token punctuation">(</span><span class="token string">&quot;person.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line">known_encoding <span class="token operator">=</span> face_recognition<span class="token punctuation">.</span>face_encodings<span class="token punctuation">(</span>known_image<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 实时识别</span></span>
<span class="line">cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    rgb_frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检测和识别</span></span>
<span class="line">    face_locations <span class="token operator">=</span> face_recognition<span class="token punctuation">.</span>face_locations<span class="token punctuation">(</span>rgb_frame<span class="token punctuation">)</span></span>
<span class="line">    face_encodings <span class="token operator">=</span> face_recognition<span class="token punctuation">.</span>face_encodings<span class="token punctuation">(</span>rgb_frame<span class="token punctuation">,</span> face_locations<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> left<span class="token punctuation">)</span><span class="token punctuation">,</span> face_encoding <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>face_locations<span class="token punctuation">,</span> face_encodings<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        matches <span class="token operator">=</span> face_recognition<span class="token punctuation">.</span>compare_faces<span class="token punctuation">(</span><span class="token punctuation">[</span>known_encoding<span class="token punctuation">]</span><span class="token punctuation">,</span> face_encoding<span class="token punctuation">)</span></span>
<span class="line">        name <span class="token operator">=</span> <span class="token string">&quot;Known&quot;</span> <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token keyword">in</span> matches <span class="token keyword">else</span> <span class="token string">&quot;Unknown&quot;</span></span>
<span class="line">        </span>
<span class="line">        cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">        cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token punctuation">(</span>left<span class="token punctuation">,</span> top <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">                   cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Face Recognition&#39;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-车牌识别" tabindex="-1"><a class="header-anchor" href="#_2-车牌识别"><span>2. 车牌识别</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> pytesseract</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">detect_license_plate</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    gray <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span></span>
<span class="line">    edges <span class="token operator">=</span> cv2<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">    contours<span class="token punctuation">,</span> _ <span class="token operator">=</span> cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>edges<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>RETR_TREE<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CHAIN_APPROX_SIMPLE<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> contour <span class="token keyword">in</span> contours<span class="token punctuation">:</span></span>
<span class="line">        peri <span class="token operator">=</span> cv2<span class="token punctuation">.</span>arcLength<span class="token punctuation">(</span>contour<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">        approx <span class="token operator">=</span> cv2<span class="token punctuation">.</span>approxPolyDP<span class="token punctuation">(</span>contour<span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token operator">*</span> peri<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>approx<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span></span>
<span class="line">            x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token operator">=</span> cv2<span class="token punctuation">.</span>boundingRect<span class="token punctuation">(</span>contour<span class="token punctuation">)</span></span>
<span class="line">            aspect_ratio <span class="token operator">=</span> w <span class="token operator">/</span> <span class="token builtin">float</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">if</span> <span class="token number">2</span> <span class="token operator">&lt;=</span> aspect_ratio <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">:</span></span>
<span class="line">                plate <span class="token operator">=</span> gray<span class="token punctuation">[</span>y<span class="token punctuation">:</span>y<span class="token operator">+</span>h<span class="token punctuation">,</span> x<span class="token punctuation">:</span>x<span class="token operator">+</span>w<span class="token punctuation">]</span></span>
<span class="line">                text <span class="token operator">=</span> pytesseract<span class="token punctuation">.</span>image_to_string<span class="token punctuation">(</span>plate<span class="token punctuation">,</span> config<span class="token operator">=</span><span class="token string">&#39;--psm 7&#39;</span><span class="token punctuation">)</span></span>
<span class="line">                </span>
<span class="line">                <span class="token keyword">if</span> text<span class="token punctuation">:</span></span>
<span class="line">                    cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span> y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">                    cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> text<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">                               cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> img</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-目标跟踪" tabindex="-1"><a class="header-anchor" href="#_3-目标跟踪"><span>3. 目标跟踪</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">tracker <span class="token operator">=</span> cv2<span class="token punctuation">.</span>TrackerKCF_create<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">&#39;video.mp4&#39;</span><span class="token punctuation">)</span></span>
<span class="line">ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">bbox <span class="token operator">=</span> cv2<span class="token punctuation">.</span>selectROI<span class="token punctuation">(</span><span class="token string">&#39;Frame&#39;</span><span class="token punctuation">,</span> frame<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line">tracker<span class="token punctuation">.</span>init<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> bbox<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    </span>
<span class="line">    success<span class="token punctuation">,</span> bbox <span class="token operator">=</span> tracker<span class="token punctuation">.</span>update<span class="token punctuation">(</span>frame<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> success<span class="token punctuation">:</span></span>
<span class="line">        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token keyword">for</span> v <span class="token keyword">in</span> bbox<span class="token punctuation">]</span></span>
<span class="line">        cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span> y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Tracking&#39;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-总结" tabindex="-1"><a class="header-anchor" href="#💡-总结"><span>💡 总结</span></a></h2><p>通过这些实战案例，你应该掌握了：</p><ol><li><strong>完整CV项目流程</strong> - 从需求到实现</li><li><strong>人脸识别</strong> - 检测和识别技术</li><li><strong>OCR应用</strong> - 车牌识别</li><li><strong>目标跟踪</strong> - 视频分析</li><li><strong>综合应用</strong> - 智能监控系统</li></ol><hr><p><strong>恭喜完成 CV 教程！</strong> 🎉</p>`,15)])])}const i=s(e,[["render",c]]),u=JSON.parse('{"path":"/tutorials/python-ai/cv/12-shizhananli.html","title":"实战案例","lang":"zh-CN","frontmatter":{"title":"实战案例"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. 人脸识别系统","slug":"_1-人脸识别系统","link":"#_1-人脸识别系统","children":[]},{"level":2,"title":"2. 车牌识别","slug":"_2-车牌识别","link":"#_2-车牌识别","children":[]},{"level":2,"title":"3. 目标跟踪","slug":"_3-目标跟踪","link":"#_3-目标跟踪","children":[]},{"level":2,"title":"💡 总结","slug":"💡-总结","link":"#💡-总结","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/cv/12-实战案例.md"}');export{i as comp,u as data};
