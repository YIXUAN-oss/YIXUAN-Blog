import{_ as l,c as o,d as i,e as a,f as s,b as p,w as e,r as c,o as r}from"./app-DnBTedau.js";const d={};function u(k,n){const t=c("RouteLink");return r(),o("div",null,[n[8]||(n[8]=i(`<h1 id="运算符与表达式" tabindex="-1"><a class="header-anchor" href="#运算符与表达式"><span>运算符与表达式</span></a></h1><h2 id="一、算术运算符" tabindex="-1"><a class="header-anchor" href="#一、算术运算符"><span>一、算术运算符</span></a></h2><h3 id="_1-基本算术运算符" tabindex="-1"><a class="header-anchor" href="#_1-基本算术运算符"><span>1. 基本算术运算符</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>加法</td><td>5 + 3</td><td>8</td></tr><tr><td>-</td><td>减法</td><td>5 - 3</td><td>2</td></tr><tr><td>*</td><td>乘法</td><td>5 * 3</td><td>15</td></tr><tr><td>/</td><td>除法（浮点）</td><td>5 / 2</td><td>2.5</td></tr><tr><td>//</td><td>整除（向下取整）</td><td>5 // 2</td><td>2</td></tr><tr><td>%</td><td>取余（模运算）</td><td>5 % 2</td><td>1</td></tr><tr><td>**</td><td>幂运算</td><td>2 ** 3</td><td>8</td></tr></tbody></table><h3 id="_2-代码示例" tabindex="-1"><a class="header-anchor" href="#_2-代码示例"><span>2. 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 基本运算</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> + </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">+</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment"># 13</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">-</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment"># 7</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">*</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment"># 30</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> / </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">/</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment"># 3.333...</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> // </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">//</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token comment"># 3</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> % </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">%</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment"># 1</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> ** </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">**</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token comment"># 1000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、比较运算符" tabindex="-1"><a class="header-anchor" href="#二、比较运算符"><span>二、比较运算符</span></a></h2><h3 id="_1-比较运算符列表" tabindex="-1"><a class="header-anchor" href="#_1-比较运算符列表"><span>1. 比较运算符列表</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>5 == 5</td><td>True</td></tr><tr><td>!=</td><td>不等于</td><td>5 != 3</td><td>True</td></tr><tr><td>&gt;</td><td>大于</td><td>5 &gt; 3</td><td>True</td></tr><tr><td>&lt;</td><td>小于</td><td>5 &lt; 3</td><td>False</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>5 &gt;= 5</td><td>True</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>5 &lt;= 3</td><td>False</td></tr></tbody></table><h3 id="_2-代码示例-1" tabindex="-1"><a class="header-anchor" href="#_2-代码示例-1"><span>2. 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">a <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">20</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span>  <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">!=</span> b<span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span>   <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment"># True</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、逻辑运算符" tabindex="-1"><a class="header-anchor" href="#三、逻辑运算符"><span>三、逻辑运算符</span></a></h2><h3 id="_1-逻辑运算符列表" tabindex="-1"><a class="header-anchor" href="#_1-逻辑运算符列表"><span>1. 逻辑运算符列表</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>and</td><td>逻辑与（都为真才为真）</td><td>True and False</td><td>False</td></tr><tr><td>or</td><td>逻辑或（有一个为真就为真）</td><td>True or False</td><td>True</td></tr><tr><td>not</td><td>逻辑非（取反）</td><td>not True</td><td>False</td></tr></tbody></table><h3 id="_2-代码示例-2" tabindex="-1"><a class="header-anchor" href="#_2-代码示例-2"><span>2. 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># and 运算</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># False</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># or 运算</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">False</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">False</span> <span class="token keyword">or</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># False</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># not 运算</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 组合使用</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">25</span></span>
<span class="line">is_student <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>age <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token keyword">and</span> is_student<span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、赋值运算符" tabindex="-1"><a class="header-anchor" href="#四、赋值运算符"><span>四、赋值运算符</span></a></h2><h3 id="_1-复合赋值运算符" tabindex="-1"><a class="header-anchor" href="#_1-复合赋值运算符"><span>1. 复合赋值运算符</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th><th>等价于</th></tr></thead><tbody><tr><td>+=</td><td>加法赋值</td><td>x += 3</td><td>x = x + 3</td></tr><tr><td>-=</td><td>减法赋值</td><td>x -= 3</td><td>x = x - 3</td></tr><tr><td>*=</td><td>乘法赋值</td><td>x *= 3</td><td>x = x * 3</td></tr><tr><td>/=</td><td>除法赋值</td><td>x /= 3</td><td>x = x / 3</td></tr><tr><td>//=</td><td>整除赋值</td><td>x //= 3</td><td>x = x // 3</td></tr><tr><td>%=</td><td>取余赋值</td><td>x %= 3</td><td>x = x % 3</td></tr><tr><td>**=</td><td>幂运算赋值</td><td>x **= 3</td><td>x = x ** 3</td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 复合赋值示例</span></span>
<span class="line">count <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">count <span class="token operator">+=</span> <span class="token number">5</span>   <span class="token comment"># count = 15</span></span>
<span class="line">count <span class="token operator">-=</span> <span class="token number">3</span>   <span class="token comment"># count = 12</span></span>
<span class="line">count <span class="token operator">*=</span> <span class="token number">2</span>   <span class="token comment"># count = 24</span></span>
<span class="line">count <span class="token operator">//=</span> <span class="token number">5</span>  <span class="token comment"># count = 4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、运算符优先级" tabindex="-1"><a class="header-anchor" href="#五、运算符优先级"><span>五、运算符优先级</span></a></h2><p>优先级从高到低：</p><ol><li><code>**</code> （幂运算）</li><li><code>*</code>、<code>/</code>、<code>//</code>、<code>%</code> （乘除运算）</li><li><code>+</code>、<code>-</code> （加减运算）</li><li><code>==</code>、<code>!=</code>、<code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code> （比较运算）</li><li><code>not</code> （逻辑非）</li><li><code>and</code> （逻辑与）</li><li><code>or</code> （逻辑或）</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 优先级示例</span></span>
<span class="line">result <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span>      <span class="token comment"># 14（先乘后加）</span></span>
<span class="line">result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span>    <span class="token comment"># 20（括号优先）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、实战练习" tabindex="-1"><a class="header-anchor" href="#六、实战练习"><span>六、实战练习</span></a></h2><h3 id="练习1-计算器" tabindex="-1"><a class="header-anchor" href="#练习1-计算器"><span>练习1：计算器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 简易计算器</span></span>
<span class="line">num1 <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入第一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">operator <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入运算符(+, -, *, /)：&quot;</span><span class="token punctuation">)</span></span>
<span class="line">num2 <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入第二个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> operator <span class="token operator">==</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> num1 <span class="token operator">+</span> num2</span>
<span class="line"><span class="token keyword">elif</span> operator <span class="token operator">==</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> num1 <span class="token operator">-</span> num2</span>
<span class="line"><span class="token keyword">elif</span> operator <span class="token operator">==</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> num1 <span class="token operator">*</span> num2</span>
<span class="line"><span class="token keyword">elif</span> operator <span class="token operator">==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> num1 <span class="token operator">/</span> num2</span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token string">&quot;无效运算符&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>num1<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>operator<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>num2<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-判断闰年" tabindex="-1"><a class="header-anchor" href="#练习2-判断闰年"><span>练习2：判断闰年</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 判断闰年</span></span>
<span class="line">year <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年份：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 闰年条件：能被4整除但不能被100整除，或者能被400整除</span></span>
<span class="line">is_leap <span class="token operator">=</span> <span class="token punctuation">(</span>year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>year <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> is_leap<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>year<span class="token punctuation">}</span></span><span class="token string">年是闰年&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>year<span class="token punctuation">}</span></span><span class="token string">年不是闰年&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,35)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),p(t,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/02-%E5%8F%98%E9%87%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"},{default:e(()=>[...n[0]||(n[0]=[s("变量与数据类型",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),p(t,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/04-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.html"},{default:e(()=>[...n[1]||(n[1]=[s("流程控制",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const b=l(d,[["render",u]]),v=JSON.parse('{"path":"/tutorials/python-ai/python/di01zhang-jichubiancheng/03-yunsuanfuyubiaodashi.html","title":"运算符与表达式","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、算术运算符","slug":"一、算术运算符","link":"#一、算术运算符","children":[{"level":3,"title":"1. 基本算术运算符","slug":"_1-基本算术运算符","link":"#_1-基本算术运算符","children":[]},{"level":3,"title":"2. 代码示例","slug":"_2-代码示例","link":"#_2-代码示例","children":[]}]},{"level":2,"title":"二、比较运算符","slug":"二、比较运算符","link":"#二、比较运算符","children":[{"level":3,"title":"1. 比较运算符列表","slug":"_1-比较运算符列表","link":"#_1-比较运算符列表","children":[]},{"level":3,"title":"2. 代码示例","slug":"_2-代码示例-1","link":"#_2-代码示例-1","children":[]}]},{"level":2,"title":"三、逻辑运算符","slug":"三、逻辑运算符","link":"#三、逻辑运算符","children":[{"level":3,"title":"1. 逻辑运算符列表","slug":"_1-逻辑运算符列表","link":"#_1-逻辑运算符列表","children":[]},{"level":3,"title":"2. 代码示例","slug":"_2-代码示例-2","link":"#_2-代码示例-2","children":[]}]},{"level":2,"title":"四、赋值运算符","slug":"四、赋值运算符","link":"#四、赋值运算符","children":[{"level":3,"title":"1. 复合赋值运算符","slug":"_1-复合赋值运算符","link":"#_1-复合赋值运算符","children":[]}]},{"level":2,"title":"五、运算符优先级","slug":"五、运算符优先级","link":"#五、运算符优先级","children":[]},{"level":2,"title":"六、实战练习","slug":"六、实战练习","link":"#六、实战练习","children":[{"level":3,"title":"练习1：计算器","slug":"练习1-计算器","link":"#练习1-计算器","children":[]},{"level":3,"title":"练习2：判断闰年","slug":"练习2-判断闰年","link":"#练习2-判断闰年","children":[]}]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第01章-基础编程/03-运算符与表达式.md"}');export{b as comp,v as data};
