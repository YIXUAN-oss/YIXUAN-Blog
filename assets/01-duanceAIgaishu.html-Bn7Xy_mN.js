import{_ as i,c,d as o,e as s,f as a,b as e,w as u,r as t,o as r}from"./app-CJnNnfV_.js";const d={},k={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/ai-overview-0000001820880597-V5",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/mindspore-lite-guidelines-0000001774121034-V5",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.mindspore.cn/lite",target:"_blank",rel:"noopener noreferrer"};function b(h,n){const p=t("ExternalLinkIcon"),l=t("RouteLink");return r(),c("div",null,[n[6]||(n[6]=o(`<h1 id="端侧-ai-概述" tabindex="-1"><a class="header-anchor" href="#端侧-ai-概述"><span>端侧 AI 概述</span></a></h1><blockquote><p>HarmonyOS NEXT 的核心竞争力 - AI 原生化</p></blockquote><h2 id="🤖-什么是端侧-ai" tabindex="-1"><a class="header-anchor" href="#🤖-什么是端侧-ai"><span>🤖 什么是端侧 AI</span></a></h2><h3 id="云端-ai-vs-端侧-ai" tabindex="-1"><a class="header-anchor" href="#云端-ai-vs-端侧-ai"><span>云端 AI vs 端侧 AI</span></a></h3><table><thead><tr><th>特性</th><th>云端 AI</th><th>端侧 AI</th></tr></thead><tbody><tr><td><strong>响应速度</strong></td><td>慢（网络延迟）</td><td>快（毫秒级）</td></tr><tr><td><strong>隐私保护</strong></td><td>数据上传到云端</td><td>数据不离设备 ⭐</td></tr><tr><td><strong>离线可用</strong></td><td>需要网络</td><td>完全离线 ⭐</td></tr><tr><td><strong>计算资源</strong></td><td>云端服务器</td><td>本地硬件</td></tr><tr><td><strong>成本</strong></td><td>按使用计费</td><td>一次性成本</td></tr><tr><td><strong>模型规模</strong></td><td>大模型</td><td>轻量化模型</td></tr></tbody></table><h3 id="端侧-ai-优势" tabindex="-1"><a class="header-anchor" href="#端侧-ai-优势"><span>端侧 AI 优势</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">端侧 AI = </span>
<span class="line">├─ 🚀 极速响应（&lt;100ms）</span>
<span class="line">├─ 🔒 隐私安全（数据不出设备）</span>
<span class="line">├─ 📡 离线可用（无需网络）</span>
<span class="line">├─ 💰 降低成本（无云端费用）</span>
<span class="line">└─ 🎯 个性化（本地学习）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🏗️-harmonyos-next-ai-架构" tabindex="-1"><a class="header-anchor" href="#🏗️-harmonyos-next-ai-架构"><span>🏗️ HarmonyOS NEXT AI 架构</span></a></h2><h3 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构"><span>整体架构</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">┌──────────────────────────────────┐</span>
<span class="line">│     应用层 (Application)           │</span>
<span class="line">│  ├─ 语音助手                       │</span>
<span class="line">│  ├─ 智能相册                       │</span>
<span class="line">│  └─ 实时翻译                       │</span>
<span class="line">├──────────────────────────────────┤</span>
<span class="line">│     AI Engine API                 │</span>
<span class="line">│  ├─ 语音识别/合成                  │</span>
<span class="line">│  ├─ 图像识别/分类                  │</span>
<span class="line">│  ├─ 自然语言处理                   │</span>
<span class="line">│  └─ 模型管理                       │</span>
<span class="line">├──────────────────────────────────┤</span>
<span class="line">│     AI 推理引擎                    │</span>
<span class="line">│  ├─ MindSpore Lite               │</span>
<span class="line">│  ├─ ONNX Runtime                 │</span>
<span class="line">│  └─ TensorFlow Lite              │</span>
<span class="line">├──────────────────────────────────┤</span>
<span class="line">│     硬件加速层                     │</span>
<span class="line">│  ├─ NPU（神经网络处理器）           │</span>
<span class="line">│  ├─ GPU                          │</span>
<span class="line">│  └─ DSP                          │</span>
<span class="line">└──────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ai-engine-核心能力" tabindex="-1"><a class="header-anchor" href="#ai-engine-核心能力"><span>AI Engine 核心能力</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token constant">AI</span> Engine</span>
<span class="line">├─ 语音能力</span>
<span class="line">│   ├─ <span class="token function">语音识别</span> <span class="token punctuation">(</span><span class="token constant">ASR</span><span class="token punctuation">)</span></span>
<span class="line">│   ├─ <span class="token function">语音合成</span> <span class="token punctuation">(</span><span class="token constant">TTS</span><span class="token punctuation">)</span></span>
<span class="line">│   ├─ 声纹识别</span>
<span class="line">│   └─ 语音唤醒</span>
<span class="line">├─ 视觉能力</span>
<span class="line">│   ├─ 图像分类</span>
<span class="line">│   ├─ 目标检测</span>
<span class="line">│   ├─ 人脸识别</span>
<span class="line">│   ├─ <span class="token constant">OCR</span> 文字识别</span>
<span class="line">│   └─ 图像分割</span>
<span class="line">├─ 语言能力</span>
<span class="line">│   ├─ 文本分类</span>
<span class="line">│   ├─ 情感分析</span>
<span class="line">│   ├─ 命名实体识别</span>
<span class="line">│   ├─ 机器翻译</span>
<span class="line">│   └─ 文本生成</span>
<span class="line">└─ 多模态</span>
<span class="line">    ├─ 图文理解</span>
<span class="line">    ├─ 视频理解</span>
<span class="line">    └─ 跨模态检索</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎯-核心-api-概览" tabindex="-1"><a class="header-anchor" href="#🎯-核心-api-概览"><span>🎯 核心 API 概览</span></a></h2><h3 id="_1-ai-engine-初始化" tabindex="-1"><a class="header-anchor" href="#_1-ai-engine-初始化"><span>1. AI Engine 初始化</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> aiEngine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos.ai.engine&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化 AI Engine</span></span>
<span class="line"><span class="token keyword">const</span> engine <span class="token operator">=</span> aiEngine<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  enableNPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// 启用 NPU 加速</span></span>
<span class="line">  enableGPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// 启用 GPU 加速</span></span>
<span class="line">  threads<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>           <span class="token comment">// 线程数</span></span>
<span class="line">  priority<span class="token operator">:</span> <span class="token string">&#39;high&#39;</span>      <span class="token comment">// 优先级</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-语音识别示例" tabindex="-1"><a class="header-anchor" href="#_2-语音识别示例"><span>2. 语音识别示例</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> speechRecognizer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos.ai.speech&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建语音识别器</span></span>
<span class="line"><span class="token keyword">const</span> recognizer <span class="token operator">=</span> speechRecognizer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  language<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  continuous<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  enablePunctuation<span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 开始识别</span></span>
<span class="line">recognizer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 监听识别结果</span></span>
<span class="line">recognizer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;识别结果:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;置信度:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>confidence<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 停止识别</span></span>
<span class="line">recognizer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-图像识别示例" tabindex="-1"><a class="header-anchor" href="#_3-图像识别示例"><span>3. 图像识别示例</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> imageClassifier <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos.ai.vision&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建图像分类器</span></span>
<span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  modelType<span class="token operator">:</span> <span class="token string">&#39;MobileNetV3&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  topK<span class="token operator">:</span> <span class="token number">5</span>  <span class="token comment">// 返回前5个结果</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 加载图片</span></span>
<span class="line"><span class="token keyword">const</span> imageData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token string">&#39;path/to/image.jpg&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行分类</span></span>
<span class="line"><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>imageData<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">results<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>confidence<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-文本分类示例" tabindex="-1"><a class="header-anchor" href="#_4-文本分类示例"><span>4. 文本分类示例</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> textClassifier <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos.ai.nlp&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建文本分类器</span></span>
<span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> textClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  modelPath<span class="token operator">:</span> <span class="token string">&#39;sentiment_analysis.ms&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  labels<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;正面&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;负面&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;中性&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 分类文本</span></span>
<span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;这个产品非常好用，我很满意！&#39;</span></span>
<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;情感:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>label<span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;置信度:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>confidence<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚀-应用场景" tabindex="-1"><a class="header-anchor" href="#🚀-应用场景"><span>🚀 应用场景</span></a></h2><h3 id="_1-智能语音助手" tabindex="-1"><a class="header-anchor" href="#_1-智能语音助手"><span>1. 智能语音助手</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct VoiceAssistant <span class="token punctuation">{</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> transcript<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> isListening<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">  <span class="token keyword">private</span> recognizer<span class="token operator">:</span> SpeechRecognizer</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">startListening</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>recognizer <span class="token operator">=</span> speechRecognizer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      language<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>recognizer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>transcript <span class="token operator">=</span> result<span class="token punctuation">.</span>text</span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleCommand</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>recognizer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>isListening <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">handleCommand</span><span class="token punctuation">(</span>command<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;打开相机&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 打开相机</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;播放音乐&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 播放音乐</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>transcript<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isListening <span class="token operator">?</span> <span class="token string">&#39;停止&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;开始&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isListening<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>recognizer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>isListening <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startListening</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-智能相册" tabindex="-1"><a class="header-anchor" href="#_2-智能相册"><span>2. 智能相册</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct SmartAlbum <span class="token punctuation">{</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> photos<span class="token operator">:</span> Photo<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> searchResults<span class="token operator">:</span> Photo<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">private</span> classifier<span class="token operator">:</span> ImageClassifier</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>classifier <span class="token operator">=</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scanPhotos</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">scanPhotos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> allPhotos <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPhotoList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> photo <span class="token keyword">of</span> allPhotos<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> imageData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadPhoto</span><span class="token punctuation">(</span>photo<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> tags <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>imageData<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      photo<span class="token punctuation">.</span>tags <span class="token operator">=</span> tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>label<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>photos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>photo<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">searchByText</span><span class="token punctuation">(</span>query<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 根据标签搜索照片</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>searchResults <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>photos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>photo <span class="token operator">=&gt;</span> </span>
<span class="line">      photo<span class="token punctuation">.</span>tags<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>tag <span class="token operator">=&gt;</span> tag<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">SearchBar</span><span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">        <span class="token function-variable function">onSearch</span><span class="token operator">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchByText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> </span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Grid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchResults<span class="token punctuation">,</span> <span class="token punctuation">(</span>photo<span class="token operator">:</span> Photo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Image</span><span class="token punctuation">(</span>photo<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-实时翻译" tabindex="-1"><a class="header-anchor" href="#_3-实时翻译"><span>3. 实时翻译</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct RealtimeTranslator <span class="token punctuation">{</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> sourceText<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> translatedText<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">  <span class="token keyword">private</span> translator<span class="token operator">:</span> Translator</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>translator <span class="token operator">=</span> translator<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      sourceLang<span class="token operator">:</span> <span class="token string">&#39;zh&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      targetLang<span class="token operator">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      offline<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">// 离线翻译</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translator<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sourceText<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>translatedText <span class="token operator">=</span> result<span class="token punctuation">.</span>text</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">TextArea</span><span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">        placeholder<span class="token operator">:</span> <span class="token string">&#39;输入中文&#39;</span> </span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>sourceText <span class="token operator">=</span> value</span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 实时翻译</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>translatedText<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-性能优化" tabindex="-1"><a class="header-anchor" href="#💡-性能优化"><span>💡 性能优化</span></a></h2><h3 id="_1-模型加载优化" tabindex="-1"><a class="header-anchor" href="#_1-模型加载优化"><span>1. 模型加载优化</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ❌ 每次都加载模型</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">classify</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> classifier <span class="token operator">=</span> <span class="token keyword">await</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ 复用模型实例</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ImageService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> classifier<span class="token operator">:</span> ImageClassifier</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>classifier <span class="token operator">=</span> <span class="token keyword">await</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">classify</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-硬件加速" tabindex="-1"><a class="header-anchor" href="#_2-硬件加速"><span>2. 硬件加速</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 启用 NPU 加速</span></span>
<span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  enableNPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// NPU 加速</span></span>
<span class="line">  enableGPU<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// GPU 加速</span></span>
<span class="line">  enableDSP<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// DSP 加速</span></span>
<span class="line">  precision<span class="token operator">:</span> <span class="token string">&#39;FP16&#39;</span>       <span class="token comment">// 半精度计算</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-批处理" tabindex="-1"><a class="header-anchor" href="#_3-批处理"><span>3. 批处理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 批量处理提高效率</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">batchClassify</span><span class="token punctuation">(</span>images<span class="token operator">:</span> ImageData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> classifier <span class="token operator">=</span> <span class="token keyword">await</span> imageClassifier<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">batchClassify</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    batchSize<span class="token operator">:</span> <span class="token number">32</span>  <span class="token comment">// 批量大小</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> results</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔒-隐私保护" tabindex="-1"><a class="header-anchor" href="#🔒-隐私保护"><span>🔒 隐私保护</span></a></h2><h3 id="数据不出设备" tabindex="-1"><a class="header-anchor" href="#数据不出设备"><span>数据不出设备</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 所有 AI 推理都在本地完成</span></span>
<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> classifier<span class="token punctuation">.</span><span class="token function">classify</span><span class="token punctuation">(</span>imageData<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// imageData 从未上传到云端</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 用户数据完全本地化</span></span>
<span class="line"><span class="token keyword">const</span> userProfile <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  preferences<span class="token operator">:</span> localAI<span class="token punctuation">.</span><span class="token function">analyze</span><span class="token punctuation">(</span>userBehavior<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  recommendations<span class="token operator">:</span> localAI<span class="token punctuation">.</span><span class="token function">recommend</span><span class="token punctuation">(</span>userHistory<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理"><span>权限管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 请求 AI 能力权限</span></span>
<span class="line"><span class="token keyword">const</span> permissions <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string">&#39;ohos.permission.MICROPHONE&#39;</span><span class="token punctuation">,</span>       <span class="token comment">// 麦克风（语音识别）</span></span>
<span class="line">  <span class="token string">&#39;ohos.permission.CAMERA&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// 相机（图像识别）</span></span>
<span class="line">  <span class="token string">&#39;ohos.permission.READ_MEDIA&#39;</span>        <span class="token comment">// 读取媒体（图片分析）</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> <span class="token function">requestPermissions</span><span class="token punctuation">(</span>permissions<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-性能指标" tabindex="-1"><a class="header-anchor" href="#📊-性能指标"><span>📊 性能指标</span></a></h2><h3 id="推理速度" tabindex="-1"><a class="header-anchor" href="#推理速度"><span>推理速度</span></a></h3><table><thead><tr><th>任务类型</th><th>模型大小</th><th>NPU 推理时间</th><th>CPU 推理时间</th></tr></thead><tbody><tr><td>图像分类</td><td>5MB</td><td>10ms</td><td>100ms</td></tr><tr><td>目标检测</td><td>20MB</td><td>50ms</td><td>500ms</td></tr><tr><td>语音识别</td><td>10MB</td><td>20ms</td><td>200ms</td></tr><tr><td>文本分类</td><td>2MB</td><td>5ms</td><td>50ms</td></tr></tbody></table><h3 id="功耗对比" tabindex="-1"><a class="header-anchor" href="#功耗对比"><span>功耗对比</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">推理 1000 次图像分类任务：</span>
<span class="line">├─ NPU: 30mAh</span>
<span class="line">├─ GPU: 50mAh</span>
<span class="line">└─ CPU: 100mAh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎓-学习路径" tabindex="-1"><a class="header-anchor" href="#🎓-学习路径"><span>🎓 学习路径</span></a></h2><h3 id="初级-1-2周" tabindex="-1"><a class="header-anchor" href="#初级-1-2周"><span>初级（1-2周）</span></a></h3><ol><li>✅ 理解端侧 AI 概念</li><li>✅ 学习 AI Engine API</li><li>✅ 运行示例代码</li><li>✅ 完成简单 Demo</li></ol><h3 id="中级-3-4周" tabindex="-1"><a class="header-anchor" href="#中级-3-4周"><span>中级（3-4周）</span></a></h3><ol><li>✅ 集成各种 AI 能力</li><li>✅ 优化模型性能</li><li>✅ 处理实际场景</li><li>✅ 完成中等项目</li></ol><h3 id="高级-5-8周" tabindex="-1"><a class="header-anchor" href="#高级-5-8周"><span>高级（5-8周）</span></a></h3><ol><li>✅ 自定义模型训练</li><li>✅ 模型转换和部署</li><li>✅ 复杂场景优化</li><li>✅ 完成产品级应用</li></ol><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,53)),s("ul",null,[s("li",null,[s("a",k,[n[0]||(n[0]=a("AI能力概述",-1)),e(p)])]),s("li",null,[s("a",v,[n[1]||(n[1]=a("MindSpore Lite推理",-1)),e(p)])]),s("li",null,[s("a",m,[n[2]||(n[2]=a("MindSpore官网",-1)),e(p)])])]),n[7]||(n[7]=s("hr",null,null,-1)),s("p",null,[n[4]||(n[4]=s("strong",null,"下一节",-1)),n[5]||(n[5]=a(" → ",-1)),e(l,{to:"/tutorials/harmonyos-dev/09-ai-native/02-AI-Engine-API.html"},{default:u(()=>[...n[3]||(n[3]=[a("AI Engine API",-1)])]),_:1})])])}const f=i(d,[["render",b]]),y=JSON.parse('{"path":"/tutorials/harmonyos-dev/09-ai-native/01-duanceAIgaishu.html","title":"端侧 AI 概述","lang":"zh-CN","frontmatter":{"title":"端侧 AI 概述","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"🤖 什么是端侧 AI","slug":"🤖-什么是端侧-ai","link":"#🤖-什么是端侧-ai","children":[{"level":3,"title":"云端 AI vs 端侧 AI","slug":"云端-ai-vs-端侧-ai","link":"#云端-ai-vs-端侧-ai","children":[]},{"level":3,"title":"端侧 AI 优势","slug":"端侧-ai-优势","link":"#端侧-ai-优势","children":[]}]},{"level":2,"title":"🏗️ HarmonyOS NEXT AI 架构","slug":"🏗️-harmonyos-next-ai-架构","link":"#🏗️-harmonyos-next-ai-架构","children":[{"level":3,"title":"整体架构","slug":"整体架构","link":"#整体架构","children":[]},{"level":3,"title":"AI Engine 核心能力","slug":"ai-engine-核心能力","link":"#ai-engine-核心能力","children":[]}]},{"level":2,"title":"🎯 核心 API 概览","slug":"🎯-核心-api-概览","link":"#🎯-核心-api-概览","children":[{"level":3,"title":"1. AI Engine 初始化","slug":"_1-ai-engine-初始化","link":"#_1-ai-engine-初始化","children":[]},{"level":3,"title":"2. 语音识别示例","slug":"_2-语音识别示例","link":"#_2-语音识别示例","children":[]},{"level":3,"title":"3. 图像识别示例","slug":"_3-图像识别示例","link":"#_3-图像识别示例","children":[]},{"level":3,"title":"4. 文本分类示例","slug":"_4-文本分类示例","link":"#_4-文本分类示例","children":[]}]},{"level":2,"title":"🚀 应用场景","slug":"🚀-应用场景","link":"#🚀-应用场景","children":[{"level":3,"title":"1. 智能语音助手","slug":"_1-智能语音助手","link":"#_1-智能语音助手","children":[]},{"level":3,"title":"2. 智能相册","slug":"_2-智能相册","link":"#_2-智能相册","children":[]},{"level":3,"title":"3. 实时翻译","slug":"_3-实时翻译","link":"#_3-实时翻译","children":[]}]},{"level":2,"title":"💡 性能优化","slug":"💡-性能优化","link":"#💡-性能优化","children":[{"level":3,"title":"1. 模型加载优化","slug":"_1-模型加载优化","link":"#_1-模型加载优化","children":[]},{"level":3,"title":"2. 硬件加速","slug":"_2-硬件加速","link":"#_2-硬件加速","children":[]},{"level":3,"title":"3. 批处理","slug":"_3-批处理","link":"#_3-批处理","children":[]}]},{"level":2,"title":"🔒 隐私保护","slug":"🔒-隐私保护","link":"#🔒-隐私保护","children":[{"level":3,"title":"数据不出设备","slug":"数据不出设备","link":"#数据不出设备","children":[]},{"level":3,"title":"权限管理","slug":"权限管理","link":"#权限管理","children":[]}]},{"level":2,"title":"📊 性能指标","slug":"📊-性能指标","link":"#📊-性能指标","children":[{"level":3,"title":"推理速度","slug":"推理速度","link":"#推理速度","children":[]},{"level":3,"title":"功耗对比","slug":"功耗对比","link":"#功耗对比","children":[]}]},{"level":2,"title":"🎓 学习路径","slug":"🎓-学习路径","link":"#🎓-学习路径","children":[{"level":3,"title":"初级（1-2周）","slug":"初级-1-2周","link":"#初级-1-2周","children":[]},{"level":3,"title":"中级（3-4周）","slug":"中级-3-4周","link":"#中级-3-4周","children":[]},{"level":3,"title":"高级（5-8周）","slug":"高级-5-8周","link":"#高级-5-8周","children":[]}]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/09-ai-native/01-端侧AI概述.md"}');export{f as comp,y as data};
