import{_ as p,c as l,d as t,e as s,f as a,b as i,w as o,r as c,o as r}from"./app-QnWV-YHu.js";const u={};function d(k,n){const e=c("RouteLink");return r(),l("div",null,[n[3]||(n[3]=t(`<h1 id="目标检测算法" tabindex="-1"><a class="header-anchor" href="#目标检测算法"><span>目标检测算法</span></a></h1><blockquote><p>掌握深度学习目标检测算法</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>理解YOLO算法</li><li>学会使用YOLOv5</li><li>了解其他检测算法</li><li>掌握模型部署</li></ul><h2 id="_1-yolov5-使用" tabindex="-1"><a class="header-anchor" href="#_1-yolov5-使用"><span>1. YOLOv5 使用</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> torch</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载模型</span></span>
<span class="line">model <span class="token operator">=</span> torch<span class="token punctuation">.</span>hub<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">&#39;ultralytics/yolov5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yolov5s&#39;</span><span class="token punctuation">,</span> pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 推理</span></span>
<span class="line">img <span class="token operator">=</span> <span class="token string">&#39;image.jpg&#39;</span></span>
<span class="line">results <span class="token operator">=</span> model<span class="token punctuation">(</span>img<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 显示结果</span></span>
<span class="line">results<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 打印结果</span></span>
<span class="line">results<span class="token punctuation">.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 保存结果</span></span>
<span class="line">results<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-实时检测" tabindex="-1"><a class="header-anchor" href="#_2-实时检测"><span>2. 实时检测</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载模型</span></span>
<span class="line">model <span class="token operator">=</span> torch<span class="token punctuation">.</span>hub<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">&#39;ultralytics/yolov5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yolov5s&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 打开摄像头</span></span>
<span class="line">cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检测</span></span>
<span class="line">    results <span class="token operator">=</span> model<span class="token punctuation">(</span>frame<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 渲染结果</span></span>
<span class="line">    rendered <span class="token operator">=</span> results<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 显示</span></span>
<span class="line">    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;YOLOv5&#39;</span><span class="token punctuation">,</span> rendered<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-自定义训练" tabindex="-1"><a class="header-anchor" href="#_3-自定义训练"><span>3. 自定义训练</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 准备数据集（YOLO格式）</span></span>
<span class="line"><span class="token comment"># data.yaml 配置文件</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 训练</span></span>
<span class="line">!python train<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>img <span class="token number">640</span> <span class="token operator">-</span><span class="token operator">-</span>batch <span class="token number">16</span> <span class="token operator">-</span><span class="token operator">-</span>epochs <span class="token number">50</span> \\</span>
<span class="line">                 <span class="token operator">-</span><span class="token operator">-</span>data data<span class="token punctuation">.</span>yaml <span class="token operator">-</span><span class="token operator">-</span>weights yolov5s<span class="token punctuation">.</span>pt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 验证</span></span>
<span class="line">!python val<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>weights runs<span class="token operator">/</span>train<span class="token operator">/</span>exp<span class="token operator">/</span>weights<span class="token operator">/</span>best<span class="token punctuation">.</span>pt \\</span>
<span class="line">               <span class="token operator">-</span><span class="token operator">-</span>data data<span class="token punctuation">.</span>yaml</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 推理</span></span>
<span class="line">!python detect<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>weights runs<span class="token operator">/</span>train<span class="token operator">/</span>exp<span class="token operator">/</span>weights<span class="token operator">/</span>best<span class="token punctuation">.</span>pt \\</span>
<span class="line">                  <span class="token operator">-</span><span class="token operator">-</span>source test<span class="token punctuation">.</span>jpg</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-其他算法" tabindex="-1"><a class="header-anchor" href="#_4-其他算法"><span>4. 其他算法</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># Faster R-CNN</span></span>
<span class="line"><span class="token keyword">import</span> torchvision</span>
<span class="line">model <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>detection<span class="token punctuation">.</span>fasterrcnn_resnet50_fpn<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># RetinaNet</span></span>
<span class="line">model <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>detection<span class="token punctuation">.</span>retinanet_resnet50_fpn<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line">model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    predictions <span class="token operator">=</span> model<span class="token punctuation">(</span>images<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,13)),s("p",null,[n[1]||(n[1]=s("strong",null,"下一节：",-1)),n[2]||(n[2]=a()),i(e,{to:"/tutorials/python-ai/cv/12-%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B.html"},{default:o(()=>[...n[0]||(n[0]=[a("实战案例",-1)])]),_:1})])])}const m=p(u,[["render",d]]),b=JSON.parse('{"path":"/tutorials/python-ai/cv/11-mubiaojiancesuanfa.html","title":"目标检测算法","lang":"zh-CN","frontmatter":{"title":"目标检测算法"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. YOLOv5 使用","slug":"_1-yolov5-使用","link":"#_1-yolov5-使用","children":[]},{"level":2,"title":"2. 实时检测","slug":"_2-实时检测","link":"#_2-实时检测","children":[]},{"level":2,"title":"3. 自定义训练","slug":"_3-自定义训练","link":"#_3-自定义训练","children":[]},{"level":2,"title":"4. 其他算法","slug":"_4-其他算法","link":"#_4-其他算法","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/cv/11-目标检测算法.md"}');export{m as comp,b as data};
