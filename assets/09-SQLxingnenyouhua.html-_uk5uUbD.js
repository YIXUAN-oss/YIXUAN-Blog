import{_ as p,c as l,d as t,e as a,f as n,b as i,w as o,r as c,o as r}from"./app-378p-rnH.js";const d={};function k(u,s){const e=c("RouteLink");return r(),l("div",null,[s[3]||(s[3]=t(`<h1 id="sql性能优化" tabindex="-1"><a class="header-anchor" href="#sql性能优化"><span>SQL性能优化</span></a></h1><blockquote><p>SQL性能优化是数据库优化的核心内容。本章介绍常见的SQL优化技巧和最佳实践。</p></blockquote><h2 id="📋-本章目录" tabindex="-1"><a class="header-anchor" href="#📋-本章目录"><span>📋 本章目录</span></a></h2><ul><li><a href="#%E4%B8%80insert%E4%BC%98%E5%8C%96">一、INSERT优化</a></li><li><a href="#%E4%BA%8C%E4%B8%BB%E9%94%AE%E4%BC%98%E5%8C%96">二、主键优化</a></li><li><a href="#%E4%B8%89order-by%E4%BC%98%E5%8C%96">三、ORDER BY优化</a></li><li><a href="#%E5%9B%9Bgroup-by%E4%BC%98%E5%8C%96">四、GROUP BY优化</a></li><li><a href="#%E4%BA%94limit%E4%BC%98%E5%8C%96">五、LIMIT优化</a></li><li><a href="#%E5%85%ADsql%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7">六、SQL优化技巧</a></li></ul><hr><h2 id="一、insert优化" tabindex="-1"><a class="header-anchor" href="#一、insert优化"><span>一、INSERT优化</span></a></h2><h3 id="_1-1-批量插入" tabindex="-1"><a class="header-anchor" href="#_1-1-批量插入"><span>1.1 批量插入</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 效率低（逐条插入）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 效率高（批量插入）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> </span>
<span class="line"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 建议：每批500-1000条</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-手动提交事务" tabindex="-1"><a class="header-anchor" href="#_1-2-手动提交事务"><span>1.2 手动提交事务</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 自动提交（每条都提交）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 手动提交（批量提交）</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-主键顺序插入" tabindex="-1"><a class="header-anchor" href="#_1-3-主键顺序插入"><span>1.3 主键顺序插入</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ✅ 顺序插入（推荐）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ❌ 乱序插入（会导致页分裂）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-使用load-data" tabindex="-1"><a class="header-anchor" href="#_1-4-使用load-data"><span>1.4 使用LOAD DATA</span></a></h3><p>大批量数据导入使用LOAD DATA效率最高：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 启用本地文件导入</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> local_infile <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 导入数据</span></span>
<span class="line"><span class="token keyword">LOAD</span> <span class="token keyword">DATA</span> <span class="token keyword">LOCAL</span> <span class="token keyword">INFILE</span> <span class="token string">&#39;/path/to/data.csv&#39;</span></span>
<span class="line"><span class="token keyword">INTO</span> <span class="token keyword">TABLE</span> users</span>
<span class="line"><span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">&#39;,&#39;</span></span>
<span class="line"><span class="token keyword">LINES</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">&#39;\\n&#39;</span></span>
<span class="line"><span class="token keyword">IGNORE</span> <span class="token number">1</span> <span class="token keyword">ROWS</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、主键优化" tabindex="-1"><a class="header-anchor" href="#二、主键优化"><span>二、主键优化</span></a></h2><h3 id="_2-1-主键设计原则" tabindex="-1"><a class="header-anchor" href="#_2-1-主键设计原则"><span>2.1 主键设计原则</span></a></h3><p><strong>1. 使用自增主键</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ✅ 推荐：自增主键</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ❌ 不推荐：UUID（长度大、无序）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  <span class="token comment">-- UUID</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 主键长度尽量短</strong></p><ul><li>主键越短，二级索引占用空间越小</li><li>推荐使用INT或BIGINT</li></ul><p><strong>3. 顺序插入，避免页分裂</strong></p><ul><li>自增主键保证顺序插入</li><li>UUID等无序主键会导致频繁的页分裂</li></ul><h3 id="_2-2-页分裂和页合并" tabindex="-1"><a class="header-anchor" href="#_2-2-页分裂和页合并"><span>2.2 页分裂和页合并</span></a></h3><p><strong>页分裂：</strong> 插入数据时，如果当前页满了，需要分裂成两个页，影响性能。</p><p><strong>页合并：</strong> 删除数据后，如果页的利用率低于阈值（默认50%），会合并页。</p><p><strong>优化建议：</strong></p><ul><li>使用自增主键避免页分裂</li><li>批量删除后考虑OPTIMIZE TABLE</li></ul><hr><h2 id="三、order-by优化" tabindex="-1"><a class="header-anchor" href="#三、order-by优化"><span>三、ORDER BY优化</span></a></h2><h3 id="_3-1-using-filesort-vs-using-index" tabindex="-1"><a class="header-anchor" href="#_3-1-using-filesort-vs-using-index"><span>3.1 Using filesort vs Using index</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ Using filesort（文件排序，慢）</span></span>
<span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> age<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ Using index（索引排序，快）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_age <span class="token keyword">ON</span> users<span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> age<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-优化技巧" tabindex="-1"><a class="header-anchor" href="#_3-2-优化技巧"><span>3.2 优化技巧</span></a></h3><p><strong>1. 创建排序字段的索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_create_time <span class="token keyword">ON</span> orders<span class="token punctuation">(</span>create_time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> create_time<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 覆盖索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name_age <span class="token keyword">ON</span> users<span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 只查询索引字段，避免回表</span></span>
<span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> age <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> age<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 联合索引注意顺序</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_status_time <span class="token keyword">ON</span> orders<span class="token punctuation">(</span><span class="token keyword">status</span><span class="token punctuation">,</span> create_time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 能用到索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> create_time<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ❌ 不能用到索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> create_time<span class="token punctuation">;</span>  <span class="token comment">-- 缺少status条件</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、group-by优化" tabindex="-1"><a class="header-anchor" href="#四、group-by优化"><span>四、GROUP BY优化</span></a></h2><h3 id="_4-1-优化策略" tabindex="-1"><a class="header-anchor" href="#_4-1-优化策略"><span>4.1 优化策略</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 为GROUP BY字段创建索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_dept_id <span class="token keyword">ON</span> employees<span class="token punctuation">(</span>dept_id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">SELECT</span> dept_id<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> </span>
<span class="line"><span class="token keyword">FROM</span> employees </span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> dept_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-避免回表" tabindex="-1"><a class="header-anchor" href="#_4-2-避免回表"><span>4.2 避免回表</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建覆盖索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_dept_salary <span class="token keyword">ON</span> employees<span class="token punctuation">(</span>dept_id<span class="token punctuation">,</span> salary<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 不需要回表</span></span>
<span class="line"><span class="token keyword">SELECT</span> dept_id<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> </span>
<span class="line"><span class="token keyword">FROM</span> employees </span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> dept_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、limit优化" tabindex="-1"><a class="header-anchor" href="#五、limit优化"><span>五、LIMIT优化</span></a></h2><h3 id="_5-1-深度分页优化" tabindex="-1"><a class="header-anchor" href="#_5-1-深度分页优化"><span>5.1 深度分页优化</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 慢：扫描前10000条，只取10条</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 快：使用子查询优化</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users </span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">&gt;=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> id <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 或使用覆盖索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users u</span>
<span class="line"><span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> id <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> t </span>
<span class="line"><span class="token keyword">ON</span> u<span class="token punctuation">.</span>id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-使用id范围" tabindex="-1"><a class="header-anchor" href="#_5-2-使用id范围"><span>5.2 使用ID范围</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 记录上次查询的最大ID</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">&gt;</span> <span class="token number">10000</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、sql优化技巧" tabindex="-1"><a class="header-anchor" href="#六、sql优化技巧"><span>六、SQL优化技巧</span></a></h2><h3 id="_6-1-避免select" tabindex="-1"><a class="header-anchor" href="#_6-1-避免select"><span>6.1 避免SELECT *</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 不推荐</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 推荐：只查询需要的字段</span></span>
<span class="line"><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> email <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-避免在where中使用函数" tabindex="-1"><a class="header-anchor" href="#_6-2-避免在where中使用函数"><span>6.2 避免在WHERE中使用函数</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 索引失效</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>create_time<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2024</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 使用范围查询</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders </span>
<span class="line"><span class="token keyword">WHERE</span> create_time <span class="token operator">&gt;=</span> <span class="token string">&#39;2024-01-01&#39;</span> <span class="token operator">AND</span> create_time <span class="token operator">&lt;</span> <span class="token string">&#39;2025-01-01&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-使用union-all代替union" tabindex="-1"><a class="header-anchor" href="#_6-3-使用union-all代替union"><span>6.3 使用UNION ALL代替UNION</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- UNION会去重，效率低</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">&lt;</span> <span class="token number">20</span></span>
<span class="line"><span class="token keyword">UNION</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token number">10000</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- UNION ALL不去重，效率高</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">&lt;</span> <span class="token number">20</span></span>
<span class="line"><span class="token keyword">UNION</span> <span class="token keyword">ALL</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token number">10000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-4-小表驱动大表" tabindex="-1"><a class="header-anchor" href="#_6-4-小表驱动大表"><span>6.4 小表驱动大表</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ✅ 小表在前（users表小）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users u</span>
<span class="line"><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> orders o <span class="token keyword">ON</span> u<span class="token punctuation">.</span>id <span class="token operator">=</span> o<span class="token punctuation">.</span>user_id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ❌ 大表在前（orders表大）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders o</span>
<span class="line"><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> users u <span class="token keyword">ON</span> o<span class="token punctuation">.</span>user_id <span class="token operator">=</span> u<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-使用exists代替in" tabindex="-1"><a class="header-anchor" href="#_6-5-使用exists代替in"><span>6.5 使用EXISTS代替IN</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 当子查询结果集大时，用EXISTS效率更高</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users u</span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token keyword">FROM</span> orders o <span class="token keyword">WHERE</span> o<span class="token punctuation">.</span>user_id <span class="token operator">=</span> u<span class="token punctuation">.</span>id</span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-6-避免使用子查询" tabindex="-1"><a class="header-anchor" href="#_6-6-避免使用子查询"><span>6.6 避免使用子查询</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 子查询（可能慢）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users </span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> user_id <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ JOIN（通常更快）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> u<span class="token punctuation">.</span><span class="token operator">*</span> </span>
<span class="line"><span class="token keyword">FROM</span> users u</span>
<span class="line"><span class="token keyword">JOIN</span> orders o <span class="token keyword">ON</span> u<span class="token punctuation">.</span>id <span class="token operator">=</span> o<span class="token punctuation">.</span>user_id</span>
<span class="line"><span class="token keyword">WHERE</span> o<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、性能分析工具" tabindex="-1"><a class="header-anchor" href="#七、性能分析工具"><span>七、性能分析工具</span></a></h2><h3 id="_7-1-explain分析" tabindex="-1"><a class="header-anchor" href="#_7-1-explain分析"><span>7.1 EXPLAIN分析</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>关键指标：</strong></p><ul><li><code>type</code>：ALL（全表扫描）→ index → range → ref → const（最优）</li><li><code>key</code>：使用的索引</li><li><code>rows</code>：扫描行数</li><li><code>Extra</code>：额外信息（Using index、Using filesort等）</li></ul><h3 id="_7-2-show-profile" tabindex="-1"><a class="header-anchor" href="#_7-2-show-profile"><span>7.2 SHOW PROFILE</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 开启profiling</span></span>
<span class="line"><span class="token keyword">SET</span> profiling <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 执行SQL</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看性能</span></span>
<span class="line"><span class="token keyword">SHOW</span> PROFILES<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SHOW</span> PROFILE <span class="token keyword">FOR</span> QUERY <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-慢查询日志" tabindex="-1"><a class="header-anchor" href="#_7-3-慢查询日志"><span>7.3 慢查询日志</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 开启慢查询日志</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> slow_query_log <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> long_query_time <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">-- 超过2秒的查询</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看慢查询日志位置</span></span>
<span class="line"><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;slow_query_log_file&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、本章总结" tabindex="-1"><a class="header-anchor" href="#八、本章总结"><span>八、本章总结</span></a></h2><h3 id="优化清单" tabindex="-1"><a class="header-anchor" href="#优化清单"><span>优化清单</span></a></h3><p><strong>INSERT优化：</strong></p><ul><li>✅ 批量插入</li><li>✅ 手动提交事务</li><li>✅ 主键顺序插入</li><li>✅ 大批量用LOAD DATA</li></ul><p><strong>索引优化：</strong></p><ul><li>✅ 为WHERE、ORDER BY、GROUP BY字段建索引</li><li>✅ 使用覆盖索引</li><li>✅ 避免索引失效</li></ul><p><strong>SQL优化：</strong></p><ul><li>✅ 避免SELECT *</li><li>✅ 避免在WHERE中使用函数</li><li>✅ 小表驱动大表</li><li>✅ 优化深度分页</li></ul><p><strong>分析工具：</strong></p><ul><li>✅ EXPLAIN分析执行计划</li><li>✅ SHOW PROFILE性能分析</li><li>✅ 慢查询日志</li></ul><hr><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 1. 优化以下SQL</span></span>
<span class="line"><span class="token comment">-- 原SQL</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> <span class="token keyword">DATE</span><span class="token punctuation">(</span>create_time<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;2024-01-01&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 优化后</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders </span>
<span class="line"><span class="token keyword">WHERE</span> create_time <span class="token operator">&gt;=</span> <span class="token string">&#39;2024-01-01&#39;</span> <span class="token operator">AND</span> create_time <span class="token operator">&lt;</span> <span class="token string">&#39;2024-01-02&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 优化深度分页</span></span>
<span class="line"><span class="token comment">-- 原SQL</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 优化后</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">&gt;</span> <span class="token number">100000</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 分析执行计划</span></span>
<span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> create_time<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><strong>教程核心章节已完成！其他章节请参考原文件或官方文档学习。</strong></p>`,92)),a("p",null,[a("strong",null,[s[1]||(s[1]=n("继续学习：",-1)),i(e,{to:"/tutorials/java-backend/mysql/%E7%AC%AC04%E7%AB%A0-%E5%AE%9E%E8%B7%B5%E7%BB%83%E4%B9%A0/"},{default:o(()=>[...s[0]||(s[0]=[n("实践练习",-1)])]),_:1})]),s[2]||(s[2]=n(" →",-1))])])}const v=p(d,[["render",k]]),b=JSON.parse('{"path":"/tutorials/java-backend/mysql/di03zhang-gaojipian/09-SQLxingnenyouhua.html","title":"SQL性能优化","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 本章目录","slug":"📋-本章目录","link":"#📋-本章目录","children":[]},{"level":2,"title":"一、INSERT优化","slug":"一、insert优化","link":"#一、insert优化","children":[{"level":3,"title":"1.1 批量插入","slug":"_1-1-批量插入","link":"#_1-1-批量插入","children":[]},{"level":3,"title":"1.2 手动提交事务","slug":"_1-2-手动提交事务","link":"#_1-2-手动提交事务","children":[]},{"level":3,"title":"1.3 主键顺序插入","slug":"_1-3-主键顺序插入","link":"#_1-3-主键顺序插入","children":[]},{"level":3,"title":"1.4 使用LOAD DATA","slug":"_1-4-使用load-data","link":"#_1-4-使用load-data","children":[]}]},{"level":2,"title":"二、主键优化","slug":"二、主键优化","link":"#二、主键优化","children":[{"level":3,"title":"2.1 主键设计原则","slug":"_2-1-主键设计原则","link":"#_2-1-主键设计原则","children":[]},{"level":3,"title":"2.2 页分裂和页合并","slug":"_2-2-页分裂和页合并","link":"#_2-2-页分裂和页合并","children":[]}]},{"level":2,"title":"三、ORDER BY优化","slug":"三、order-by优化","link":"#三、order-by优化","children":[{"level":3,"title":"3.1 Using filesort vs Using index","slug":"_3-1-using-filesort-vs-using-index","link":"#_3-1-using-filesort-vs-using-index","children":[]},{"level":3,"title":"3.2 优化技巧","slug":"_3-2-优化技巧","link":"#_3-2-优化技巧","children":[]}]},{"level":2,"title":"四、GROUP BY优化","slug":"四、group-by优化","link":"#四、group-by优化","children":[{"level":3,"title":"4.1 优化策略","slug":"_4-1-优化策略","link":"#_4-1-优化策略","children":[]},{"level":3,"title":"4.2 避免回表","slug":"_4-2-避免回表","link":"#_4-2-避免回表","children":[]}]},{"level":2,"title":"五、LIMIT优化","slug":"五、limit优化","link":"#五、limit优化","children":[{"level":3,"title":"5.1 深度分页优化","slug":"_5-1-深度分页优化","link":"#_5-1-深度分页优化","children":[]},{"level":3,"title":"5.2 使用ID范围","slug":"_5-2-使用id范围","link":"#_5-2-使用id范围","children":[]}]},{"level":2,"title":"六、SQL优化技巧","slug":"六、sql优化技巧","link":"#六、sql优化技巧","children":[{"level":3,"title":"6.1 避免SELECT *","slug":"_6-1-避免select","link":"#_6-1-避免select","children":[]},{"level":3,"title":"6.2 避免在WHERE中使用函数","slug":"_6-2-避免在where中使用函数","link":"#_6-2-避免在where中使用函数","children":[]},{"level":3,"title":"6.3 使用UNION ALL代替UNION","slug":"_6-3-使用union-all代替union","link":"#_6-3-使用union-all代替union","children":[]},{"level":3,"title":"6.4 小表驱动大表","slug":"_6-4-小表驱动大表","link":"#_6-4-小表驱动大表","children":[]},{"level":3,"title":"6.5 使用EXISTS代替IN","slug":"_6-5-使用exists代替in","link":"#_6-5-使用exists代替in","children":[]},{"level":3,"title":"6.6 避免使用子查询","slug":"_6-6-避免使用子查询","link":"#_6-6-避免使用子查询","children":[]}]},{"level":2,"title":"七、性能分析工具","slug":"七、性能分析工具","link":"#七、性能分析工具","children":[{"level":3,"title":"7.1 EXPLAIN分析","slug":"_7-1-explain分析","link":"#_7-1-explain分析","children":[]},{"level":3,"title":"7.2 SHOW PROFILE","slug":"_7-2-show-profile","link":"#_7-2-show-profile","children":[]},{"level":3,"title":"7.3 慢查询日志","slug":"_7-3-慢查询日志","link":"#_7-3-慢查询日志","children":[]}]},{"level":2,"title":"八、本章总结","slug":"八、本章总结","link":"#八、本章总结","children":[{"level":3,"title":"优化清单","slug":"优化清单","link":"#优化清单","children":[]}]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/mysql/第03章-高级篇/09-SQL性能优化.md"}');export{v as comp,b as data};
