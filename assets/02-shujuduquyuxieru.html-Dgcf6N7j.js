import{_ as e,c as t,d as l,e as s,f as a,b as c,w as i,r as o,o as u}from"./app-DnBTedau.js";const r={};function d(k,n){const p=o("RouteLink");return u(),t("div",null,[n[3]||(n[3]=l(`<h1 id="数据读取与写入" tabindex="-1"><a class="header-anchor" href="#数据读取与写入"><span>数据读取与写入</span></a></h1><blockquote><p>掌握Pandas的数据IO操作</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>掌握CSV文件的读写</li><li>学会Excel文件操作</li><li>掌握JSON数据处理</li><li>学会数据库操作</li><li>了解其他格式</li></ul><h2 id="_1-csv文件" tabindex="-1"><a class="header-anchor" href="#_1-csv文件"><span>1. CSV文件</span></a></h2><h3 id="_1-1-读取csv" tabindex="-1"><a class="header-anchor" href="#_1-1-读取csv"><span>1.1 读取CSV</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 基本读取</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定分隔符</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定编码</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定索引列</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定列名</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;col1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 跳过行</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 跳过第1和第3行</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 只读取部分行</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> nrows<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定数据类型</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 处理缺失值</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> na_values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;NA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;null&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 解析日期</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> parse_dates<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;date_column&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-写入csv" tabindex="-1"><a class="header-anchor" href="#_1-2-写入csv"><span>1.2 写入CSV</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 基本写入</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 不写入索引</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定分隔符</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定编码</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 只写入部分列</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;col1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 追加模式</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-excel文件" tabindex="-1"><a class="header-anchor" href="#_2-excel文件"><span>2. Excel文件</span></a></h2><h3 id="_2-1-读取excel" tabindex="-1"><a class="header-anchor" href="#_2-1-读取excel"><span>2.1 读取Excel</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 需要安装：pip install openpyxl</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取Excel</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;data.xlsx&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定工作表</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;data.xlsx&#39;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取多个工作表</span></span>
<span class="line">dfs <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;data.xlsx&#39;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sheet2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取所有工作表</span></span>
<span class="line">dfs <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;data.xlsx&#39;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定行和列</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;data.xlsx&#39;</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token string">&#39;A:C&#39;</span><span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-写入excel" tabindex="-1"><a class="header-anchor" href="#_2-2-写入excel"><span>2.2 写入Excel</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 写入Excel</span></span>
<span class="line">df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&#39;output.xlsx&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入多个工作表</span></span>
<span class="line"><span class="token keyword">with</span> pd<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span><span class="token string">&#39;output.xlsx&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span></span>
<span class="line">    df1<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line">    df2<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Sheet2&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 追加到现有文件</span></span>
<span class="line"><span class="token keyword">with</span> pd<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span><span class="token string">&#39;output.xlsx&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span></span>
<span class="line">    df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;NewSheet&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-json文件" tabindex="-1"><a class="header-anchor" href="#_3-json文件"><span>3. JSON文件</span></a></h2><h3 id="_3-1-读取json" tabindex="-1"><a class="header-anchor" href="#_3-1-读取json"><span>3.1 读取JSON</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 读取JSON文件</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定方向</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> orient<span class="token operator">=</span><span class="token string">&#39;records&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从字符串读取</span></span>
<span class="line">json_str <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;: &quot;Alice&quot;, &quot;age&quot;: 25}&#39;</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span>json_str<span class="token punctuation">,</span> typ<span class="token operator">=</span><span class="token string">&#39;series&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取嵌套JSON</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>json_normalize<span class="token punctuation">(</span>json_data<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-写入json" tabindex="-1"><a class="header-anchor" href="#_3-2-写入json"><span>3.2 写入JSON</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 写入JSON文件</span></span>
<span class="line">df<span class="token punctuation">.</span>to_json<span class="token punctuation">(</span><span class="token string">&#39;output.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定方向</span></span>
<span class="line">df<span class="token punctuation">.</span>to_json<span class="token punctuation">(</span><span class="token string">&#39;output.json&#39;</span><span class="token punctuation">,</span> orient<span class="token operator">=</span><span class="token string">&#39;records&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 格式化输出</span></span>
<span class="line">df<span class="token punctuation">.</span>to_json<span class="token punctuation">(</span><span class="token string">&#39;output.json&#39;</span><span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 转换为JSON字符串</span></span>
<span class="line">json_str <span class="token operator">=</span> df<span class="token punctuation">.</span>to_json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-数据库操作" tabindex="-1"><a class="header-anchor" href="#_4-数据库操作"><span>4. 数据库操作</span></a></h2><h3 id="_4-1-sqlite" tabindex="-1"><a class="header-anchor" href="#_4-1-sqlite"><span>4.1 SQLite</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> sqlite3</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 连接数据库</span></span>
<span class="line">conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">&#39;database.db&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取数据</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM table_name&#39;</span><span class="token punctuation">,</span> conn<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取查询</span></span>
<span class="line">query <span class="token operator">=</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;</span>
<span class="line">SELECT name, age </span>
<span class="line">FROM users </span>
<span class="line">WHERE age &gt; 25</span>
<span class="line">&#39;&#39;&#39;</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span>query<span class="token punctuation">,</span> conn<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入数据库</span></span>
<span class="line">df<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span><span class="token string">&#39;table_name&#39;</span><span class="token punctuation">,</span> conn<span class="token punctuation">,</span> if_exists<span class="token operator">=</span><span class="token string">&#39;replace&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 关闭连接</span></span>
<span class="line">conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-mysql" tabindex="-1"><a class="header-anchor" href="#_4-2-mysql"><span>4.2 MySQL</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 需要安装：pip install pymysql sqlalchemy</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engine</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建引擎</span></span>
<span class="line">engine <span class="token operator">=</span> create_engine<span class="token punctuation">(</span><span class="token string">&#39;mysql+pymysql://user:password@localhost/database&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取数据</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM table_name&#39;</span><span class="token punctuation">,</span> engine<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入数据</span></span>
<span class="line">df<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span><span class="token string">&#39;table_name&#39;</span><span class="token punctuation">,</span> engine<span class="token punctuation">,</span> if_exists<span class="token operator">=</span><span class="token string">&#39;append&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-其他格式" tabindex="-1"><a class="header-anchor" href="#_5-其他格式"><span>5. 其他格式</span></a></h2><h3 id="_5-1-html" tabindex="-1"><a class="header-anchor" href="#_5-1-html"><span>5.1 HTML</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 读取HTML表格</span></span>
<span class="line">dfs <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_html<span class="token punctuation">(</span><span class="token string">&#39;data.html&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从URL读取</span></span>
<span class="line">dfs <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_html<span class="token punctuation">(</span><span class="token string">&#39;https://example.com/table.html&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入HTML</span></span>
<span class="line">df<span class="token punctuation">.</span>to_html<span class="token punctuation">(</span><span class="token string">&#39;output.html&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-parquet" tabindex="-1"><a class="header-anchor" href="#_5-2-parquet"><span>5.2 Parquet</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 需要安装：pip install pyarrow</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取Parquet</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_parquet<span class="token punctuation">(</span><span class="token string">&#39;data.parquet&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入Parquet</span></span>
<span class="line">df<span class="token punctuation">.</span>to_parquet<span class="token punctuation">(</span><span class="token string">&#39;output.parquet&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-hdf5" tabindex="-1"><a class="header-anchor" href="#_5-3-hdf5"><span>5.3 HDF5</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 写入HDF5</span></span>
<span class="line">df<span class="token punctuation">.</span>to_hdf<span class="token punctuation">(</span><span class="token string">&#39;data.h5&#39;</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token string">&#39;df&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取HDF5</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_hdf<span class="token punctuation">(</span><span class="token string">&#39;data.h5&#39;</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token string">&#39;df&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-实战示例" tabindex="-1"><a class="header-anchor" href="#_6-实战示例"><span>6. 实战示例</span></a></h2><h3 id="示例1-批量处理csv文件" tabindex="-1"><a class="header-anchor" href="#示例1-批量处理csv文件"><span>示例1：批量处理CSV文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> glob</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取目录下所有CSV文件</span></span>
<span class="line">files <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">&#39;data/*.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 合并所有文件</span></span>
<span class="line">dfs <span class="token operator">=</span> <span class="token punctuation">[</span>pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token keyword">for</span> f <span class="token keyword">in</span> files<span class="token punctuation">]</span></span>
<span class="line">combined_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span>dfs<span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;合并了 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> 个文件&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;总行数: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>combined_df<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例2-分块读取大文件" tabindex="-1"><a class="header-anchor" href="#示例2-分块读取大文件"><span>示例2：分块读取大文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 分块读取</span></span>
<span class="line">chunk_size <span class="token operator">=</span> <span class="token number">10000</span></span>
<span class="line">chunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> chunk <span class="token keyword">in</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;large_file.csv&#39;</span><span class="token punctuation">,</span> chunksize<span class="token operator">=</span>chunk_size<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 处理每个块</span></span>
<span class="line">    processed <span class="token operator">=</span> chunk<span class="token punctuation">[</span>chunk<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    chunks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>processed<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 合并结果</span></span>
<span class="line">result <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span>chunks<span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例3-数据导出报表" tabindex="-1"><a class="header-anchor" href="#示例3-数据导出报表"><span>示例3：数据导出报表</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 创建数据</span></span>
<span class="line">sales_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;product&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;sales&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;profit&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 导出到Excel（多个工作表）</span></span>
<span class="line"><span class="token keyword">with</span> pd<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span><span class="token string">&#39;sales_report.xlsx&#39;</span><span class="token punctuation">,</span> engine<span class="token operator">=</span><span class="token string">&#39;openpyxl&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 原始数据</span></span>
<span class="line">    sales_data<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Raw Data&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 汇总统计</span></span>
<span class="line">    summary <span class="token operator">=</span> sales_data<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    summary<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Summary&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 透视表</span></span>
<span class="line">    pivot <span class="token operator">=</span> sales_data<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&#39;sales&#39;</span><span class="token punctuation">,</span> aggfunc<span class="token operator">=</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    pivot<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Pivot&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-性能优化" tabindex="-1"><a class="header-anchor" href="#_7-性能优化"><span>7. 性能优化</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 指定数据类型减少内存</span></span>
<span class="line">dtypes <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;int32&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;value&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;float32&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;category&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;category&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>dtypes<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用category类型</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 只读取需要的列</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;col1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用Parquet格式（更快、更小）</span></span>
<span class="line">df<span class="token punctuation">.</span>to_parquet<span class="token punctuation">(</span><span class="token string">&#39;data.parquet&#39;</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">&#39;snappy&#39;</span><span class="token punctuation">)</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_parquet<span class="token punctuation">(</span><span class="token string">&#39;data.parquet&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><ol><li>读取CSV文件并查看前10行</li><li>将DataFrame导出为Excel（不包含索引）</li><li>从SQLite数据库读取数据</li><li>合并多个CSV文件</li></ol><hr>`,43)),s("p",null,[n[1]||(n[1]=s("strong",null,"下一节：",-1)),n[2]||(n[2]=a()),c(p,{to:"/tutorials/python-ai/pandas/03-%E6%95%B0%E6%8D%AE%E9%80%89%E6%8B%A9%E4%B8%8E%E7%B4%A2%E5%BC%95.html"},{default:i(()=>[...n[0]||(n[0]=[a("数据选择与索引",-1)])]),_:1})])])}const m=e(r,[["render",d]]),b=JSON.parse('{"path":"/tutorials/python-ai/pandas/02-shujuduquyuxieru.html","title":"数据读取与写入","lang":"zh-CN","frontmatter":{"title":"数据读取与写入"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. CSV文件","slug":"_1-csv文件","link":"#_1-csv文件","children":[{"level":3,"title":"1.1 读取CSV","slug":"_1-1-读取csv","link":"#_1-1-读取csv","children":[]},{"level":3,"title":"1.2 写入CSV","slug":"_1-2-写入csv","link":"#_1-2-写入csv","children":[]}]},{"level":2,"title":"2. Excel文件","slug":"_2-excel文件","link":"#_2-excel文件","children":[{"level":3,"title":"2.1 读取Excel","slug":"_2-1-读取excel","link":"#_2-1-读取excel","children":[]},{"level":3,"title":"2.2 写入Excel","slug":"_2-2-写入excel","link":"#_2-2-写入excel","children":[]}]},{"level":2,"title":"3. JSON文件","slug":"_3-json文件","link":"#_3-json文件","children":[{"level":3,"title":"3.1 读取JSON","slug":"_3-1-读取json","link":"#_3-1-读取json","children":[]},{"level":3,"title":"3.2 写入JSON","slug":"_3-2-写入json","link":"#_3-2-写入json","children":[]}]},{"level":2,"title":"4. 数据库操作","slug":"_4-数据库操作","link":"#_4-数据库操作","children":[{"level":3,"title":"4.1 SQLite","slug":"_4-1-sqlite","link":"#_4-1-sqlite","children":[]},{"level":3,"title":"4.2 MySQL","slug":"_4-2-mysql","link":"#_4-2-mysql","children":[]}]},{"level":2,"title":"5. 其他格式","slug":"_5-其他格式","link":"#_5-其他格式","children":[{"level":3,"title":"5.1 HTML","slug":"_5-1-html","link":"#_5-1-html","children":[]},{"level":3,"title":"5.2 Parquet","slug":"_5-2-parquet","link":"#_5-2-parquet","children":[]},{"level":3,"title":"5.3 HDF5","slug":"_5-3-hdf5","link":"#_5-3-hdf5","children":[]}]},{"level":2,"title":"6. 实战示例","slug":"_6-实战示例","link":"#_6-实战示例","children":[{"level":3,"title":"示例1：批量处理CSV文件","slug":"示例1-批量处理csv文件","link":"#示例1-批量处理csv文件","children":[]},{"level":3,"title":"示例2：分块读取大文件","slug":"示例2-分块读取大文件","link":"#示例2-分块读取大文件","children":[]},{"level":3,"title":"示例3：数据导出报表","slug":"示例3-数据导出报表","link":"#示例3-数据导出报表","children":[]}]},{"level":2,"title":"7. 性能优化","slug":"_7-性能优化","link":"#_7-性能优化","children":[]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/pandas/02-数据读取与写入.md"}');export{m as comp,b as data};
