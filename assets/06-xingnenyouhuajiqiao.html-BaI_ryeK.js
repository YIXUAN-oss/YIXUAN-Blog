import{_ as i,c,d as o,e as s,f as a,b as e,w as u,r as p,o as r}from"./app-QnWV-YHu.js";const d={},k={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/performance-optimization-overview-0000001581809185-V3",target:"_blank",rel:"noopener noreferrer"};function v(m,n){const t=p("ExternalLinkIcon"),l=p("RouteLink");return r(),c("div",null,[n[4]||(n[4]=o(`<h1 id="性能优化技巧" tabindex="-1"><a class="header-anchor" href="#性能优化技巧"><span>性能优化技巧</span></a></h1><blockquote><p>编写高性能的 ArkTS 代码</p></blockquote><h2 id="⚡-代码优化" tabindex="-1"><a class="header-anchor" href="#⚡-代码优化"><span>⚡ 代码优化</span></a></h2><h3 id="_1-使用-const-let" tabindex="-1"><a class="header-anchor" href="#_1-使用-const-let"><span>1. 使用 const/let</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 推荐</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">MAX_SIZE</span> <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line"><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 避免</span></span>
<span class="line"><span class="token keyword">var</span> size <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-避免不必要的计算" tabindex="-1"><a class="header-anchor" href="#_2-避免不必要的计算"><span>2. 避免不必要的计算</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ❌ 每次都计算</span></span>
<span class="line"><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">总价: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+</span> item<span class="token punctuation">.</span>price<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ 使用计算属性</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> items<span class="token operator">:</span> Item<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">get</span> <span class="token function">totalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+</span> item<span class="token punctuation">.</span>price<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">总价: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>totalPrice<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-对象解构" tabindex="-1"><a class="header-anchor" href="#_3-对象解构"><span>3. 对象解构</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 高效</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> email <span class="token punctuation">}</span> <span class="token operator">=</span> user</span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 低效</span></span>
<span class="line"><span class="token keyword">const</span> name <span class="token operator">=</span> user<span class="token punctuation">.</span>name</span>
<span class="line"><span class="token keyword">const</span> age <span class="token operator">=</span> user<span class="token punctuation">.</span>age</span>
<span class="line"><span class="token keyword">const</span> email <span class="token operator">=</span> user<span class="token punctuation">.</span>email</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💾-内存管理" tabindex="-1"><a class="header-anchor" href="#💾-内存管理"><span>💾 内存管理</span></a></h2><h3 id="_1-及时清理资源" tabindex="-1"><a class="header-anchor" href="#_1-及时清理资源"><span>1. 及时清理资源</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct MyComponent <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> timer<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;tick&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">aboutToDisappear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ✅ 清理定时器</span></span>
<span class="line">    <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-避免内存泄漏" tabindex="-1"><a class="header-anchor" href="#_2-避免内存泄漏"><span>2. 避免内存泄漏</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ❌ 可能导致内存泄漏</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> listeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">on</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ 提供移除方法</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> listeners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">on</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚀-编译优化" tabindex="-1"><a class="header-anchor" href="#🚀-编译优化"><span>🚀 编译优化</span></a></h2><h3 id="_1-tree-shaking" tabindex="-1"><a class="header-anchor" href="#_1-tree-shaking"><span>1. Tree Shaking</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 只导入需要的</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> formatDate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 导入全部</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> utils <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-懒加载" tabindex="-1"><a class="header-anchor" href="#_2-懒加载"><span>2. 懒加载</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 动态导入</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">loadFeature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>needFeature<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./feature&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    module<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-性能监控" tabindex="-1"><a class="header-anchor" href="#📊-性能监控"><span>📊 性能监控</span></a></h2><h3 id="使用-hitracemeter" tabindex="-1"><a class="header-anchor" href="#使用-hitracemeter"><span>使用 hiTraceMeter</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> hiTraceMeter <span class="token keyword">from</span> <span class="token string">&#39;@ohos.hiTraceMeter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">expensiveOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  hiTraceMeter<span class="token punctuation">.</span><span class="token function">startTrace</span><span class="token punctuation">(</span><span class="token string">&#39;ExpensiveOp&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 耗时操作</span></span>
<span class="line">  </span>
<span class="line">  hiTraceMeter<span class="token punctuation">.</span><span class="token function">finishTrace</span><span class="token punctuation">(</span><span class="token string">&#39;ExpensiveOp&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><ol><li>✅ 使用 const/let 替代 var</li><li>✅ 及时清理定时器和监听器</li><li>✅ 避免在循环中创建对象</li><li>✅ 使用懒加载优化首屏</li><li>✅ 合理使用缓存</li></ol><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,25)),s("ul",null,[s("li",null,[s("a",k,[n[0]||(n[0]=a("性能优化指南",-1)),e(t)])])]),n[5]||(n[5]=s("hr",null,null,-1)),s("p",null,[n[2]||(n[2]=s("strong",null,"第2章完成！",-1)),n[3]||(n[3]=a(" 继续学习 → ",-1)),e(l,{to:"/tutorials/harmonyos-dev/03-arkui-next/"},{default:u(()=>[...n[1]||(n[1]=[a("第3章：ArkUI NEXT 框架",-1)])]),_:1})])])}const h=i(d,[["render",v]]),g=JSON.parse('{"path":"/tutorials/harmonyos-dev/02-arkts-advanced/06-xingnenyouhuajiqiao.html","title":"性能优化技巧","lang":"zh-CN","frontmatter":{"title":"性能优化技巧","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"⚡ 代码优化","slug":"⚡-代码优化","link":"#⚡-代码优化","children":[{"level":3,"title":"1. 使用 const/let","slug":"_1-使用-const-let","link":"#_1-使用-const-let","children":[]},{"level":3,"title":"2. 避免不必要的计算","slug":"_2-避免不必要的计算","link":"#_2-避免不必要的计算","children":[]},{"level":3,"title":"3. 对象解构","slug":"_3-对象解构","link":"#_3-对象解构","children":[]}]},{"level":2,"title":"💾 内存管理","slug":"💾-内存管理","link":"#💾-内存管理","children":[{"level":3,"title":"1. 及时清理资源","slug":"_1-及时清理资源","link":"#_1-及时清理资源","children":[]},{"level":3,"title":"2. 避免内存泄漏","slug":"_2-避免内存泄漏","link":"#_2-避免内存泄漏","children":[]}]},{"level":2,"title":"🚀 编译优化","slug":"🚀-编译优化","link":"#🚀-编译优化","children":[{"level":3,"title":"1. Tree Shaking","slug":"_1-tree-shaking","link":"#_1-tree-shaking","children":[]},{"level":3,"title":"2. 懒加载","slug":"_2-懒加载","link":"#_2-懒加载","children":[]}]},{"level":2,"title":"📊 性能监控","slug":"📊-性能监控","link":"#📊-性能监控","children":[{"level":3,"title":"使用 hiTraceMeter","slug":"使用-hitracemeter","link":"#使用-hitracemeter","children":[]}]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/02-arkts-advanced/06-性能优化技巧.md"}');export{h as comp,g as data};
