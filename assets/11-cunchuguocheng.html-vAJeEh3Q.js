import{_ as p,c as l,d as t,e as a,f as n,b as i,w as c,r as o,o as d}from"./app-sriCtWWE.js";const r={};function k(u,s){const e=o("RouteLink");return d(),l("div",null,[s[3]||(s[3]=t(`<h1 id="存储过程与函数" tabindex="-1"><a class="header-anchor" href="#存储过程与函数"><span>存储过程与函数</span></a></h1><blockquote><p>存储过程是预编译的SQL语句集合，提高性能和代码复用性。本章学习存储过程的创建和使用。</p></blockquote><h2 id="📋-本章目录" tabindex="-1"><a class="header-anchor" href="#📋-本章目录"><span>📋 本章目录</span></a></h2><ul><li><a href="#%E4%B8%80%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E6%A6%82%E8%BF%B0">一、存储过程概述</a></li><li><a href="#%E4%BA%8C%E5%8F%98%E9%87%8F">二、变量</a></li><li><a href="#%E4%B8%89%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6">三、流程控制</a></li><li><a href="#%E5%9B%9B%E6%B8%B8%E6%A0%87%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86">四、游标和异常处理</a></li><li><a href="#%E4%BA%94%E5%AD%98%E5%82%A8%E5%87%BD%E6%95%B0">五、存储函数</a></li></ul><hr><h2 id="一、存储过程概述" tabindex="-1"><a class="header-anchor" href="#一、存储过程概述"><span>一、存储过程概述</span></a></h2><h3 id="_1-1-什么是存储过程" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是存储过程"><span>1.1 什么是存储过程？</span></a></h3><p><strong>存储过程（Stored Procedure）</strong> 是一组预编译的SQL语句集合，类似于编程语言中的函数。</p><p><strong>特点：</strong></p><ul><li>📦 <strong>封装复用</strong>：封装复杂逻辑，可重复调用</li><li>📈 <strong>提高性能</strong>：预编译，减少网络传输</li><li>🔒 <strong>安全性高</strong>：隐藏SQL细节，控制权限</li><li>🔄 <strong>事务支持</strong>：可包含完整的事务逻辑</li></ul><h3 id="_1-2-存储过程-vs-普通sql" tabindex="-1"><a class="header-anchor" href="#_1-2-存储过程-vs-普通sql"><span>1.2 存储过程 vs 普通SQL</span></a></h3><table><thead><tr><th>特性</th><th>存储过程</th><th>普通SQL</th></tr></thead><tbody><tr><td>编译</td><td>预编译，只编译一次</td><td>每次执行都编译</td></tr><tr><td>网络传输</td><td>只传输调用命令</td><td>传输完整SQL</td></tr><tr><td>复用性</td><td>高，可重复调用</td><td>需要重复编写</td></tr><tr><td>逻辑复杂度</td><td>支持复杂逻辑</td><td>有限</td></tr><tr><td>性能</td><td>较好</td><td>一般</td></tr></tbody></table><h3 id="_1-3-💼-实际工作中什么时候用存储过程" tabindex="-1"><a class="header-anchor" href="#_1-3-💼-实际工作中什么时候用存储过程"><span>1.3 💼 实际工作中什么时候用存储过程？</span></a></h3><p><strong>适合使用存储过程的场景：</strong></p><p><strong>场景1：复杂的业务逻辑（推荐）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 例如：订单结算流程</span></span>
<span class="line"><span class="token comment">-- 涉及：检查库存、创建订单、扣减库存、计算优惠、扣减余额、增加积分等</span></span>
<span class="line"><span class="token keyword">CALL</span> p_create_order<span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> product_id<span class="token punctuation">,</span> quantity<span class="token punctuation">,</span> <span class="token variable">@order_id</span><span class="token punctuation">,</span> <span class="token variable">@result</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用</strong>：封装复杂逻辑，减少应用层代码，减少网络往返次数。</p><p><strong>场景2：批量数据处理</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 例如：每日账单结算</span></span>
<span class="line"><span class="token keyword">CALL</span> p_daily_settlement<span class="token punctuation">(</span><span class="token string">&#39;2024-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 内部处理：统计当日订单、计算佣金、生成报表、发送通知</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用</strong>：一次性处理大量数据，减少网络传输，提高效率。</p><p><strong>场景3：定时任务（配合Event）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 例如：自动关闭超时未支付订单</span></span>
<span class="line"><span class="token keyword">CALL</span> p_close_timeout_orders<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 每隔5分钟执行一次</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用</strong>：适合放在数据库层定期执行，无需额外的调度服务。</p><p><strong>场景4：数据迁移和清洗</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 例如：历史数据归档</span></span>
<span class="line"><span class="token keyword">CALL</span> p_archive_old_orders<span class="token punctuation">(</span><span class="token string">&#39;2023-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 将旧订单迁移到历史表</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>不适合使用存储过程的场景：</strong></p><ul><li>❌ 简单的CRUD操作（增删改查）</li><li>❌ 需要频繁修改的业务逻辑（维护成本高）</li><li>❌ 跨数据库平台的应用（移植性差）</li><li>❌ 复杂的业务逻辑（应该放在应用层）</li></ul><p><strong>现代开发趋势：</strong></p><ul><li>⚠️ 微服务架构下，更推荐将逻辑放在应用层</li><li>✅ 但对于数据密集型操作，存储过程仍有优势</li><li>✅ 金融、电商等对性能要求高的场景，存储过程很常用</li></ul><h3 id="_1-4-基本语法" tabindex="-1"><a class="header-anchor" href="#_1-4-基本语法"><span>1.4 基本语法</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> 存储过程名称<span class="token punctuation">(</span><span class="token punctuation">[</span>参数列表<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token comment">-- SQL语句</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例1：简单存储过程</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建：统计学生总数</span></span>
<span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_count_students<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total <span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_count_students<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>DELIMITER说明：</strong></p><ul><li>MySQL默认使用<code>;</code>作为语句结束符</li><li>存储过程内部也需要<code>;</code>，会产生冲突</li><li>使用<code>DELIMITER</code>临时改变结束符为<code>$$</code></li><li>创建完成后再改回<code>;</code></li></ul><h3 id="_1-4-查看和删除" tabindex="-1"><a class="header-anchor" href="#_1-4-查看和删除"><span>1.4 查看和删除</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看所有存储过程</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>ROUTINES </span>
<span class="line"><span class="token keyword">WHERE</span> ROUTINE_SCHEMA <span class="token operator">=</span> <span class="token string">&#39;database_name&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看存储过程定义</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_count_students<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 删除存储过程</span></span>
<span class="line"><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> p_count_students<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、变量" tabindex="-1"><a class="header-anchor" href="#二、变量"><span>二、变量</span></a></h2><h3 id="_2-1-系统变量" tabindex="-1"><a class="header-anchor" href="#_2-1-系统变量"><span>2.1 系统变量</span></a></h3><p>系统变量是MySQL服务器提供的变量，分为全局变量（GLOBAL）和会话变量（SESSION）。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看系统变量</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">SESSION</span> VARIABLES<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">GLOBAL</span> VARIABLES<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 模糊查询</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">SESSION</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;auto%&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看指定变量</span></span>
<span class="line"><span class="token keyword">SELECT</span> @<span class="token variable">@session.autocommit</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> @<span class="token variable">@global.autocommit</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 设置系统变量</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> autocommit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> @<span class="token variable">@session.autocommit</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> max_connections <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> @<span class="token variable">@global.max_connections</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意事项：</strong></p><ul><li>不指定SESSION/GLOBAL时，默认为SESSION</li><li>全局变量在MySQL重启后会失效</li><li>永久生效需要修改配置文件 <code>/etc/my.cnf</code></li></ul><h3 id="_2-2-用户自定义变量" tabindex="-1"><a class="header-anchor" href="#_2-2-用户自定义变量"><span>2.2 用户自定义变量</span></a></h3><p>用户变量不需要提前声明，使用 <code>@变量名</code> 即可，作用域为当前连接。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 赋值方式1：SET</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token variable">@name</span> <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token variable">@age</span> :<span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token variable">@gender</span> :<span class="token operator">=</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token variable">@hobby</span> :<span class="token operator">=</span> <span class="token string">&#39;编程&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 赋值方式2：SELECT</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@color</span> :<span class="token operator">=</span> <span class="token string">&#39;蓝色&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token variable">@total</span> <span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 使用变量</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@name</span><span class="token punctuation">,</span> <span class="token variable">@age</span><span class="token punctuation">,</span> <span class="token variable">@gender</span><span class="token punctuation">,</span> <span class="token variable">@hobby</span><span class="token punctuation">,</span> <span class="token variable">@color</span><span class="token punctuation">,</span> <span class="token variable">@total</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong></p><ul><li>未初始化的变量值为 NULL</li><li><code>=</code> 和 <code>:=</code> 都可以用于赋值，但 <code>SELECT</code> 语句中建议用 <code>:=</code></li></ul><h3 id="_2-3-局部变量" tabindex="-1"><a class="header-anchor" href="#_2-3-局部变量"><span>2.3 局部变量</span></a></h3><p>局部变量在存储过程内部使用，需要用 <code>DECLARE</code> 声明，作用域为 BEGIN...END 块。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_local_var<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token comment">-- 声明局部变量</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> stu_count <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> avg_age <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 赋值方式1：SET</span></span>
<span class="line">    <span class="token keyword">SET</span> stu_count <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 赋值方式2：SELECT INTO</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> stu_count <span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">INTO</span> avg_age <span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 使用变量</span></span>
<span class="line">    <span class="token keyword">SELECT</span> stu_count<span class="token punctuation">,</span> avg_age<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CALL</span> p_local_var<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>三种变量对比：</strong></p><table><thead><tr><th>类型</th><th>作用域</th><th>声明方式</th><th>前缀</th></tr></thead><tbody><tr><td>系统变量</td><td>全局/会话</td><td>系统定义</td><td>@@</td></tr><tr><td>用户变量</td><td>当前连接</td><td>无需声明</td><td>@</td></tr><tr><td>局部变量</td><td>BEGIN...END</td><td>DECLARE</td><td>无</td></tr></tbody></table><hr><h2 id="三、流程控制" tabindex="-1"><a class="header-anchor" href="#三、流程控制"><span>三、流程控制</span></a></h2><h3 id="_3-1-if-条件判断" tabindex="-1"><a class="header-anchor" href="#_3-1-if-条件判断"><span>3.1 IF 条件判断</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_grade<span class="token punctuation">(</span><span class="token operator">IN</span> score <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token keyword">OUT</span> result <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">IF</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span> <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;优秀&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">ELSEIF</span> score <span class="token operator">&gt;=</span> <span class="token number">80</span> <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;良好&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">ELSEIF</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span> <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;及格&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">ELSE</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;不及格&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_grade<span class="token punctuation">(</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token variable">@result</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@result</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-参数类型" tabindex="-1"><a class="header-anchor" href="#_3-2-参数类型"><span>3.2 参数类型</span></a></h3><p>存储过程支持三种参数类型：</p><table><thead><tr><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><strong>IN</strong></td><td>输入参数（默认）</td><td>传入数据</td></tr><tr><td><strong>OUT</strong></td><td>输出参数</td><td>返回结果</td></tr><tr><td><strong>INOUT</strong></td><td>输入输出参数</td><td>既传入又返回</td></tr></tbody></table><p><strong>示例：IN 和 OUT</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_calc<span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">IN</span> num1 <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">IN</span> num2 <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">OUT</span> sum_result <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">OUT</span> mul_result <span class="token keyword">INT</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SET</span> sum_result <span class="token operator">=</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SET</span> mul_result <span class="token operator">=</span> num1 <span class="token operator">*</span> num2<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_calc<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token variable">@sum</span><span class="token punctuation">,</span> <span class="token variable">@mul</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@sum</span><span class="token punctuation">,</span> <span class="token variable">@mul</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：30, 200</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例：INOUT</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 将200分制转换为百分制</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_convert_score<span class="token punctuation">(</span><span class="token keyword">INOUT</span> score <span class="token keyword">DOUBLE</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SET</span> score <span class="token operator">=</span> score <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token variable">@score</span> <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CALL</span> p_convert_score<span class="token punctuation">(</span><span class="token variable">@score</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@score</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：90</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-case-语句" tabindex="-1"><a class="header-anchor" href="#_3-3-case-语句"><span>3.3 CASE 语句</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_quarter<span class="token punctuation">(</span><span class="token operator">IN</span> <span class="token keyword">month</span> <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token keyword">OUT</span> result <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">CASE</span></span>
<span class="line">        <span class="token keyword">WHEN</span> <span class="token keyword">month</span> <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token keyword">month</span> <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;第一季度&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">WHEN</span> <span class="token keyword">month</span> <span class="token operator">&gt;=</span> <span class="token number">4</span> <span class="token operator">AND</span> <span class="token keyword">month</span> <span class="token operator">&lt;=</span> <span class="token number">6</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;第二季度&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">WHEN</span> <span class="token keyword">month</span> <span class="token operator">&gt;=</span> <span class="token number">7</span> <span class="token operator">AND</span> <span class="token keyword">month</span> <span class="token operator">&lt;=</span> <span class="token number">9</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;第三季度&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">WHEN</span> <span class="token keyword">month</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">AND</span> <span class="token keyword">month</span> <span class="token operator">&lt;=</span> <span class="token number">12</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;第四季度&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">ELSE</span></span>
<span class="line">            <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;非法月份&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_quarter<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token variable">@quarter</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@quarter</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：第二季度</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-while-循环" tabindex="-1"><a class="header-anchor" href="#_3-4-while-循环"><span>3.4 WHILE 循环</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 计算1到n的累加和</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_sum_while<span class="token punctuation">(</span><span class="token operator">IN</span> n <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token keyword">OUT</span> total <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SET</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">WHILE</span> i <span class="token operator">&lt;=</span> n <span class="token keyword">DO</span></span>
<span class="line">        <span class="token keyword">SET</span> total <span class="token operator">=</span> total <span class="token operator">+</span> i<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_sum_while<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token variable">@total</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@total</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-repeat-循环" tabindex="-1"><a class="header-anchor" href="#_3-5-repeat-循环"><span>3.5 REPEAT 循环</span></a></h3><p>REPEAT 循环类似于 do...while，至少执行一次。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_sum_repeat<span class="token punctuation">(</span><span class="token operator">IN</span> n <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token keyword">OUT</span> total <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SET</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">REPEAT</span></span>
<span class="line">        <span class="token keyword">SET</span> total <span class="token operator">=</span> total <span class="token operator">+</span> i<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    UNTIL i <span class="token operator">&gt;</span> n  <span class="token comment">-- 注意：这里不需要分号</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">REPEAT</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_sum_repeat<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token variable">@total</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@total</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-loop-循环" tabindex="-1"><a class="header-anchor" href="#_3-6-loop-循环"><span>3.6 LOOP 循环</span></a></h3><p>LOOP 循环需要手动控制退出，配合 LEAVE 和 ITERATE 使用。</p><p><strong>LEAVE</strong>：退出循环（类似 break） <strong>ITERATE</strong>：跳过当前循环（类似 continue）</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 累加和（使用LEAVE退出）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_sum_loop<span class="token punctuation">(</span><span class="token operator">IN</span> n <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token keyword">OUT</span> total <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SET</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    sum_loop: <span class="token keyword">LOOP</span></span>
<span class="line">        <span class="token keyword">IF</span> i <span class="token operator">&gt;</span> n <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">LEAVE</span> sum_loop<span class="token punctuation">;</span>  <span class="token comment">-- 退出循环</span></span>
<span class="line">        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">SET</span> total <span class="token operator">=</span> total <span class="token operator">+</span> i<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span> sum_loop<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 累加偶数（使用ITERATE跳过奇数）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_sum_even<span class="token punctuation">(</span><span class="token operator">IN</span> n <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token keyword">OUT</span> total <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SET</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    sum_loop: <span class="token keyword">LOOP</span></span>
<span class="line">        <span class="token keyword">IF</span> i <span class="token operator">&gt;</span> n <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">LEAVE</span> sum_loop<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">-- 跳过奇数</span></span>
<span class="line">        <span class="token keyword">IF</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">ITERATE</span> sum_loop<span class="token punctuation">;</span>  <span class="token comment">-- 跳过本次循环</span></span>
<span class="line">        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">SET</span> total <span class="token operator">=</span> total <span class="token operator">+</span> i<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span> sum_loop<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_sum_even<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token variable">@total</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@total</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：2550（2+4+6+...+100）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、游标和异常处理" tabindex="-1"><a class="header-anchor" href="#四、游标和异常处理"><span>四、游标和异常处理</span></a></h2><h3 id="_4-1-游标-cursor" tabindex="-1"><a class="header-anchor" href="#_4-1-游标-cursor"><span>4.1 游标（Cursor）</span></a></h3><p><strong>游标</strong> 用于存储查询结果集，可以逐行处理数据。</p><p><strong>使用步骤：</strong></p><ol><li>声明游标：<code>DECLARE cursor_name CURSOR FOR select_statement</code></li><li>打开游标：<code>OPEN cursor_name</code></li><li>获取数据：<code>FETCH cursor_name INTO variables</code></li><li>关闭游标：<code>CLOSE cursor_name</code></li></ol><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_cursor_demo<span class="token punctuation">(</span><span class="token operator">IN</span> max_age <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token comment">-- 声明变量</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> u_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> u_age <span class="token keyword">INT</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> done <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 声明游标</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> user_cursor <span class="token keyword">CURSOR</span> <span class="token keyword">FOR</span> </span>
<span class="line">        <span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> age <span class="token keyword">FROM</span> students <span class="token keyword">WHERE</span> age <span class="token operator">&lt;=</span> max_age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 声明异常处理（后面会讲）</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> <span class="token keyword">CONTINUE</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> <span class="token operator">NOT</span> FOUND <span class="token keyword">SET</span> done <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 创建结果表</span></span>
<span class="line">    <span class="token keyword">CREATE</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> temp_result<span class="token punctuation">(</span></span>
<span class="line">        name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        age <span class="token keyword">INT</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 打开游标</span></span>
<span class="line">    <span class="token keyword">OPEN</span> user_cursor<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 循环读取</span></span>
<span class="line">    read_loop: <span class="token keyword">LOOP</span></span>
<span class="line">        <span class="token keyword">FETCH</span> user_cursor <span class="token keyword">INTO</span> u_name<span class="token punctuation">,</span> u_age<span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">IF</span> done <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">LEAVE</span> read_loop<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> temp_result <span class="token keyword">VALUES</span><span class="token punctuation">(</span>u_name<span class="token punctuation">,</span> u_age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span> read_loop<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 关闭游标</span></span>
<span class="line">    <span class="token keyword">CLOSE</span> user_cursor<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 显示结果</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> temp_result<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DROP</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLE</span> temp_result<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_cursor_demo<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-条件处理程序-handler" tabindex="-1"><a class="header-anchor" href="#_4-2-条件处理程序-handler"><span>4.2 条件处理程序（Handler）</span></a></h3><p>条件处理程序用于处理异常情况，类似于try-catch。</p><p><strong>语法：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span> handler_action <span class="token keyword">HANDLER</span> </span>
<span class="line"><span class="token keyword">FOR</span> condition_value <span class="token punctuation">[</span><span class="token punctuation">,</span> condition_value<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">statement<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>handler_action：</strong></p><ul><li><code>CONTINUE</code>：继续执行</li><li><code>EXIT</code>：退出当前BEGIN...END块</li></ul><p><strong>condition_value：</strong></p><ul><li><code>SQLSTATE sqlstate_value</code>：状态码，如 &#39;02000&#39;</li><li><code>SQLWARNING</code>：所有01开头的状态码</li><li><code>NOT FOUND</code>：所有02开头的状态码</li><li><code>SQLEXCEPTION</code>：其他未捕获的异常</li></ul><p><strong>示例：处理游标结束</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_handler_demo<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> u_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> done <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">DECLARE</span> user_cursor <span class="token keyword">CURSOR</span> <span class="token keyword">FOR</span> <span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 方式1：使用状态码</span></span>
<span class="line">    <span class="token comment">-- DECLARE CONTINUE HANDLER FOR SQLSTATE &#39;02000&#39; SET done = 1;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 方式2：使用NOT FOUND（推荐）</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> <span class="token keyword">CONTINUE</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> <span class="token operator">NOT</span> FOUND <span class="token keyword">SET</span> done <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">OPEN</span> user_cursor<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    read_loop: <span class="token keyword">LOOP</span></span>
<span class="line">        <span class="token keyword">FETCH</span> user_cursor <span class="token keyword">INTO</span> u_name<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">IF</span> done <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">LEAVE</span> read_loop<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SELECT</span> u_name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">CLOSE</span> user_cursor<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例：异常处理</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_exception_demo<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> <span class="token keyword">EXIT</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> SQLEXCEPTION</span>
<span class="line">    <span class="token keyword">BEGIN</span></span>
<span class="line">        <span class="token comment">-- 发生异常时回滚</span></span>
<span class="line">        <span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SELECT</span> <span class="token string">&#39;操作失败，已回滚&#39;</span> <span class="token keyword">AS</span> message<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 可能出错的操作</span></span>
<span class="line">    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 主键冲突</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token string">&#39;操作成功&#39;</span> <span class="token keyword">AS</span> message<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、存储函数" tabindex="-1"><a class="header-anchor" href="#五、存储函数"><span>五、存储函数</span></a></h2><h3 id="_5-1-存储函数-vs-存储过程" tabindex="-1"><a class="header-anchor" href="#_5-1-存储函数-vs-存储过程"><span>5.1 存储函数 vs 存储过程</span></a></h3><table><thead><tr><th>特性</th><th>存储函数</th><th>存储过程</th></tr></thead><tbody><tr><td>返回值</td><td>必须有返回值</td><td>可以无返回值</td></tr><tr><td>参数</td><td>只能是IN类型</td><td>IN/OUT/INOUT</td></tr><tr><td>调用方式</td><td>SELECT function()</td><td>CALL procedure()</td></tr><tr><td>使用场景</td><td>计算并返回单个值</td><td>复杂业务逻辑</td></tr></tbody></table><h3 id="_5-2-创建存储函数" tabindex="-1"><a class="header-anchor" href="#_5-2-创建存储函数"><span>5.2 创建存储函数</span></a></h3><p><strong>语法：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> 函数名<span class="token punctuation">(</span>参数列表<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">RETURNS</span> 返回类型 <span class="token punctuation">[</span>characteristic <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token comment">-- 函数体</span></span>
<span class="line">    <span class="token keyword">RETURN</span> 值<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>characteristic 说明：</strong></p><ul><li><code>DETERMINISTIC</code>：相同输入产生相同输出</li><li><code>NO SQL</code>：不包含SQL语句</li><li><code>READS SQL DATA</code>：包含读取数据的语句</li></ul><p><strong>示例1：简单函数</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> fn_sum<span class="token punctuation">(</span>n <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">RETURNS</span> <span class="token keyword">INT</span> <span class="token keyword">DETERMINISTIC</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> total <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">WHILE</span> i <span class="token operator">&lt;=</span> n <span class="token keyword">DO</span></span>
<span class="line">        <span class="token keyword">SET</span> total <span class="token operator">=</span> total <span class="token operator">+</span> i<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">RETURN</span> total<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">SELECT</span> fn_sum<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 输出：5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例2：复杂函数</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 计算学生平均分</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> fn_avg_score<span class="token punctuation">(</span>stu_id <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">RETURNS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">READS</span> <span class="token keyword">SQL</span> <span class="token keyword">DATA</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> avg_score <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">INTO</span> avg_score</span>
<span class="line">    <span class="token keyword">FROM</span> scores</span>
<span class="line">    <span class="token keyword">WHERE</span> student_id <span class="token operator">=</span> stu_id<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">RETURN</span> IFNULL<span class="token punctuation">(</span>avg_score<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">SELECT</span> fn_avg_score<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> fn_avg_score<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">AS</span> avg_score <span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-删除存储函数" tabindex="-1"><a class="header-anchor" href="#_5-3-删除存储函数"><span>5.3 删除存储函数</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DROP</span> <span class="token keyword">FUNCTION</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> fn_sum<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="六、综合案例" tabindex="-1"><a class="header-anchor" href="#六、综合案例"><span>六、综合案例</span></a></h2><h3 id="案例-银行转账存储过程" tabindex="-1"><a class="header-anchor" href="#案例-银行转账存储过程"><span>案例：银行转账存储过程</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_transfer<span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">IN</span> from_account <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">IN</span> to_account <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">IN</span> amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">OUT</span> result <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> from_balance <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> <span class="token keyword">EXIT</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> SQLEXCEPTION</span>
<span class="line">    <span class="token keyword">BEGIN</span></span>
<span class="line">        <span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;转账失败：发生异常&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 开启事务</span></span>
<span class="line">    <span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 检查余额</span></span>
<span class="line">    <span class="token keyword">SELECT</span> balance <span class="token keyword">INTO</span> from_balance </span>
<span class="line">    <span class="token keyword">FROM</span> accounts </span>
<span class="line">    <span class="token keyword">WHERE</span> account_id <span class="token operator">=</span> from_account <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">IF</span> from_balance <span class="token operator">&lt;</span> amount <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;转账失败：余额不足&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">ELSE</span></span>
<span class="line">        <span class="token comment">-- 扣款</span></span>
<span class="line">        <span class="token keyword">UPDATE</span> accounts </span>
<span class="line">        <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> amount </span>
<span class="line">        <span class="token keyword">WHERE</span> account_id <span class="token operator">=</span> from_account<span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">-- 入账</span></span>
<span class="line">        <span class="token keyword">UPDATE</span> accounts </span>
<span class="line">        <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> amount </span>
<span class="line">        <span class="token keyword">WHERE</span> account_id <span class="token operator">=</span> to_account<span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">SET</span> result <span class="token operator">=</span> <span class="token string">&#39;转账成功&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"></span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用</span></span>
<span class="line"><span class="token keyword">CALL</span> p_transfer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token variable">@result</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token variable">@result</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、本章总结" tabindex="-1"><a class="header-anchor" href="#七、本章总结"><span>七、本章总结</span></a></h2><h3 id="核心要点" tabindex="-1"><a class="header-anchor" href="#核心要点"><span>核心要点</span></a></h3><ol><li><strong>存储过程</strong>：预编译的SQL集合，提高性能和复用性</li><li><strong>变量类型</strong>：系统变量、用户变量、局部变量</li><li><strong>参数类型</strong>：IN（输入）、OUT（输出）、INOUT（输入输出）</li><li><strong>流程控制</strong>：IF、CASE、WHILE、REPEAT、LOOP</li><li><strong>游标</strong>：处理查询结果集</li><li><strong>异常处理</strong>：HANDLER捕获异常</li><li><strong>存储函数</strong>：有返回值，用于计算</li></ol><h3 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h3><ol><li>✅ 使用有意义的命名：<code>p_</code> 开头表示过程，<code>fn_</code> 表示函数</li><li>✅ 添加注释说明参数和逻辑</li><li>✅ 使用异常处理保证数据一致性</li><li>✅ 复杂逻辑使用事务</li><li>✅ 避免过度使用存储过程（维护成本高）</li></ol><hr><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 1. 创建存储过程：根据部门ID统计员工数和平均工资</span></span>
<span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> p_dept_stats<span class="token punctuation">(</span><span class="token operator">IN</span> dept_id <span class="token keyword">INT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SELECT</span> </span>
<span class="line">        <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> emp_count<span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> avg_salary</span>
<span class="line">    <span class="token keyword">FROM</span> employees</span>
<span class="line">    <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> dept_id<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 创建存储函数：计算员工工龄</span></span>
<span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> fn_work_years<span class="token punctuation">(</span>hire_date <span class="token keyword">DATE</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">RETURNS</span> <span class="token keyword">INT</span> <span class="token keyword">DETERMINISTIC</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">RETURN</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">YEAR</span><span class="token punctuation">,</span> hire_date<span class="token punctuation">,</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> fn_work_years<span class="token punctuation">(</span>hire_date<span class="token punctuation">)</span> <span class="token keyword">AS</span> work_years <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,125)),a("p",null,[a("strong",null,[s[1]||(s[1]=n("下一章：",-1)),i(e,{to:"/tutorials/database/mysql/%E7%AC%AC03%E7%AB%A0-%E9%AB%98%E7%BA%A7%E7%AF%87/12-%E8%A7%A6%E5%8F%91%E5%99%A8.html"},{default:c(()=>[...s[0]||(s[0]=[n("第12章 - 触发器",-1)])]),_:1})]),s[2]||(s[2]=n(" →",-1))])])}const m=p(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/database/mysql/di03zhang-gaojipian/11-cunchuguocheng.html","title":"存储过程与函数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 本章目录","slug":"📋-本章目录","link":"#📋-本章目录","children":[]},{"level":2,"title":"一、存储过程概述","slug":"一、存储过程概述","link":"#一、存储过程概述","children":[{"level":3,"title":"1.1 什么是存储过程？","slug":"_1-1-什么是存储过程","link":"#_1-1-什么是存储过程","children":[]},{"level":3,"title":"1.2 存储过程 vs 普通SQL","slug":"_1-2-存储过程-vs-普通sql","link":"#_1-2-存储过程-vs-普通sql","children":[]},{"level":3,"title":"1.3 💼 实际工作中什么时候用存储过程？","slug":"_1-3-💼-实际工作中什么时候用存储过程","link":"#_1-3-💼-实际工作中什么时候用存储过程","children":[]},{"level":3,"title":"1.4 基本语法","slug":"_1-4-基本语法","link":"#_1-4-基本语法","children":[]},{"level":3,"title":"1.4 查看和删除","slug":"_1-4-查看和删除","link":"#_1-4-查看和删除","children":[]}]},{"level":2,"title":"二、变量","slug":"二、变量","link":"#二、变量","children":[{"level":3,"title":"2.1 系统变量","slug":"_2-1-系统变量","link":"#_2-1-系统变量","children":[]},{"level":3,"title":"2.2 用户自定义变量","slug":"_2-2-用户自定义变量","link":"#_2-2-用户自定义变量","children":[]},{"level":3,"title":"2.3 局部变量","slug":"_2-3-局部变量","link":"#_2-3-局部变量","children":[]}]},{"level":2,"title":"三、流程控制","slug":"三、流程控制","link":"#三、流程控制","children":[{"level":3,"title":"3.1 IF 条件判断","slug":"_3-1-if-条件判断","link":"#_3-1-if-条件判断","children":[]},{"level":3,"title":"3.2 参数类型","slug":"_3-2-参数类型","link":"#_3-2-参数类型","children":[]},{"level":3,"title":"3.3 CASE 语句","slug":"_3-3-case-语句","link":"#_3-3-case-语句","children":[]},{"level":3,"title":"3.4 WHILE 循环","slug":"_3-4-while-循环","link":"#_3-4-while-循环","children":[]},{"level":3,"title":"3.5 REPEAT 循环","slug":"_3-5-repeat-循环","link":"#_3-5-repeat-循环","children":[]},{"level":3,"title":"3.6 LOOP 循环","slug":"_3-6-loop-循环","link":"#_3-6-loop-循环","children":[]}]},{"level":2,"title":"四、游标和异常处理","slug":"四、游标和异常处理","link":"#四、游标和异常处理","children":[{"level":3,"title":"4.1 游标（Cursor）","slug":"_4-1-游标-cursor","link":"#_4-1-游标-cursor","children":[]},{"level":3,"title":"4.2 条件处理程序（Handler）","slug":"_4-2-条件处理程序-handler","link":"#_4-2-条件处理程序-handler","children":[]}]},{"level":2,"title":"五、存储函数","slug":"五、存储函数","link":"#五、存储函数","children":[{"level":3,"title":"5.1 存储函数 vs 存储过程","slug":"_5-1-存储函数-vs-存储过程","link":"#_5-1-存储函数-vs-存储过程","children":[]},{"level":3,"title":"5.2 创建存储函数","slug":"_5-2-创建存储函数","link":"#_5-2-创建存储函数","children":[]},{"level":3,"title":"5.3 删除存储函数","slug":"_5-3-删除存储函数","link":"#_5-3-删除存储函数","children":[]}]},{"level":2,"title":"六、综合案例","slug":"六、综合案例","link":"#六、综合案例","children":[{"level":3,"title":"案例：银行转账存储过程","slug":"案例-银行转账存储过程","link":"#案例-银行转账存储过程","children":[]}]},{"level":2,"title":"七、本章总结","slug":"七、本章总结","link":"#七、本章总结","children":[{"level":3,"title":"核心要点","slug":"核心要点","link":"#核心要点","children":[]},{"level":3,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/database/mysql/第03章-高级篇/11-存储过程.md"}');export{m as comp,b as data};
