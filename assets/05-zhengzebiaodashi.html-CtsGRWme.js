import{_ as e,c as t,d as l,e as s,f as a,b as c,w as i,r as o,o as u}from"./app-QnWV-YHu.js";const r={};function d(k,n){const p=o("RouteLink");return u(),t("div",null,[n[3]||(n[3]=l(`<h1 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式"><span>正则表达式</span></a></h1><blockquote><p>掌握正则表达式，高效处理文本数据</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>理解正则表达式的基本语法</li><li>掌握 re 模块的使用</li><li>学会文本匹配和提取</li><li>掌握常用的正则表达式模式</li></ul><h2 id="_1-正则表达式基础" tabindex="-1"><a class="header-anchor" href="#_1-正则表达式基础"><span>1. 正则表达式基础</span></a></h2><h3 id="_1-1-基本匹配" tabindex="-1"><a class="header-anchor" href="#_1-1-基本匹配"><span>1.1 基本匹配</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> re</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 精确匹配</span></span>
<span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;hello&#39;</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># hello</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 忽略大小写</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;HELLO&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">,</span> re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># hello</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-元字符" tabindex="-1"><a class="header-anchor" href="#_1-2-元字符"><span>1.2 元字符</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># . 匹配任意字符（除换行符）</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;h.llo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ^ 匹配字符串开始</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;^hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;^world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 不匹配</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># $ 匹配字符串结束</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;world$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># * 匹配0次或多次</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab*c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ac&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 匹配</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab*c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># 匹配</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab*c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abbc&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># + 匹配1次或多次</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab+c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># 匹配</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab+c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ac&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 不匹配</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ? 匹配0次或1次</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab?c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ac&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 匹配</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;ab?c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># 匹配</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-字符类" tabindex="-1"><a class="header-anchor" href="#_1-3-字符类"><span>1.3 字符类</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># [] 字符集</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;[abc]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;apple&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配 a</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;[0-9]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc123&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配 1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># [^] 取反</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;[^0-9]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123abc&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配 a</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \\d 数字 [0-9]</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;\\d+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc123&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 123</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \\D 非数字</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;\\D+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123abc&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># abc</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \\w 字母数字下划线 [a-zA-Z0-9_]</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;\\w+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello_123&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># hello_123</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \\W 非字母数字下划线</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;\\W+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello, world!&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># , </span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \\s 空白字符</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;\\s+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 空格</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \\S 非空白字符</span></span>
<span class="line">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;\\S+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># hello</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-re-模块函数" tabindex="-1"><a class="header-anchor" href="#_2-re-模块函数"><span>2. re 模块函数</span></a></h2><h3 id="_2-1-search-查找第一个匹配" tabindex="-1"><a class="header-anchor" href="#_2-1-search-查找第一个匹配"><span>2.1 search() - 查找第一个匹配</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> re</span>
<span class="line"></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;My phone: 123-456-7890&#39;</span></span>
<span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;\\d{3}-\\d{3}-\\d{4}&#39;</span></span>
<span class="line"></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> result<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 123-456-7890</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 起始位置</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>end<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 结束位置</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-match-从开头匹配" tabindex="-1"><a class="header-anchor" href="#_2-2-match-从开头匹配"><span>2.2 match() - 从开头匹配</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 从字符串开头匹配</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r&#39;hello&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 匹配</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r&#39;world&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-findall-查找所有匹配" tabindex="-1"><a class="header-anchor" href="#_2-3-findall-查找所有匹配"><span>2.3 findall() - 查找所有匹配</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&#39;Email: user@example.com, admin@test.com&#39;</span></span>
<span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;[\\w.-]+@[\\w.-]+&#39;</span></span>
<span class="line"></span>
<span class="line">emails <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>emails<span class="token punctuation">)</span>  <span class="token comment"># [&#39;user@example.com&#39;, &#39;admin@test.com&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-finditer-迭代器" tabindex="-1"><a class="header-anchor" href="#_2-4-finditer-迭代器"><span>2.4 finditer() - 迭代器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&#39;Phone: 123-456-7890, 098-765-4321&#39;</span></span>
<span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;\\d{3}-\\d{3}-\\d{4}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token keyword">match</span> <span class="token keyword">in</span> re<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">match</span><span class="token punctuation">.</span>span<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-sub-替换" tabindex="-1"><a class="header-anchor" href="#_2-5-sub-替换"><span>2.5 sub() - 替换</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&#39;Hello 123 World 456&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 替换所有数字</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;\\d+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NUM&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># Hello NUM World NUM</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 限制替换次数</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;\\d+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NUM&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># Hello NUM World 456</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-split-分割" tabindex="-1"><a class="header-anchor" href="#_2-6-split-分割"><span>2.6 split() - 分割</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&#39;apple,banana;orange|grape&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用多个分隔符</span></span>
<span class="line">parts <span class="token operator">=</span> re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">r&#39;[,;|]&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>parts<span class="token punctuation">)</span>  <span class="token comment"># [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;, &#39;grape&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-分组和捕获" tabindex="-1"><a class="header-anchor" href="#_3-分组和捕获"><span>3. 分组和捕获</span></a></h2><h3 id="_3-1-基本分组" tabindex="-1"><a class="header-anchor" href="#_3-1-基本分组"><span>3.1 基本分组</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># () 创建捕获组</span></span>
<span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;(\\d{4})-(\\d{2})-(\\d{2})&#39;</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;2024-01-15&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2024-01-15 (完整匹配)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2024 (第一组)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 01 (第二组)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 15 (第三组)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># (&#39;2024&#39;, &#39;01&#39;, &#39;15&#39;)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-命名分组" tabindex="-1"><a class="header-anchor" href="#_3-2-命名分组"><span>3.2 命名分组</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;(?P&lt;year&gt;\\d{4})-(?P&lt;month&gt;\\d{2})-(?P&lt;day&gt;\\d{2})&#39;</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;2024-01-15&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 2024</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;month&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 01</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 15</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>groupdict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># {&#39;year&#39;: &#39;2024&#39;, &#39;month&#39;: &#39;01&#39;, &#39;day&#39;: &#39;15&#39;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-非捕获组" tabindex="-1"><a class="header-anchor" href="#_3-3-非捕获组"><span>3.3 非捕获组</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># (?:...) 非捕获组</span></span>
<span class="line">pattern <span class="token operator">=</span> <span class="token string">r&#39;(?:http|https)://(\\w+\\.\\w+)&#39;</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;https://www.example.com&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># https://www.example.com</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># www.example.com</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-常用正则模式" tabindex="-1"><a class="header-anchor" href="#_4-常用正则模式"><span>4. 常用正则模式</span></a></h2><h3 id="_4-1-邮箱验证" tabindex="-1"><a class="header-anchor" href="#_4-1-邮箱验证"><span>4.1 邮箱验证</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">validate_email</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;^[\\w.-]+@[\\w.-]+\\.\\w+$&#39;</span></span>
<span class="line">    <span class="token keyword">return</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> email<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_email<span class="token punctuation">(</span><span class="token string">&#39;user@example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_email<span class="token punctuation">(</span><span class="token string">&#39;invalid.email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># False</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-手机号验证" tabindex="-1"><a class="header-anchor" href="#_4-2-手机号验证"><span>4.2 手机号验证</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">validate_phone</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 中国手机号</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;^1[3-9]\\d{9}$&#39;</span></span>
<span class="line">    <span class="token keyword">return</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_phone<span class="token punctuation">(</span><span class="token string">&#39;13812345678&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_phone<span class="token punctuation">(</span><span class="token string">&#39;12345678901&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># False</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-url-提取" tabindex="-1"><a class="header-anchor" href="#_4-3-url-提取"><span>4.3 URL 提取</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">extract_urls</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;https?://[\\w.-]+(?:/[\\w.-]*)*&#39;</span></span>
<span class="line">    <span class="token keyword">return</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;Visit https://example.com and http://test.org&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>extract_urls<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-ip-地址验证" tabindex="-1"><a class="header-anchor" href="#_4-4-ip-地址验证"><span>4.4 IP 地址验证</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">validate_ip</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;^(\\d{1,3}\\.){3}\\d{1,3}$&#39;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检查每个数字是否在 0-255 范围内</span></span>
<span class="line">    parts <span class="token operator">=</span> ip<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">all</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>part<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">255</span> <span class="token keyword">for</span> part <span class="token keyword">in</span> parts<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_ip<span class="token punctuation">(</span><span class="token string">&#39;192.168.1.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_ip<span class="token punctuation">(</span><span class="token string">&#39;256.1.1.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># False</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-身份证号验证" tabindex="-1"><a class="header-anchor" href="#_4-5-身份证号验证"><span>4.5 身份证号验证</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">validate_id_card</span><span class="token punctuation">(</span>id_card<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 18位身份证</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;^\\d{17}[\\dXx]$&#39;</span></span>
<span class="line">    <span class="token keyword">return</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> id_card<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>validate_id_card<span class="token punctuation">(</span><span class="token string">&#39;110101199003071234&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-高级特性" tabindex="-1"><a class="header-anchor" href="#_5-高级特性"><span>5. 高级特性</span></a></h2><h3 id="_5-1-贪婪与非贪婪" tabindex="-1"><a class="header-anchor" href="#_5-1-贪婪与非贪婪"><span>5.1 贪婪与非贪婪</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&#39;&lt;div&gt;content1&lt;/div&gt;&lt;div&gt;content2&lt;/div&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 贪婪匹配（默认）</span></span>
<span class="line">greedy <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;&lt;div&gt;.*&lt;/div&gt;&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>greedy<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;div&gt;content1&lt;/div&gt;&lt;div&gt;content2&lt;/div&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 非贪婪匹配</span></span>
<span class="line">non_greedy <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;&lt;div&gt;.*?&lt;/div&gt;&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>non_greedy<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;div&gt;content1&lt;/div&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-前瞻和后顾" tabindex="-1"><a class="header-anchor" href="#_5-2-前瞻和后顾"><span>5.2 前瞻和后顾</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 正向前瞻 (?=...)</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;Python3.11&#39;</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;Python(?=3)&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># Python</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 负向前瞻 (?!...)</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;Python(?!2)&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># Python</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 正向后顾 (?&lt;=...)</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;(?&lt;=Python)\\d+&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 负向后顾 (?&lt;!...)</span></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;abc123&#39;</span></span>
<span class="line">result <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;(?&lt;![a-z])\\d+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 123</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-编译正则表达式" tabindex="-1"><a class="header-anchor" href="#_5-3-编译正则表达式"><span>5.3 编译正则表达式</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 频繁使用的模式应该编译</span></span>
<span class="line">pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&#39;\\d+&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 提高性能</span></span>
<span class="line"><span class="token keyword">for</span> text <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;abc123&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghi789&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> pattern<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>text<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-实战案例" tabindex="-1"><a class="header-anchor" href="#_6-实战案例"><span>6. 实战案例</span></a></h2><h3 id="案例1-日志解析" tabindex="-1"><a class="header-anchor" href="#案例1-日志解析"><span>案例1：日志解析</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">parse_log</span><span class="token punctuation">(</span>log_line<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;(?P&lt;ip&gt;\\d+\\.\\d+\\.\\d+\\.\\d+).*\\[(?P&lt;time&gt;.*?)\\].*&quot;(?P&lt;method&gt;\\w+)\\s+(?P&lt;url&gt;.*?)\\s+&#39;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> log_line<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">match</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">match</span><span class="token punctuation">.</span>groupdict<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line">log <span class="token operator">=</span> <span class="token string">&#39;192.168.1.1 - - [15/Jan/2024:10:30:00] &quot;GET /index.html HTTP/1.1&quot;&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>parse_log<span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-html-标签清理" tabindex="-1"><a class="header-anchor" href="#案例2-html-标签清理"><span>案例2：HTML 标签清理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">remove_html_tags</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pattern <span class="token operator">=</span> <span class="token string">r&#39;&lt;[^&gt;]+&gt;&#39;</span></span>
<span class="line">    <span class="token keyword">return</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> html<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">html <span class="token operator">=</span> <span class="token string">&#39;&lt;p&gt;This is &lt;b&gt;bold&lt;/b&gt; text&lt;/p&gt;&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>remove_html_tags<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># This is bold text</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例3-敏感信息脱敏" tabindex="-1"><a class="header-anchor" href="#案例3-敏感信息脱敏"><span>案例3：敏感信息脱敏</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">mask_sensitive_info</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 手机号脱敏</span></span>
<span class="line">    text <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;(\\d{3})\\d{4}(\\d{4})&#39;</span><span class="token punctuation">,</span> <span class="token string">r&#39;\\1****\\2&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 身份证脱敏</span></span>
<span class="line">    text <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;(\\d{6})\\d{8}(\\d{4})&#39;</span><span class="token punctuation">,</span> <span class="token string">r&#39;\\1********\\2&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> text</span>
<span class="line"></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;手机: 13812345678, 身份证: 110101199003071234&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>mask_sensitive_info<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例4-文本提取" tabindex="-1"><a class="header-anchor" href="#案例4-文本提取"><span>案例4：文本提取</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">extract_data</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 提取价格</span></span>
<span class="line">    prices <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;¥\\d+(?:\\.\\d{2})?&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 提取日期</span></span>
<span class="line">    dates <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;\\d{4}-\\d{2}-\\d{2}&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 提取邮箱</span></span>
<span class="line">    emails <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;[\\w.-]+@[\\w.-]+\\.\\w+&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;prices&#39;</span><span class="token punctuation">:</span> prices<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;dates&#39;</span><span class="token punctuation">:</span> dates<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;emails&#39;</span><span class="token punctuation">:</span> emails</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">text <span class="token operator">=</span> <span class="token string">&#39;价格: ¥99.99, 日期: 2024-01-15, 联系: user@example.com&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>extract_data<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-常用正则表达式" tabindex="-1"><a class="header-anchor" href="#_7-常用正则表达式"><span>7. 常用正则表达式</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 常见模式</span></span>
<span class="line">patterns <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;手机号&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^1[3-9]\\d{9}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;邮箱&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^[\\w.-]+@[\\w.-]+\\.\\w+$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;URL&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^https?://[\\w.-]+(?:/[\\w.-]*)*$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;IP地址&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;日期&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^\\d{4}-\\d{2}-\\d{2}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;时间&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^\\d{2}:\\d{2}:\\d{2}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;身份证&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^\\d{17}[\\dXx]$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;邮政编码&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^\\d{6}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;中文&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^[\\u4e00-\\u9fa5]+$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;数字&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^\\d+$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;字母&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^[a-zA-Z]+$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^[a-zA-Z]\\w{4,15}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;密码&#39;</span><span class="token punctuation">:</span> <span class="token string">r&#39;^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📝-练习题" tabindex="-1"><a class="header-anchor" href="#📝-练习题"><span>📝 练习题</span></a></h2><ol><li>编写正则表达式验证强密码（包含大小写字母、数字、特殊字符）</li><li>提取HTML中的所有链接</li><li>实现一个简单的Markdown解析器</li><li>编写手机号和邮箱的批量提取工具</li></ol><hr>`,63)),s("p",null,[n[1]||(n[1]=s("strong",null,"下一节：",-1)),n[2]||(n[2]=a()),c(p,{to:"/tutorials/python-ai/python/%E7%AC%AC03%E7%AB%A0-%E8%BF%9B%E9%98%B6%E7%BC%96%E7%A8%8B/06-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%A4%9A%E8%BF%9B%E7%A8%8B.html"},{default:i(()=>[...n[0]||(n[0]=[a("多线程与多进程",-1)])]),_:1})])])}const v=e(r,[["render",d]]),h=JSON.parse('{"path":"/tutorials/python-ai/python/di03zhang-jinjiebiancheng/05-zhengzebiaodashi.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. 正则表达式基础","slug":"_1-正则表达式基础","link":"#_1-正则表达式基础","children":[{"level":3,"title":"1.1 基本匹配","slug":"_1-1-基本匹配","link":"#_1-1-基本匹配","children":[]},{"level":3,"title":"1.2 元字符","slug":"_1-2-元字符","link":"#_1-2-元字符","children":[]},{"level":3,"title":"1.3 字符类","slug":"_1-3-字符类","link":"#_1-3-字符类","children":[]}]},{"level":2,"title":"2. re 模块函数","slug":"_2-re-模块函数","link":"#_2-re-模块函数","children":[{"level":3,"title":"2.1 search() - 查找第一个匹配","slug":"_2-1-search-查找第一个匹配","link":"#_2-1-search-查找第一个匹配","children":[]},{"level":3,"title":"2.2 match() - 从开头匹配","slug":"_2-2-match-从开头匹配","link":"#_2-2-match-从开头匹配","children":[]},{"level":3,"title":"2.3 findall() - 查找所有匹配","slug":"_2-3-findall-查找所有匹配","link":"#_2-3-findall-查找所有匹配","children":[]},{"level":3,"title":"2.4 finditer() - 迭代器","slug":"_2-4-finditer-迭代器","link":"#_2-4-finditer-迭代器","children":[]},{"level":3,"title":"2.5 sub() - 替换","slug":"_2-5-sub-替换","link":"#_2-5-sub-替换","children":[]},{"level":3,"title":"2.6 split() - 分割","slug":"_2-6-split-分割","link":"#_2-6-split-分割","children":[]}]},{"level":2,"title":"3. 分组和捕获","slug":"_3-分组和捕获","link":"#_3-分组和捕获","children":[{"level":3,"title":"3.1 基本分组","slug":"_3-1-基本分组","link":"#_3-1-基本分组","children":[]},{"level":3,"title":"3.2 命名分组","slug":"_3-2-命名分组","link":"#_3-2-命名分组","children":[]},{"level":3,"title":"3.3 非捕获组","slug":"_3-3-非捕获组","link":"#_3-3-非捕获组","children":[]}]},{"level":2,"title":"4. 常用正则模式","slug":"_4-常用正则模式","link":"#_4-常用正则模式","children":[{"level":3,"title":"4.1 邮箱验证","slug":"_4-1-邮箱验证","link":"#_4-1-邮箱验证","children":[]},{"level":3,"title":"4.2 手机号验证","slug":"_4-2-手机号验证","link":"#_4-2-手机号验证","children":[]},{"level":3,"title":"4.3 URL 提取","slug":"_4-3-url-提取","link":"#_4-3-url-提取","children":[]},{"level":3,"title":"4.4 IP 地址验证","slug":"_4-4-ip-地址验证","link":"#_4-4-ip-地址验证","children":[]},{"level":3,"title":"4.5 身份证号验证","slug":"_4-5-身份证号验证","link":"#_4-5-身份证号验证","children":[]}]},{"level":2,"title":"5. 高级特性","slug":"_5-高级特性","link":"#_5-高级特性","children":[{"level":3,"title":"5.1 贪婪与非贪婪","slug":"_5-1-贪婪与非贪婪","link":"#_5-1-贪婪与非贪婪","children":[]},{"level":3,"title":"5.2 前瞻和后顾","slug":"_5-2-前瞻和后顾","link":"#_5-2-前瞻和后顾","children":[]},{"level":3,"title":"5.3 编译正则表达式","slug":"_5-3-编译正则表达式","link":"#_5-3-编译正则表达式","children":[]}]},{"level":2,"title":"6. 实战案例","slug":"_6-实战案例","link":"#_6-实战案例","children":[{"level":3,"title":"案例1：日志解析","slug":"案例1-日志解析","link":"#案例1-日志解析","children":[]},{"level":3,"title":"案例2：HTML 标签清理","slug":"案例2-html-标签清理","link":"#案例2-html-标签清理","children":[]},{"level":3,"title":"案例3：敏感信息脱敏","slug":"案例3-敏感信息脱敏","link":"#案例3-敏感信息脱敏","children":[]},{"level":3,"title":"案例4：文本提取","slug":"案例4-文本提取","link":"#案例4-文本提取","children":[]}]},{"level":2,"title":"7. 常用正则表达式","slug":"_7-常用正则表达式","link":"#_7-常用正则表达式","children":[]},{"level":2,"title":"📝 练习题","slug":"📝-练习题","link":"#📝-练习题","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第03章-进阶编程/05-正则表达式.md"}');export{v as comp,h as data};
