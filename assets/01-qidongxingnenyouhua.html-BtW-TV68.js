import{_ as i,c,d as o,e as s,f as a,b as e,w as u,r as t,o as r}from"./app-CJnNnfV_.js";const d={},k={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/performance-optimization-overview-0000001581809185-V3",target:"_blank",rel:"noopener noreferrer"};function m(v,n){const p=t("ExternalLinkIcon"),l=t("RouteLink");return r(),c("div",null,[n[4]||(n[4]=o(`<h1 id="启动性能优化" tabindex="-1"><a class="header-anchor" href="#启动性能优化"><span>启动性能优化</span></a></h1><blockquote><p>让应用秒开，提升用户体验</p></blockquote><h2 id="⚡-启动类型与指标" tabindex="-1"><a class="header-anchor" href="#⚡-启动类型与指标"><span>⚡ 启动类型与指标</span></a></h2><h3 id="三种启动方式" tabindex="-1"><a class="header-anchor" href="#三种启动方式"><span>三种启动方式</span></a></h3><table><thead><tr><th>启动类型</th><th>说明</th><th>优秀指标</th></tr></thead><tbody><tr><td><strong>冷启动</strong></td><td>进程不存在，完全启动</td><td>&lt;600ms</td></tr><tr><td><strong>温启动</strong></td><td>进程存在，Activity 重建</td><td>&lt;300ms</td></tr><tr><td><strong>热启动</strong></td><td>进程和 Activity 都存在</td><td>&lt;100ms</td></tr></tbody></table><h2 id="🚀-核心优化策略" tabindex="-1"><a class="header-anchor" href="#🚀-核心优化策略"><span>🚀 核心优化策略</span></a></h2><h3 id="_1-延迟初始化" tabindex="-1"><a class="header-anchor" href="#_1-延迟初始化"><span>1. 延迟初始化</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 好的做法</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">EntryAbility</span> <span class="token keyword">extends</span> <span class="token class-name">UIAbility</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">onCreate</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> launchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 只初始化必要的</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initEssential</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 延迟初始化</span></span>
<span class="line">    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initSDKs</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-异步并行加载" tabindex="-1"><a class="header-anchor" href="#_2-异步并行加载"><span>2. 异步并行加载</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 并行加载数据</span></span>
<span class="line">  <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadUserData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用骨架屏" tabindex="-1"><a class="header-anchor" href="#_3-使用骨架屏"><span>3. 使用骨架屏</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct AppHome <span class="token punctuation">{</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> isLoading<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isLoading<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">SkeletonScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 骨架屏</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">MainContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">// 主内容</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-虚拟化列表" tabindex="-1"><a class="header-anchor" href="#_4-虚拟化列表"><span>4. 虚拟化列表</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 使用 LazyForEach 替代 ForEach</span></span>
<span class="line"><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">LazyForEach</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-性能监控" tabindex="-1"><a class="header-anchor" href="#📊-性能监控"><span>📊 性能监控</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> hiTraceMeter <span class="token keyword">from</span> <span class="token string">&#39;@ohos.hiTraceMeter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 标记启动</span></span>
<span class="line">hiTraceMeter<span class="token punctuation">.</span><span class="token function">startTrace</span><span class="token punctuation">(</span><span class="token string">&#39;AppLaunch&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 启动完成</span></span>
<span class="line">  hiTraceMeter<span class="token punctuation">.</span><span class="token function">finishTrace</span><span class="token punctuation">(</span><span class="token string">&#39;AppLaunch&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><ol><li>✅ 避免在启动时执行耗时操作</li><li>✅ 使用异步加载非关键资源</li><li>✅ 优化首屏渲染的组件数量</li><li>✅ 使用占位图替代大图</li><li>✅ 合理使用缓存</li></ol><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,19)),s("ul",null,[s("li",null,[s("a",k,[n[0]||(n[0]=a("性能优化官方文档",-1)),e(p)])])]),n[5]||(n[5]=s("hr",null,null,-1)),s("p",null,[n[2]||(n[2]=s("strong",null,"下一节",-1)),n[3]||(n[3]=a(" → ",-1)),e(l,{to:"/tutorials/harmonyos-dev/15-performance-optimization/02-%E6%B8%B2%E6%9F%93%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html"},{default:u(()=>[...n[1]||(n[1]=[a("渲染性能优化",-1)])]),_:1})])])}const b=i(d,[["render",m]]),g=JSON.parse('{"path":"/tutorials/harmonyos-dev/15-performance-optimization/01-qidongxingnenyouhua.html","title":"启动性能优化","lang":"zh-CN","frontmatter":{"title":"启动性能优化","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"⚡ 启动类型与指标","slug":"⚡-启动类型与指标","link":"#⚡-启动类型与指标","children":[{"level":3,"title":"三种启动方式","slug":"三种启动方式","link":"#三种启动方式","children":[]}]},{"level":2,"title":"🚀 核心优化策略","slug":"🚀-核心优化策略","link":"#🚀-核心优化策略","children":[{"level":3,"title":"1. 延迟初始化","slug":"_1-延迟初始化","link":"#_1-延迟初始化","children":[]},{"level":3,"title":"2. 异步并行加载","slug":"_2-异步并行加载","link":"#_2-异步并行加载","children":[]},{"level":3,"title":"3. 使用骨架屏","slug":"_3-使用骨架屏","link":"#_3-使用骨架屏","children":[]},{"level":3,"title":"4. 虚拟化列表","slug":"_4-虚拟化列表","link":"#_4-虚拟化列表","children":[]}]},{"level":2,"title":"📊 性能监控","slug":"📊-性能监控","link":"#📊-性能监控","children":[]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/15-performance-optimization/01-启动性能优化.md"}');export{b as comp,g as data};
