import{_ as p,c as l,d as t,e as a,f as n,b as o,w as c,r as i,o as r}from"./app-DnBTedau.js";const d={};function k(u,s){const e=i("RouteLink");return r(),l("div",null,[s[3]||(s[3]=t(`<h1 id="锁机制" tabindex="-1"><a class="header-anchor" href="#锁机制"><span>锁机制</span></a></h1><blockquote><p>锁是数据库并发控制的核心机制。本章学习MySQL的锁类型和使用场景。</p></blockquote><h2 id="📋-本章目录" tabindex="-1"><a class="header-anchor" href="#📋-本章目录"><span>📋 本章目录</span></a></h2><ul><li><a href="#%E4%B8%80%E9%94%81%E6%A6%82%E8%BF%B0">一、锁概述</a></li><li><a href="#%E4%BA%8C%E5%85%A8%E5%B1%80%E9%94%81">二、全局锁</a></li><li><a href="#%E4%B8%89%E8%A1%A8%E7%BA%A7%E9%94%81">三、表级锁</a></li><li><a href="#%E5%9B%9B%E8%A1%8C%E7%BA%A7%E9%94%81">四、行级锁</a></li><li><a href="#%E4%BA%94%E9%94%81%E9%97%AE%E9%A2%98%E4%B8%8E%E4%BC%98%E5%8C%96">五、锁问题与优化</a></li></ul><hr><h2 id="一、锁概述" tabindex="-1"><a class="header-anchor" href="#一、锁概述"><span>一、锁概述</span></a></h2><h3 id="_1-1-什么是锁" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是锁"><span>1.1 什么是锁？</span></a></h3><p><strong>锁</strong> 是计算机协调多个进程或线程并发访问某一资源的机制。在数据库中，锁用于保证数据并发访问的一致性和有效性。</p><p><strong>为什么需要锁？</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 场景：两个用户同时购买最后一件商品</span></span>
<span class="line"><span class="token comment">-- 用户A：查询库存 → 库存=1 → 下单扣减库存</span></span>
<span class="line"><span class="token comment">-- 用户B：查询库存 → 库存=1 → 下单扣减库存</span></span>
<span class="line"><span class="token comment">-- 结果：两个用户都成功，但实际只有1件商品！</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 使用锁解决：</span></span>
<span class="line"><span class="token keyword">SELECT</span> stock <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- 加锁</span></span>
<span class="line"><span class="token comment">-- 只有一个用户能获取锁，另一个必须等待</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-锁的分类" tabindex="-1"><a class="header-anchor" href="#_1-2-锁的分类"><span>1.2 锁的分类</span></a></h3><p><strong>按锁粒度分类：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">锁的粒度</span>
<span class="line">├── 全局锁：锁定整个数据库</span>
<span class="line">├── 表级锁：锁定整张表</span>
<span class="line">└── 行级锁：锁定具体的行</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>特点对比：</strong></p><table><thead><tr><th>锁类型</th><th>粒度</th><th>并发性</th><th>开销</th><th>死锁风险</th></tr></thead><tbody><tr><td><strong>全局锁</strong></td><td>最大</td><td>最差</td><td>最小</td><td>无</td></tr><tr><td><strong>表级锁</strong></td><td>中等</td><td>一般</td><td>较小</td><td>较低</td></tr><tr><td><strong>行级锁</strong></td><td>最小</td><td>最好</td><td>最大</td><td>较高</td></tr></tbody></table><h3 id="_1-3-锁模式" tabindex="-1"><a class="header-anchor" href="#_1-3-锁模式"><span>1.3 锁模式</span></a></h3><p><strong>按操作类型分类：</strong></p><table><thead><tr><th>锁模式</th><th>说明</th><th>其他事务能读？</th><th>其他事务能写？</th></tr></thead><tbody><tr><td><strong>共享锁（S锁）</strong></td><td>读锁</td><td>✅ 能</td><td>❌ 不能</td></tr><tr><td><strong>排他锁（X锁）</strong></td><td>写锁</td><td>❌ 不能</td><td>❌ 不能</td></tr></tbody></table><p><strong>兼容性矩阵：</strong></p><table><thead><tr><th></th><th>共享锁（S）</th><th>排他锁（X）</th></tr></thead><tbody><tr><td><strong>共享锁（S）</strong></td><td>✅ 兼容</td><td>❌ 冲突</td></tr><tr><td><strong>排他锁（X）</strong></td><td>❌ 冲突</td><td>❌ 冲突</td></tr></tbody></table><h3 id="_1-4-💼-实际工作中什么时候用锁" tabindex="-1"><a class="header-anchor" href="#_1-4-💼-实际工作中什么时候用锁"><span>1.4 💼 实际工作中什么时候用锁？</span></a></h3><p><strong>场景1：秒杀抢购（最典型）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 业务场景：100个用户同时抢购1件商品</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 使用排他锁锁定库存记录</span></span>
<span class="line"><span class="token keyword">SELECT</span> stock <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1001</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 检查库存</span></span>
<span class="line"><span class="token keyword">IF</span> stock <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">THEN</span></span>
<span class="line">    <span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> product_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用锁</strong>：</p><ul><li>✅ 防止超卖：确保库存不会变成负数</li><li>✅ <code>FOR UPDATE</code>加排他锁，同一时刻只有一个事务能操作</li><li>✅ 其他事务必须等待，避免并发问题</li></ul><p><strong>场景2：账户转账（金融系统）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 锁定两个账户，防止并发转账导致余额错误</span></span>
<span class="line"><span class="token keyword">SELECT</span> balance <span class="token keyword">FROM</span> accounts <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- 锁定账户A</span></span>
<span class="line"><span class="token keyword">SELECT</span> balance <span class="token keyword">FROM</span> accounts <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- 锁定账户B</span></span>
<span class="line"><span class="token comment">-- 扣款</span></span>
<span class="line"><span class="token keyword">UPDATE</span> accounts <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 入账</span></span>
<span class="line"><span class="token keyword">UPDATE</span> accounts <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用锁</strong>：防止同时有多个转账操作，导致余额计算错误。</p><p><strong>场景3：订单编号生成（唯一性保证）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 锁定编号表，生成唯一订单号</span></span>
<span class="line"><span class="token keyword">SELECT</span> next_no <span class="token keyword">FROM</span> order_no_seq <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 更新编号</span></span>
<span class="line"><span class="token keyword">UPDATE</span> order_no_seq <span class="token keyword">SET</span> next_no <span class="token operator">=</span> next_no <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 使用编号创建订单</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>order_no<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>next_no<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么用锁</strong>：保证订单号唯一，不会重复。</p><p><strong>场景4：库存扣减（电商系统）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 悲观锁：先锁定再操作</span></span>
<span class="line"><span class="token keyword">SELECT</span> stock <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">100</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">AND</span> stock <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 或使用乐观锁（无锁）</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> version <span class="token operator">=</span> version <span class="token operator">+</span> <span class="token number">1</span> </span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">AND</span> stock <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">AND</span> version <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 如果version不匹配，说明被别人修改过，更新失败</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景5：座位选座（电影票、高铁票）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 锁定座位，防止多人选择同一座位</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">status</span> <span class="token keyword">FROM</span> seats <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">10</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">IF</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;available&#39;</span> <span class="token keyword">THEN</span></span>
<span class="line">    <span class="token keyword">UPDATE</span> seats <span class="token keyword">SET</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;locked&#39;</span><span class="token punctuation">,</span> user_id <span class="token operator">=</span> <span class="token number">1001</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>什么时候用共享锁（读锁）？</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 场景：读取数据时防止被修改</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">LOCK</span> <span class="token operator">IN</span> <span class="token keyword">SHARE</span> <span class="token keyword">MODE</span><span class="token punctuation">;</span>  <span class="token comment">-- 或 FOR SHARE</span></span>
<span class="line"><span class="token comment">-- 其他事务可以读，但不能写</span></span>
<span class="line"><span class="token comment">-- ... 业务逻辑 ...</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实际应用</strong>：报表生成、数据一致性校验</p><p><strong>什么时候用排他锁（写锁）？</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 场景：修改数据前锁定，防止其他人读写</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">999</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实际应用</strong>：秒杀、转账、扣库存等</p><p><strong>实际工作经验：</strong></p><ul><li>🏪 <strong>电商</strong>：秒杀、库存扣减 → 必须用锁</li><li>💰 <strong>金融</strong>：转账、支付 → 必须用锁</li><li>🎫 <strong>票务</strong>：选座、抢票 → 必须用锁</li><li>📊 <strong>普通查询</strong>：不需要用锁</li><li>📝 <strong>日志表</strong>：写多读少，不需要用锁</li></ul><p><strong>锁的选择建议：</strong></p><ul><li>✅ <strong>悲观锁</strong>（FOR UPDATE）：并发高、冲突多的场景</li><li>✅ <strong>乐观锁</strong>（版本号）：并发低、冲突少的场景</li><li>⚠️ <strong>注意死锁</strong>：多个事务相互等待</li></ul><hr><h2 id="二、全局锁" tabindex="-1"><a class="header-anchor" href="#二、全局锁"><span>二、全局锁</span></a></h2><h3 id="_2-1-什么是全局锁" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是全局锁"><span>2.1 什么是全局锁？</span></a></h3><p><strong>全局锁</strong> 锁定整个数据库实例，使整个实例处于只读状态。</p><p><strong>使用场景：</strong></p><ul><li>全库逻辑备份</li><li>数据迁移</li></ul><h3 id="_2-2-全局锁操作" tabindex="-1"><a class="header-anchor" href="#_2-2-全局锁操作"><span>2.2 全局锁操作</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 加全局锁</span></span>
<span class="line">FLUSH <span class="token keyword">TABLES</span> <span class="token keyword">WITH</span> <span class="token keyword">READ</span> <span class="token keyword">LOCK</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 此时：</span></span>
<span class="line"><span class="token comment">-- ✅ 可以执行：SELECT</span></span>
<span class="line"><span class="token comment">-- ❌ 被阻塞：INSERT、UPDATE、DELETE、DDL</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 执行备份</span></span>
<span class="line"><span class="token comment">-- mysqldump -u root -p database_name &gt; backup.sql</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 释放全局锁</span></span>
<span class="line"><span class="token keyword">UNLOCK</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-全局锁的问题" tabindex="-1"><a class="header-anchor" href="#_2-3-全局锁的问题"><span>2.3 全局锁的问题</span></a></h3><p><strong>问题1：主库备份</strong></p><ul><li>业务停摆，无法写入数据</li><li>影响用户体验</li></ul><p><strong>问题2：从库备份</strong></p><ul><li>从库无法同步主库的binlog</li><li>导致主从延迟</li></ul><h3 id="_2-4-innodb的一致性备份" tabindex="-1"><a class="header-anchor" href="#_2-4-innodb的一致性备份"><span>2.4 InnoDB的一致性备份</span></a></h3><p>InnoDB支持不加锁的一致性备份：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用 --single-transaction 参数</span></span>
<span class="line">mysqldump --single-transaction <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> database_name <span class="token operator">&gt;</span> backup.sql</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 原理：利用MVCC实现一致性快照读</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>对比：</strong></p><table><thead><tr><th>方式</th><th>是否加锁</th><th>影响业务</th><th>适用引擎</th></tr></thead><tbody><tr><td>FLUSH TABLES</td><td>✅ 加锁</td><td>❌ 影响大</td><td>所有引擎</td></tr><tr><td>--single-transaction</td><td>❌ 不加锁</td><td>✅ 几乎无影响</td><td>InnoDB</td></tr></tbody></table><hr><h2 id="三、表级锁" tabindex="-1"><a class="header-anchor" href="#三、表级锁"><span>三、表级锁</span></a></h2><h3 id="_3-1-表锁-table-lock" tabindex="-1"><a class="header-anchor" href="#_3-1-表锁-table-lock"><span>3.1 表锁（Table Lock）</span></a></h3><p><strong>表锁类型：</strong></p><ul><li><strong>表共享读锁（read lock）</strong>：阻塞写操作</li><li><strong>表独占写锁（write lock）</strong>：阻塞读写操作</li></ul><p><strong>语法：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 加锁</span></span>
<span class="line"><span class="token keyword">LOCK</span> <span class="token keyword">TABLES</span> 表名 <span class="token keyword">READ</span><span class="token punctuation">;</span>   <span class="token comment">-- 读锁</span></span>
<span class="line"><span class="token keyword">LOCK</span> <span class="token keyword">TABLES</span> 表名 <span class="token keyword">WRITE</span><span class="token punctuation">;</span>  <span class="token comment">-- 写锁</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 释放锁</span></span>
<span class="line"><span class="token keyword">UNLOCK</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 或客户端断开连接自动释放</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例：读锁</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 客户端A</span></span>
<span class="line"><span class="token keyword">LOCK</span> <span class="token keyword">TABLES</span> products <span class="token keyword">READ</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products<span class="token punctuation">;</span>     <span class="token comment">-- ✅ 可以</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 不能写</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders<span class="token punctuation">;</span>       <span class="token comment">-- ❌ 不能访问其他表</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 客户端B</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products<span class="token punctuation">;</span>     <span class="token comment">-- ✅ 可以读</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待（被阻塞）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 客户端A释放锁</span></span>
<span class="line"><span class="token keyword">UNLOCK</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 客户端B的UPDATE立即执行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例：写锁</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 客户端A</span></span>
<span class="line"><span class="token keyword">LOCK</span> <span class="token keyword">TABLES</span> products <span class="token keyword">WRITE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products<span class="token punctuation">;</span>     <span class="token comment">-- ✅ 可以</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">-- ✅ 可以</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 客户端B</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products<span class="token punctuation">;</span>     <span class="token comment">-- ❌ 等待（被阻塞）</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待（被阻塞）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 客户端A释放锁</span></span>
<span class="line"><span class="token keyword">UNLOCK</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>表锁特点：</strong></p><ul><li>✅ 开销小，加锁快</li><li>❌ 锁粒度大，并发度低</li><li>❌ 不会出现死锁</li></ul><h3 id="_3-2-元数据锁-mdl" tabindex="-1"><a class="header-anchor" href="#_3-2-元数据锁-mdl"><span>3.2 元数据锁（MDL）</span></a></h3><p><strong>元数据锁</strong> 由系统自动控制，用于保护表结构的一致性。</p><p><strong>规则：</strong></p><ul><li>执行DML（SELECT、INSERT、UPDATE、DELETE）时，加<strong>MDL读锁</strong></li><li>执行DDL（ALTER TABLE等）时，加<strong>MDL写锁</strong></li></ul><p><strong>示例：MDL锁的作用</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 会话1：开启事务，查询数据（加MDL读锁）</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：修改表结构（需要MDL写锁）</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> users <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> phone <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 等待（被阻塞）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话1：提交事务（释放MDL读锁）</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：ALTER立即执行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查看MDL锁：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> </span>
<span class="line">    object_type<span class="token punctuation">,</span></span>
<span class="line">    object_schema<span class="token punctuation">,</span></span>
<span class="line">    object_name<span class="token punctuation">,</span></span>
<span class="line">    lock_type<span class="token punctuation">,</span></span>
<span class="line">    lock_duration</span>
<span class="line"><span class="token keyword">FROM</span> performance_schema<span class="token punctuation">.</span>metadata_locks<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>MDL锁问题：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ⚠️ 场景：长事务持有MDL读锁</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users<span class="token punctuation">;</span>  <span class="token comment">-- MDL读锁</span></span>
<span class="line"><span class="token comment">-- ... 长时间不提交 ...</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 其他会话的DDL会被阻塞，导致：</span></span>
<span class="line"><span class="token comment">-- 1. 后续所有访问该表的操作都被阻塞</span></span>
<span class="line"><span class="token comment">-- 2. 数据库连接堆积</span></span>
<span class="line"><span class="token comment">-- 3. 系统雪崩</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 解决：及时提交事务，避免长事务</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-意向锁-intention-lock" tabindex="-1"><a class="header-anchor" href="#_3-3-意向锁-intention-lock"><span>3.3 意向锁（Intention Lock）</span></a></h3><p><strong>意向锁</strong> 是InnoDB引入的表级锁，用于提高加表锁的效率。</p><p><strong>类型：</strong></p><ul><li><strong>意向共享锁（IS）</strong>：事务想要获取表中某些行的共享锁</li><li><strong>意向排他锁（IX）</strong>：事务想要获取表中某些行的排他锁</li></ul><p><strong>作用：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 没有意向锁：</span></span>
<span class="line"><span class="token comment">-- 要加表锁时，需要遍历所有行，检查是否有行锁</span></span>
<span class="line"><span class="token keyword">LOCK</span> <span class="token keyword">TABLES</span> users <span class="token keyword">READ</span><span class="token punctuation">;</span>  <span class="token comment">-- 需要检查每一行</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 有意向锁：</span></span>
<span class="line"><span class="token comment">-- 只需检查表上的意向锁，快速判断是否冲突</span></span>
<span class="line"><span class="token comment">-- 如果有IX锁，说明有行被锁，表共享锁无法加</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>兼容性矩阵：</strong></p><table><thead><tr><th></th><th>IS</th><th>IX</th><th>S</th><th>X</th></tr></thead><tbody><tr><td><strong>IS</strong></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr><tr><td><strong>IX</strong></td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><strong>S</strong></td><td>✅</td><td>❌</td><td>✅</td><td>❌</td></tr><tr><td><strong>X</strong></td><td>❌</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><p><strong>查看意向锁：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> </span>
<span class="line">    object_schema<span class="token punctuation">,</span></span>
<span class="line">    object_name<span class="token punctuation">,</span></span>
<span class="line">    index_name<span class="token punctuation">,</span></span>
<span class="line">    lock_type<span class="token punctuation">,</span></span>
<span class="line">    lock_mode<span class="token punctuation">,</span></span>
<span class="line">    lock_data</span>
<span class="line"><span class="token keyword">FROM</span> performance_schema<span class="token punctuation">.</span>data_locks<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、行级锁" tabindex="-1"><a class="header-anchor" href="#四、行级锁"><span>四、行级锁</span></a></h2><h3 id="_4-1-行锁-record-lock" tabindex="-1"><a class="header-anchor" href="#_4-1-行锁-record-lock"><span>4.1 行锁（Record Lock）</span></a></h3><p><strong>行锁</strong> 锁定单个行记录，InnoDB的核心锁机制。</p><p><strong>特点：</strong></p><ul><li>✅ 锁粒度最小，并发度最高</li><li>✅ 支持事务</li><li>⚠️ 开销大，可能死锁</li></ul><p><strong>行锁类型：</strong></p><ul><li><strong>共享锁（S锁）</strong>：允许读，阻塞写</li><li><strong>排他锁（X锁）</strong>：阻塞读写</li></ul><p><strong>加锁方式：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 自动加锁</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token comment">-- 加排他锁</span></span>
<span class="line"><span class="token keyword">UPDATE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token comment">-- 加排他锁</span></span>
<span class="line"><span class="token keyword">DELETE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token comment">-- 加排他锁</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 手动加锁</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">LOCK</span> <span class="token operator">IN</span> <span class="token keyword">SHARE</span> <span class="token keyword">MODE</span><span class="token punctuation">;</span>  <span class="token comment">-- 加共享锁（5.7）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FOR</span> <span class="token keyword">SHARE</span><span class="token punctuation">;</span>           <span class="token comment">-- 加共享锁（8.0）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>          <span class="token comment">-- 加排他锁</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例：共享锁</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 会话1：加共享锁</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">LOCK</span> <span class="token operator">IN</span> <span class="token keyword">SHARE</span> <span class="token keyword">MODE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：也可以加共享锁（兼容）</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">LOCK</span> <span class="token operator">IN</span> <span class="token keyword">SHARE</span> <span class="token keyword">MODE</span><span class="token punctuation">;</span>  <span class="token comment">-- ✅ 成功</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话3：加排他锁（冲突）</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例：排他锁</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 会话1：加排他锁</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：任何锁都会冲突</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- ✅ 普通查询不加锁，可以执行</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">SHARE</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-间隙锁-gap-lock" tabindex="-1"><a class="header-anchor" href="#_4-2-间隙锁-gap-lock"><span>4.2 间隙锁（Gap Lock）</span></a></h3><p><strong>间隙锁</strong> 锁定索引记录之间的间隙，防止幻读。</p><p><strong>只在RR（可重复读）隔离级别下生效。</strong></p><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 假设id有：1, 5, 10</span></span>
<span class="line"><span class="token comment">-- 间隙：(-∞, 1), (1, 5), (5, 10), (10, +∞)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话1：锁定 (5, 10) 这个间隙</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">7</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- id=7不存在</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2：插入间隙内的值</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待（被间隙锁阻塞）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- ✅ 成功（不在间隙内）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- ✅ 成功（不在间隙内）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>作用：防止幻读</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 会话1</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>  <span class="token comment">-- 返回10条</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;新用户&#39;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 被间隙锁阻塞</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话1</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>  <span class="token comment">-- 还是10条（避免幻读）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-临键锁-next-key-lock" tabindex="-1"><a class="header-anchor" href="#_4-3-临键锁-next-key-lock"><span>4.3 临键锁（Next-Key Lock）</span></a></h3><p><strong>临键锁 = 行锁 + 间隙锁</strong></p><p>锁定一个范围，并锁定记录本身。</p><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 假设id有：1, 5, 10</span></span>
<span class="line"><span class="token comment">-- 临键锁范围：(-∞, 1], (1, 5], (5, 10], (10, +∞)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 锁定 (5, 10] 这个临键锁</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">&lt;=</span> <span class="token number">10</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 阻塞：</span></span>
<span class="line"><span class="token comment">-- 1. 插入 id=6, 7, 8, 9（间隙锁作用）</span></span>
<span class="line"><span class="token comment">-- 2. 修改 id=10（行锁作用）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-行锁的退化" tabindex="-1"><a class="header-anchor" href="#_4-4-行锁的退化"><span>4.4 行锁的退化</span></a></h3><p><strong>1. 唯一索引等值查询（记录存在）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 临键锁退化为行锁</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">5</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 只锁 id=5 这一行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 唯一索引等值查询（记录不存在）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 临键锁退化为间隙锁</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">7</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- id=7不存在</span></span>
<span class="line"><span class="token comment">-- 只锁间隙 (5, 10)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 非唯一索引等值查询</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 使用临键锁 + 间隙锁</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 锁定匹配记录 + 向右的间隙</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-查看锁信息" tabindex="-1"><a class="header-anchor" href="#_4-5-查看锁信息"><span>4.5 查看锁信息</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看事务</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>INNODB_TRX<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看锁</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> performance_schema<span class="token punctuation">.</span>data_locks<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看锁等待</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> performance_schema<span class="token punctuation">.</span>data_lock_waits<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看是否有锁等待</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">ENGINE</span> <span class="token keyword">INNODB</span> <span class="token keyword">STATUS</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、锁问题与优化" tabindex="-1"><a class="header-anchor" href="#五、锁问题与优化"><span>五、锁问题与优化</span></a></h2><h3 id="_5-1-死锁" tabindex="-1"><a class="header-anchor" href="#_5-1-死锁"><span>5.1 死锁</span></a></h3><p>**死锁：**两个或多个事务相互等待对方释放锁，形成循环等待。</p><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 会话1</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- 锁住id=1</span></span>
<span class="line"><span class="token comment">-- 等待获取id=2的锁</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">-- 锁住id=2</span></span>
<span class="line"><span class="token comment">-- 等待获取id=1的锁</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 等待</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 结果：死锁！MySQL自动检测并回滚其中一个事务</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查看死锁日志：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">ENGINE</span> <span class="token keyword">INNODB</span> <span class="token keyword">STATUS</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 查看 LATEST DETECTED DEADLOCK 部分</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>避免死锁：</strong></p><ol><li>✅ 按相同顺序访问资源</li><li>✅ 缩短事务时间</li><li>✅ 降低事务隔离级别</li><li>✅ 使用合理的索引</li><li>✅ 避免大事务</li></ol><h3 id="_5-2-锁等待超时" tabindex="-1"><a class="header-anchor" href="#_5-2-锁等待超时"><span>5.2 锁等待超时</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看锁等待超时时间</span></span>
<span class="line"><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;innodb_lock_wait_timeout&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 默认50秒</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 设置超时时间</span></span>
<span class="line"><span class="token keyword">SET</span> innodb_lock_wait_timeout <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">-- 10秒</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-优化建议" tabindex="-1"><a class="header-anchor" href="#_5-3-优化建议"><span>5.3 优化建议</span></a></h3><p><strong>1. 使用合适的索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 没有索引：锁全表</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span> <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 有索引：只锁匹配的行</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_age <span class="token keyword">ON</span> users<span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span> <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 缩小锁范围</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 锁范围大</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- ... 很多操作 ...</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 锁范围小</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- ... 其他操作 ...</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 立即更新</span></span>
<span class="line"><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 降低隔离级别</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- RR级别有间隙锁，可能导致更多锁等待</span></span>
<span class="line"><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">COMMITTED</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- RC级别没有间隙锁，并发性能更好（但可能幻读）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 分批处理大事务</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ❌ 一次更新100万行</span></span>
<span class="line"><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">WHERE</span> create_time <span class="token operator">&lt;</span> <span class="token string">&#39;2023-01-01&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 分批处理</span></span>
<span class="line"><span class="token keyword">DELIMITER</span> $$</span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> batch_update<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">DECLARE</span> done <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">WHILE</span> done <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">DO</span></span>
<span class="line">        <span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">2</span> </span>
<span class="line">        <span class="token keyword">WHERE</span> create_time <span class="token operator">&lt;</span> <span class="token string">&#39;2023-01-01&#39;</span> </span>
<span class="line">        <span class="token keyword">LIMIT</span> <span class="token number">1000</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">IF</span> ROW_COUNT<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">THEN</span></span>
<span class="line">            <span class="token keyword">SET</span> done <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">-- 休息一下，释放锁</span></span>
<span class="line">        <span class="token keyword">DO</span> SLEEP<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span>$$</span>
<span class="line"><span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. 使用乐观锁</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 乐观锁：使用版本号</span></span>
<span class="line"><span class="token keyword">UPDATE</span> products </span>
<span class="line"><span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> version <span class="token operator">=</span> version <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">AND</span> version <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 如果version不匹配，说明被其他事务修改过</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、本章总结" tabindex="-1"><a class="header-anchor" href="#六、本章总结"><span>六、本章总结</span></a></h2><h3 id="核心要点" tabindex="-1"><a class="header-anchor" href="#核心要点"><span>核心要点</span></a></h3><ol><li><strong>锁的分类</strong>：全局锁、表级锁、行级锁</li><li><strong>锁的模式</strong>：共享锁（S）、排他锁（X）</li><li><strong>表级锁</strong>：表锁、MDL锁、意向锁</li><li><strong>行级锁</strong>：行锁、间隙锁、临键锁</li><li><strong>锁问题</strong>：死锁、锁等待超时</li></ol><h3 id="锁粒度对比" tabindex="-1"><a class="header-anchor" href="#锁粒度对比"><span>锁粒度对比</span></a></h3><table><thead><tr><th>锁类型</th><th>并发性</th><th>开销</th><th>适用场景</th></tr></thead><tbody><tr><td>全局锁</td><td>最差</td><td>最小</td><td>全库备份</td></tr><tr><td>表级锁</td><td>一般</td><td>较小</td><td>MyISAM、DDL</td></tr><tr><td>行级锁</td><td>最好</td><td>最大</td><td>InnoDB OLTP</td></tr></tbody></table><h3 id="优化策略" tabindex="-1"><a class="header-anchor" href="#优化策略"><span>优化策略</span></a></h3><table><thead><tr><th>问题</th><th>解决方案</th></tr></thead><tbody><tr><td>死锁</td><td>按顺序访问、缩短事务、降低隔离级别</td></tr><tr><td>锁等待</td><td>优化索引、缩小锁范围、分批处理</td></tr><tr><td>性能差</td><td>使用行锁、避免长事务、合理用锁</td></tr></tbody></table><hr><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 1. 体验行锁</span></span>
<span class="line"><span class="token comment">-- 会话1</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>  <span class="token comment">-- 等待</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 体验间隙锁</span></span>
<span class="line"><span class="token comment">-- 会话1</span></span>
<span class="line"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token operator">AND</span> id <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 会话2</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;测试&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 等待</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 查看锁信息</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> performance_schema<span class="token punctuation">.</span>data_locks<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> performance_schema<span class="token punctuation">.</span>data_lock_waits<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><strong>恭喜完成MySQL高级篇学习！</strong> 🎉</p>`,167)),a("p",null,[a("strong",null,[s[1]||(s[1]=n("继续学习：",-1)),o(e,{to:"/tutorials/java-backend/mysql/"},{default:c(()=>[...s[0]||(s[0]=[n("返回主目录",-1)])]),_:1})]),s[2]||(s[2]=n(" ←",-1))])])}const v=p(d,[["render",k]]),b=JSON.parse('{"path":"/tutorials/java-backend/mysql/di03zhang-gaojipian/13-suojizhi.html","title":"锁机制","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 本章目录","slug":"📋-本章目录","link":"#📋-本章目录","children":[]},{"level":2,"title":"一、锁概述","slug":"一、锁概述","link":"#一、锁概述","children":[{"level":3,"title":"1.1 什么是锁？","slug":"_1-1-什么是锁","link":"#_1-1-什么是锁","children":[]},{"level":3,"title":"1.2 锁的分类","slug":"_1-2-锁的分类","link":"#_1-2-锁的分类","children":[]},{"level":3,"title":"1.3 锁模式","slug":"_1-3-锁模式","link":"#_1-3-锁模式","children":[]},{"level":3,"title":"1.4 💼 实际工作中什么时候用锁？","slug":"_1-4-💼-实际工作中什么时候用锁","link":"#_1-4-💼-实际工作中什么时候用锁","children":[]}]},{"level":2,"title":"二、全局锁","slug":"二、全局锁","link":"#二、全局锁","children":[{"level":3,"title":"2.1 什么是全局锁？","slug":"_2-1-什么是全局锁","link":"#_2-1-什么是全局锁","children":[]},{"level":3,"title":"2.2 全局锁操作","slug":"_2-2-全局锁操作","link":"#_2-2-全局锁操作","children":[]},{"level":3,"title":"2.3 全局锁的问题","slug":"_2-3-全局锁的问题","link":"#_2-3-全局锁的问题","children":[]},{"level":3,"title":"2.4 InnoDB的一致性备份","slug":"_2-4-innodb的一致性备份","link":"#_2-4-innodb的一致性备份","children":[]}]},{"level":2,"title":"三、表级锁","slug":"三、表级锁","link":"#三、表级锁","children":[{"level":3,"title":"3.1 表锁（Table Lock）","slug":"_3-1-表锁-table-lock","link":"#_3-1-表锁-table-lock","children":[]},{"level":3,"title":"3.2 元数据锁（MDL）","slug":"_3-2-元数据锁-mdl","link":"#_3-2-元数据锁-mdl","children":[]},{"level":3,"title":"3.3 意向锁（Intention Lock）","slug":"_3-3-意向锁-intention-lock","link":"#_3-3-意向锁-intention-lock","children":[]}]},{"level":2,"title":"四、行级锁","slug":"四、行级锁","link":"#四、行级锁","children":[{"level":3,"title":"4.1 行锁（Record Lock）","slug":"_4-1-行锁-record-lock","link":"#_4-1-行锁-record-lock","children":[]},{"level":3,"title":"4.2 间隙锁（Gap Lock）","slug":"_4-2-间隙锁-gap-lock","link":"#_4-2-间隙锁-gap-lock","children":[]},{"level":3,"title":"4.3 临键锁（Next-Key Lock）","slug":"_4-3-临键锁-next-key-lock","link":"#_4-3-临键锁-next-key-lock","children":[]},{"level":3,"title":"4.4 行锁的退化","slug":"_4-4-行锁的退化","link":"#_4-4-行锁的退化","children":[]},{"level":3,"title":"4.5 查看锁信息","slug":"_4-5-查看锁信息","link":"#_4-5-查看锁信息","children":[]}]},{"level":2,"title":"五、锁问题与优化","slug":"五、锁问题与优化","link":"#五、锁问题与优化","children":[{"level":3,"title":"5.1 死锁","slug":"_5-1-死锁","link":"#_5-1-死锁","children":[]},{"level":3,"title":"5.2 锁等待超时","slug":"_5-2-锁等待超时","link":"#_5-2-锁等待超时","children":[]},{"level":3,"title":"5.3 优化建议","slug":"_5-3-优化建议","link":"#_5-3-优化建议","children":[]}]},{"level":2,"title":"六、本章总结","slug":"六、本章总结","link":"#六、本章总结","children":[{"level":3,"title":"核心要点","slug":"核心要点","link":"#核心要点","children":[]},{"level":3,"title":"锁粒度对比","slug":"锁粒度对比","link":"#锁粒度对比","children":[]},{"level":3,"title":"优化策略","slug":"优化策略","link":"#优化策略","children":[]}]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/mysql/第03章-高级篇/13-锁机制.md"}');export{v as comp,b as data};
