import{_ as s,c as a,d as e,o as t}from"./app-B1lgwjy6.js";const p={};function i(l,n){return t(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="自动配置原理" tabindex="-1"><a class="header-anchor" href="#自动配置原理"><span>自动配置原理</span></a></h1><h2 id="一、-springbootapplication解析" tabindex="-1"><a class="header-anchor" href="#一、-springbootapplication解析"><span>一、@SpringBootApplication解析</span></a></h2><h3 id="_1-1-注解组成" tabindex="-1"><a class="header-anchor" href="#_1-1-注解组成"><span>1.1 注解组成</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@SpringBootApplication</span></span>
<span class="line"><span class="token operator">=</span> <span class="token annotation punctuation">@SpringBootConfiguration</span>     <span class="token comment">// 配置类</span></span>
<span class="line"><span class="token operator">+</span> <span class="token annotation punctuation">@EnableAutoConfiguration</span>    <span class="token comment">// 自动配置</span></span>
<span class="line"><span class="token operator">+</span> <span class="token annotation punctuation">@ComponentScan</span>             <span class="token comment">// 组件扫描</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-详细分析" tabindex="-1"><a class="header-anchor" href="#_1-2-详细分析"><span>1.2 详细分析</span></a></h3><p><strong>@SpringBootConfiguration：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SpringBootConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 等价于 @Configuration，标识这是一个配置类</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>@ComponentScan：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 扫描当前包及子包下的组件</span></span>
<span class="line"><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.example.demo&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>@EnableAutoConfiguration：</strong> 核心，实现自动配置</p><hr><h2 id="二、-enableautoconfiguration原理" tabindex="-1"><a class="header-anchor" href="#二、-enableautoconfiguration原理"><span>二、@EnableAutoConfiguration原理</span></a></h2><h3 id="_2-1-源码分析" tabindex="-1"><a class="header-anchor" href="#_2-1-源码分析"><span>2.1 源码分析</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">EnableAutoConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>AutoConfigurationImportSelector</strong> 负责导入自动配置类。</p><h3 id="_2-2-执行流程" tabindex="-1"><a class="header-anchor" href="#_2-2-执行流程"><span>2.2 执行流程</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. Spring Boot 启动</span>
<span class="line">   ↓</span>
<span class="line">2. @EnableAutoConfiguration 生效</span>
<span class="line">   ↓</span>
<span class="line">3. AutoConfigurationImportSelector 执行</span>
<span class="line">   ↓</span>
<span class="line">4. 读取 META-INF/spring.factories</span>
<span class="line">   ↓</span>
<span class="line">5. 加载所有自动配置类</span>
<span class="line">   ↓</span>
<span class="line">6. 根据条件注解(@Conditional)过滤</span>
<span class="line">   ↓</span>
<span class="line">7. 生效的配置类注册到容器</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-spring-factories" tabindex="-1"><a class="header-anchor" href="#_2-3-spring-factories"><span>2.3 spring.factories</span></a></h3><p><strong>位置：</strong> <code>META-INF/spring.factories</code></p><p><strong>内容：</strong></p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span class="token punctuation">=</span><span class="token value attr-value">\\</span>
<span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\</span>
<span class="line">org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,\\</span>
<span class="line">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\</span>
<span class="line">...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>作用：</strong> 定义所有可能的自动配置类。</p><hr><h2 id="三、条件注解" tabindex="-1"><a class="header-anchor" href="#三、条件注解"><span>三、条件注解</span></a></h2><h3 id="_3-1-conditional" tabindex="-1"><a class="header-anchor" href="#_3-1-conditional"><span>3.1 @Conditional</span></a></h3><p><strong>Spring Boot 自动配置的核心：根据条件决定是否生效。</strong></p><h3 id="_3-2-常用条件注解" tabindex="-1"><a class="header-anchor" href="#_3-2-常用条件注解"><span>3.2 常用条件注解</span></a></h3><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@ConditionalOnClass</td><td>类路径存在指定类</td></tr><tr><td>@ConditionalOnMissingClass</td><td>类路径不存在指定类</td></tr><tr><td>@ConditionalOnBean</td><td>容器中存在指定 Bean</td></tr><tr><td>@ConditionalOnMissingBean</td><td>容器中不存在指定 Bean</td></tr><tr><td>@ConditionalOnProperty</td><td>配置文件存在指定属性</td></tr><tr><td>@ConditionalOnResource</td><td>存在指定资源文件</td></tr><tr><td>@ConditionalOnWebApplication</td><td>Web 应用</td></tr><tr><td>@ConditionalOnNotWebApplication</td><td>非 Web 应用</td></tr></tbody></table><h3 id="_3-3-示例" tabindex="-1"><a class="header-anchor" href="#_3-3-示例"><span>3.3 示例</span></a></h3><p><strong>DataSourceAutoConfiguration：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">DataSource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">EmbeddedDatabaseType</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">DataSourceProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSourceAutoConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@ConditionalOnMissingBean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 创建数据源</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解释：</strong></p><ul><li>只有类路径存在 DataSource 类时才生效</li><li>只有容器中不存在 DataSource Bean 时才创建</li></ul><hr><h2 id="四、自动配置源码分析" tabindex="-1"><a class="header-anchor" href="#四、自动配置源码分析"><span>四、自动配置源码分析</span></a></h2><h3 id="_4-1-webmvcautoconfiguration" tabindex="-1"><a class="header-anchor" href="#_4-1-webmvcautoconfiguration"><span>4.1 WebMvcAutoConfiguration</span></a></h3><p><strong>Web MVC 自动配置：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnWebApplication</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">Type</span><span class="token punctuation">.</span><span class="token constant">SERVLET</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Servlet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">WebMvcConfigurationSupport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@AutoConfigureOrder</span><span class="token punctuation">(</span><span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token constant">HIGHEST_PRECEDENCE</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">DispatcherServletAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcAutoConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@ConditionalOnMissingBean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">InternalResourceViewResolver</span> <span class="token function">defaultViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 配置视图解析器</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 其他配置...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-redisautoconfiguration" tabindex="-1"><a class="header-anchor" href="#_4-2-redisautoconfiguration"><span>4.2 RedisAutoConfiguration</span></a></h3><p><strong>Redis 自动配置：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">RedisOperations</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">RedisProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisAutoConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;redisTemplate&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token class-name">RedisConnectionFactory</span> redisConnectionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 创建 RedisTemplate</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、自定义starter" tabindex="-1"><a class="header-anchor" href="#五、自定义starter"><span>五、自定义Starter</span></a></h2><h3 id="_5-1-starter命名规范" tabindex="-1"><a class="header-anchor" href="#_5-1-starter命名规范"><span>5.1 Starter命名规范</span></a></h3><ul><li><strong>官方：</strong> <code>spring-boot-starter-{name}</code></li><li><strong>自定义：</strong> <code>{name}-spring-boot-starter</code></li></ul><h3 id="_5-2-创建自定义starter" tabindex="-1"><a class="header-anchor" href="#_5-2-创建自定义starter"><span>5.2 创建自定义Starter</span></a></h3><p><strong>目标：</strong> 创建一个短信发送 Starter</p><p><strong>1. 创建 Maven 项目</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>sms-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 添加依赖</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 创建配置属性类</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;sms&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsProperties</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKey<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> accessSecret<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> signName<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 创建服务类</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsProperties</span> properties<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SmsService</span><span class="token punctuation">(</span><span class="token class-name">SmsProperties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> properties<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;发送短信到：&quot;</span> <span class="token operator">+</span> phone<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;内容：&quot;</span> <span class="token operator">+</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;签名：&quot;</span> <span class="token operator">+</span> properties<span class="token punctuation">.</span><span class="token function">getSignName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. 创建自动配置类</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">SmsService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">SmsProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsAutoConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@ConditionalOnMissingBean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SmsService</span> <span class="token function">smsService</span><span class="token punctuation">(</span><span class="token class-name">SmsProperties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SmsService</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6. 创建 spring.factories</strong></p><p><strong>META-INF/spring.factories：</strong></p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span class="token punctuation">=</span><span class="token value attr-value">\\</span>
<span class="line">com.example.sms.autoconfigure.SmsAutoConfiguration</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7. 打包</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mvn clean <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-3-使用自定义starter" tabindex="-1"><a class="header-anchor" href="#_5-3-使用自定义starter"><span>5.3 使用自定义Starter</span></a></h3><p><strong>1. 添加依赖</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>sms-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 配置</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">sms</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">access-key</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>key</span>
<span class="line">  <span class="token key atrule">access-secret</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>secret</span>
<span class="line">  <span class="token key atrule">sign-name</span><span class="token punctuation">:</span> 测试签名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 使用</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsController</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SmsService</span> smsService<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/send&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        smsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token string">&quot;13800138000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;验证码：123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、spi机制" tabindex="-1"><a class="header-anchor" href="#六、spi机制"><span>六、SPI机制</span></a></h2><h3 id="_6-1-什么是spi" tabindex="-1"><a class="header-anchor" href="#_6-1-什么是spi"><span>6.1 什么是SPI？</span></a></h3><p><strong>SPI（Service Provider Interface）</strong>：服务提供接口，一种服务发现机制。</p><p><strong>Spring Boot 使用 SPI：</strong></p><ul><li><code>spring.factories</code> 文件</li><li>定义接口和实现的映射关系</li><li>实现可插拔式扩展</li></ul><h3 id="_6-2-spring-factories-loader" tabindex="-1"><a class="header-anchor" href="#_6-2-spring-factories-loader"><span>6.2 Spring Factories Loader</span></a></h3><p><strong>源码：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">SpringFactoriesLoader</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadFactories</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> factoryClass<span class="token punctuation">,</span> </span>
<span class="line">                                           <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 读取所有 META-INF/spring.factories</span></span>
<span class="line">        <span class="token comment">// 加载指定接口的实现类</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、配置优先级" tabindex="-1"><a class="header-anchor" href="#七、配置优先级"><span>七、配置优先级</span></a></h2><h3 id="_7-1-优先级顺序" tabindex="-1"><a class="header-anchor" href="#_7-1-优先级顺序"><span>7.1 优先级顺序</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 命令行参数</span>
<span class="line">2. SPRING_APPLICATION_JSON（环境变量或系统属性中的内联 JSON）</span>
<span class="line">3. ServletConfig 初始化参数</span>
<span class="line">4. ServletContext 初始化参数</span>
<span class="line">5. JNDI 属性</span>
<span class="line">6. Java 系统属性（System.getProperties()）</span>
<span class="line">7. 操作系统环境变量</span>
<span class="line">8. RandomValuePropertySource</span>
<span class="line">9. jar 包外部的 application-{profile}.properties 或 yml</span>
<span class="line">10. jar 包内部的 application-{profile}.properties 或 yml</span>
<span class="line">11. jar 包外部的 application.properties 或 yml</span>
<span class="line">12. jar 包内部的 application.properties 或 yml</span>
<span class="line">13. @Configuration 类上的 @PropertySource</span>
<span class="line">14. 默认属性（SpringApplication.setDefaultProperties）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、总结" tabindex="-1"><a class="header-anchor" href="#八、总结"><span>八、总结</span></a></h2><p>✅ <strong>本章学习内容：</strong></p><ul><li>@SpringBootApplication 解析</li><li>@EnableAutoConfiguration 原理</li><li>条件注解详解</li><li>自动配置源码分析</li><li>自定义 Starter</li><li>SPI 机制</li><li>配置优先级</li></ul><p>✅ <strong>核心要点：</strong></p><ul><li>Spring Boot 通过 @EnableAutoConfiguration 实现自动配置</li><li>自动配置通过条件注解决定是否生效</li><li>spring.factories 定义自动配置类</li><li>自定义 Starter 实现功能扩展</li></ul><p><strong>下一章预告：</strong> 我们将学习 Spring Boot 实战项目。</p>`,89)])])}const c=s(p,[["render",i]]),r=JSON.parse('{"path":"/tutorials/java-backend/springboot/7.zidongpeizhiyuanli.html","title":"自动配置原理","lang":"zh-CN","frontmatter":{"title":"自动配置原理"},"headers":[{"level":2,"title":"一、@SpringBootApplication解析","slug":"一、-springbootapplication解析","link":"#一、-springbootapplication解析","children":[{"level":3,"title":"1.1 注解组成","slug":"_1-1-注解组成","link":"#_1-1-注解组成","children":[]},{"level":3,"title":"1.2 详细分析","slug":"_1-2-详细分析","link":"#_1-2-详细分析","children":[]}]},{"level":2,"title":"二、@EnableAutoConfiguration原理","slug":"二、-enableautoconfiguration原理","link":"#二、-enableautoconfiguration原理","children":[{"level":3,"title":"2.1 源码分析","slug":"_2-1-源码分析","link":"#_2-1-源码分析","children":[]},{"level":3,"title":"2.2 执行流程","slug":"_2-2-执行流程","link":"#_2-2-执行流程","children":[]},{"level":3,"title":"2.3 spring.factories","slug":"_2-3-spring-factories","link":"#_2-3-spring-factories","children":[]}]},{"level":2,"title":"三、条件注解","slug":"三、条件注解","link":"#三、条件注解","children":[{"level":3,"title":"3.1 @Conditional","slug":"_3-1-conditional","link":"#_3-1-conditional","children":[]},{"level":3,"title":"3.2 常用条件注解","slug":"_3-2-常用条件注解","link":"#_3-2-常用条件注解","children":[]},{"level":3,"title":"3.3 示例","slug":"_3-3-示例","link":"#_3-3-示例","children":[]}]},{"level":2,"title":"四、自动配置源码分析","slug":"四、自动配置源码分析","link":"#四、自动配置源码分析","children":[{"level":3,"title":"4.1 WebMvcAutoConfiguration","slug":"_4-1-webmvcautoconfiguration","link":"#_4-1-webmvcautoconfiguration","children":[]},{"level":3,"title":"4.2 RedisAutoConfiguration","slug":"_4-2-redisautoconfiguration","link":"#_4-2-redisautoconfiguration","children":[]}]},{"level":2,"title":"五、自定义Starter","slug":"五、自定义starter","link":"#五、自定义starter","children":[{"level":3,"title":"5.1 Starter命名规范","slug":"_5-1-starter命名规范","link":"#_5-1-starter命名规范","children":[]},{"level":3,"title":"5.2 创建自定义Starter","slug":"_5-2-创建自定义starter","link":"#_5-2-创建自定义starter","children":[]},{"level":3,"title":"5.3 使用自定义Starter","slug":"_5-3-使用自定义starter","link":"#_5-3-使用自定义starter","children":[]}]},{"level":2,"title":"六、SPI机制","slug":"六、spi机制","link":"#六、spi机制","children":[{"level":3,"title":"6.1 什么是SPI？","slug":"_6-1-什么是spi","link":"#_6-1-什么是spi","children":[]},{"level":3,"title":"6.2 Spring Factories Loader","slug":"_6-2-spring-factories-loader","link":"#_6-2-spring-factories-loader","children":[]}]},{"level":2,"title":"七、配置优先级","slug":"七、配置优先级","link":"#七、配置优先级","children":[{"level":3,"title":"7.1 优先级顺序","slug":"_7-1-优先级顺序","link":"#_7-1-优先级顺序","children":[]}]},{"level":2,"title":"八、总结","slug":"八、总结","link":"#八、总结","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/springboot/7.自动配置原理.md"}');export{c as comp,r as data};
