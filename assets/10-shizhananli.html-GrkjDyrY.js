import{_ as p,c as t,d as e,e as o,f as s,b as c,w as l,r as i,o as u}from"./app-B1lgwjy6.js";const r={};function k(d,n){const a=i("RouteLink");return u(),t("div",null,[n[2]||(n[2]=e(`<h1 id="实战案例" tabindex="-1"><a class="header-anchor" href="#实战案例"><span>实战案例</span></a></h1><blockquote><p>通过实战项目巩固NumPy知识</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>应用NumPy解决实际问题</li><li>掌握数据处理技巧</li><li>学会性能优化</li><li>综合运用所学知识</li></ul><h2 id="_1-图像处理" tabindex="-1"><a class="header-anchor" href="#_1-图像处理"><span>1. 图像处理</span></a></h2><h3 id="案例1-图像灰度化" tabindex="-1"><a class="header-anchor" href="#案例1-图像灰度化"><span>案例1：图像灰度化</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 模拟彩色图像（RGB）</span></span>
<span class="line">height<span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span></span>
<span class="line">image_rgb <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 灰度化公式：Gray = 0.299*R + 0.587*G + 0.114*B</span></span>
<span class="line">weights <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.299</span><span class="token punctuation">,</span> <span class="token number">0.587</span><span class="token punctuation">,</span> <span class="token number">0.114</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">image_gray <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>image_rgb<span class="token punctuation">,</span> weights<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;彩色图像形状: </span><span class="token interpolation"><span class="token punctuation">{</span>image_rgb<span class="token punctuation">.</span>shape<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;灰度图像形状: </span><span class="token interpolation"><span class="token punctuation">{</span>image_gray<span class="token punctuation">.</span>shape<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-图像滤波" tabindex="-1"><a class="header-anchor" href="#案例2-图像滤波"><span>案例2：图像滤波</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 均值滤波（3x3）</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">mean_filter</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    h<span class="token punctuation">,</span> w <span class="token operator">=</span> image<span class="token punctuation">.</span>shape</span>
<span class="line">    filtered <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>image<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> h<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> w<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            filtered<span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>image<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span> j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>j<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> filtered</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用卷积实现（更快）</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">mean_filter_fast</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">from</span> scipy<span class="token punctuation">.</span>ndimage <span class="token keyword">import</span> convolve</span>
<span class="line">    kernel <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">9</span></span>
<span class="line">    <span class="token keyword">return</span> convolve<span class="token punctuation">(</span>image<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-数据分析" tabindex="-1"><a class="header-anchor" href="#_2-数据分析"><span>2. 数据分析</span></a></h2><h3 id="案例1-学生成绩分析" tabindex="-1"><a class="header-anchor" href="#案例1-学生成绩分析"><span>案例1：学生成绩分析</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 生成学生成绩数据</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">students <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line">subjects <span class="token operator">=</span> <span class="token number">5</span></span>
<span class="line"></span>
<span class="line">scores <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>students<span class="token punctuation">,</span> subjects<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">scores <span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>scores<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 限制在0-100</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 统计分析</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;=== 成绩统计 ===&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;平均分: </span><span class="token interpolation"><span class="token punctuation">{</span>scores<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;最高分: </span><span class="token interpolation"><span class="token punctuation">{</span>scores<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;最低分: </span><span class="token interpolation"><span class="token punctuation">{</span>scores<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;标准差: </span><span class="token interpolation"><span class="token punctuation">{</span>scores<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 各科平均分</span></span>
<span class="line">subject_means <span class="token operator">=</span> scores<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i<span class="token punctuation">,</span> mean <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>subject_means<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;科目</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">平均分: </span><span class="token interpolation"><span class="token punctuation">{</span>mean<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 每个学生的总分和平均分</span></span>
<span class="line">total_scores <span class="token operator">=</span> scores<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">student_means <span class="token operator">=</span> scores<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 排名</span></span>
<span class="line">rankings <span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>total_scores<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;\\n前5名学生: </span><span class="token interpolation"><span class="token punctuation">{</span>rankings<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token format-spec">5]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;前5名总分: </span><span class="token interpolation"><span class="token punctuation">{</span>total_scores<span class="token punctuation">[</span>rankings<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token format-spec">5]]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 分数段统计</span></span>
<span class="line">bins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span></span>
<span class="line">labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;不及格&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;及格&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;中等&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;良好&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;优秀&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>subjects<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    hist<span class="token punctuation">,</span> _ <span class="token operator">=</span> np<span class="token punctuation">.</span>histogram<span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span>bins<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;\\n科目</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">分数段分布:&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> label<span class="token punctuation">,</span> count <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>labels<span class="token punctuation">,</span> hist<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;  </span><span class="token interpolation"><span class="token punctuation">{</span>label<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">人 (</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token operator">/</span>students<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string">%)&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-时间序列分析" tabindex="-1"><a class="header-anchor" href="#案例2-时间序列分析"><span>案例2：时间序列分析</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 生成股票价格数据</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">days <span class="token operator">=</span> <span class="token number">252</span>  <span class="token comment"># 一年交易日</span></span>
<span class="line">start_price <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 模拟随机游走</span></span>
<span class="line">returns <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> days<span class="token punctuation">)</span></span>
<span class="line">prices <span class="token operator">=</span> start_price <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>np<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span>returns<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算移动平均</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">moving_average</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> window<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    weights <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>window<span class="token punctuation">)</span> <span class="token operator">/</span> window</span>
<span class="line">    <span class="token keyword">return</span> np<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>data<span class="token punctuation">,</span> weights<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;valid&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">ma5 <span class="token operator">=</span> moving_average<span class="token punctuation">(</span>prices<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">ma20 <span class="token operator">=</span> moving_average<span class="token punctuation">(</span>prices<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算波动率</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">volatility</span><span class="token punctuation">(</span>prices<span class="token punctuation">,</span> window<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    returns <span class="token operator">=</span> np<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>prices<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    vol <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        vol<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>returns<span class="token punctuation">[</span>i<span class="token operator">-</span>window<span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">252</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> vol</span>
<span class="line"></span>
<span class="line">vol <span class="token operator">=</span> volatility<span class="token punctuation">(</span>prices<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;期初价格: </span><span class="token interpolation"><span class="token punctuation">{</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;期末价格: </span><span class="token interpolation"><span class="token punctuation">{</span>prices<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;收益率: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">%&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;最大回撤: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prices<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> prices<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>prices<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">%&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-机器学习预处理" tabindex="-1"><a class="header-anchor" href="#_3-机器学习预处理"><span>3. 机器学习预处理</span></a></h2><h3 id="案例1-数据标准化" tabindex="-1"><a class="header-anchor" href="#案例1-数据标准化"><span>案例1：数据标准化</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 生成数据</span></span>
<span class="line">data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Z-score标准化</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">z_score_normalize</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    mean <span class="token operator">=</span> data<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    std <span class="token operator">=</span> data<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>data <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">/</span> std</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Min-Max归一化</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">min_max_normalize</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    min_val <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    max_val <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>data <span class="token operator">-</span> min_val<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>max_val <span class="token operator">-</span> min_val<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># L2归一化</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">l2_normalize</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    norms <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>data<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> data <span class="token operator">/</span> norms</span>
<span class="line"></span>
<span class="line">data_zscore <span class="token operator">=</span> z_score_normalize<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">data_minmax <span class="token operator">=</span> min_max_normalize<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">data_l2 <span class="token operator">=</span> l2_normalize<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;原始数据范围:&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;~&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Z-score后范围:&#39;</span><span class="token punctuation">,</span> data_zscore<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;~&#39;</span><span class="token punctuation">,</span> data_zscore<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Min-Max后范围:&#39;</span><span class="token punctuation">,</span> data_minmax<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;~&#39;</span><span class="token punctuation">,</span> data_minmax<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-特征工程" tabindex="-1"><a class="header-anchor" href="#案例2-特征工程"><span>案例2：特征工程</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 多项式特征</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">polynomial_features</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> degree<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;生成多项式特征&quot;&quot;&quot;</span></span>
<span class="line">    n_samples<span class="token punctuation">,</span> n_features <span class="token operator">=</span> X<span class="token punctuation">.</span>shape</span>
<span class="line">    features <span class="token operator">=</span> <span class="token punctuation">[</span>X<span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> d <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> degree <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        features<span class="token punctuation">.</span>append<span class="token punctuation">(</span>X <span class="token operator">**</span> d<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span>features<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">X <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">X_poly <span class="token operator">=</span> polynomial_features<span class="token punctuation">(</span>X<span class="token punctuation">,</span> degree<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;原始特征:\\n&#39;</span><span class="token punctuation">,</span> X<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;多项式特征:\\n&#39;</span><span class="token punctuation">,</span> X_poly<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 特征选择（方差过滤）</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">variance_threshold</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> threshold<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;移除低方差特征&quot;&quot;&quot;</span></span>
<span class="line">    variances <span class="token operator">=</span> X<span class="token punctuation">.</span>var<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> variances <span class="token operator">&gt;</span> threshold<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-数值计算" tabindex="-1"><a class="header-anchor" href="#_4-数值计算"><span>4. 数值计算</span></a></h2><h3 id="案例1-矩阵运算优化" tabindex="-1"><a class="header-anchor" href="#案例1-矩阵运算优化"><span>案例1：矩阵运算优化</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line">n <span class="token operator">=</span> <span class="token number">1000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式1：使用循环（慢）</span></span>
<span class="line">A <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>n<span class="token punctuation">,</span> n<span class="token punctuation">)</span></span>
<span class="line">B <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>n<span class="token punctuation">,</span> n<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">C <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            C<span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span> <span class="token operator">+=</span> A<span class="token punctuation">[</span>i<span class="token punctuation">,</span> k<span class="token punctuation">]</span> <span class="token operator">*</span> B<span class="token punctuation">[</span>k<span class="token punctuation">,</span> j<span class="token punctuation">]</span></span>
<span class="line">loop_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用NumPy（快）</span></span>
<span class="line">start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">C <span class="token operator">=</span> A @ B</span>
<span class="line">numpy_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start</span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;循环耗时: </span><span class="token interpolation"><span class="token punctuation">{</span>loop_time<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">秒&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;NumPy耗时: </span><span class="token interpolation"><span class="token punctuation">{</span>numpy_time<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">秒&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;加速比: </span><span class="token interpolation"><span class="token punctuation">{</span>loop_time<span class="token operator">/</span>numpy_time<span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string">x&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-求解最小二乘问题" tabindex="-1"><a class="header-anchor" href="#案例2-求解最小二乘问题"><span>案例2：求解最小二乘问题</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 线性回归：y = ax + b</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构造设计矩阵</span></span>
<span class="line">X <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>T</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 求解最小二乘</span></span>
<span class="line">params <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>lstsq<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> rcond<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">a<span class="token punctuation">,</span> b <span class="token operator">=</span> params</span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;拟合结果: y = </span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">x + </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算R²</span></span>
<span class="line">y_pred <span class="token operator">=</span> a <span class="token operator">*</span> x <span class="token operator">+</span> b</span>
<span class="line">ss_res <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">-</span> y_pred<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">ss_tot <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">-</span> y<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">r2 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> ss_res <span class="token operator">/</span> ss_tot</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;R²: </span><span class="token interpolation"><span class="token punctuation">{</span>r2<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-算法实现" tabindex="-1"><a class="header-anchor" href="#_5-算法实现"><span>5. 算法实现</span></a></h2><h3 id="案例1-k-means聚类" tabindex="-1"><a class="header-anchor" href="#案例1-k-means聚类"><span>案例1：K-means聚类</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">kmeans</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> k<span class="token punctuation">,</span> max_iters<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;简单的K-means实现&quot;&quot;&quot;</span></span>
<span class="line">    n_samples <span class="token operator">=</span> X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 随机初始化中心点</span></span>
<span class="line">    indices <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>n_samples<span class="token punctuation">,</span> k<span class="token punctuation">,</span> replace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line">    centers <span class="token operator">=</span> X<span class="token punctuation">[</span>indices<span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_iters<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 分配样本到最近的中心</span></span>
<span class="line">        distances <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>X <span class="token operator">-</span> centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>newaxis<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        labels <span class="token operator">=</span> np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>distances<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 更新中心点</span></span>
<span class="line">        new_centers <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>X<span class="token punctuation">[</span>labels <span class="token operator">==</span> i<span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 检查收敛</span></span>
<span class="line">        <span class="token keyword">if</span> np<span class="token punctuation">.</span>allclose<span class="token punctuation">(</span>centers<span class="token punctuation">,</span> new_centers<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        </span>
<span class="line">        centers <span class="token operator">=</span> new_centers</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> labels<span class="token punctuation">,</span> centers</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">X <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">labels<span class="token punctuation">,</span> centers <span class="token operator">=</span> kmeans<span class="token punctuation">(</span>X<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;聚类中心:\\n&#39;</span><span class="token punctuation">,</span> centers<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-梯度下降" tabindex="-1"><a class="header-anchor" href="#案例2-梯度下降"><span>案例2：梯度下降</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">gradient_descent</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> learning_rate<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;线性回归的梯度下降&quot;&quot;&quot;</span></span>
<span class="line">    n_samples<span class="token punctuation">,</span> n_features <span class="token operator">=</span> X<span class="token punctuation">.</span>shape</span>
<span class="line">    weights <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>n_features<span class="token punctuation">)</span></span>
<span class="line">    bias <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 前向传播</span></span>
<span class="line">        y_pred <span class="token operator">=</span> X @ weights <span class="token operator">+</span> bias</span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 计算梯度</span></span>
<span class="line">        dw <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>n_samples<span class="token punctuation">)</span> <span class="token operator">*</span> X<span class="token punctuation">.</span>T @ <span class="token punctuation">(</span>y_pred <span class="token operator">-</span> y<span class="token punctuation">)</span></span>
<span class="line">        db <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>n_samples<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>y_pred <span class="token operator">-</span> y<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 更新参数</span></span>
<span class="line">        weights <span class="token operator">-=</span> learning_rate <span class="token operator">*</span> dw</span>
<span class="line">        bias <span class="token operator">-=</span> learning_rate <span class="token operator">*</span> db</span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 每100轮打印损失</span></span>
<span class="line">        <span class="token keyword">if</span> epoch <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">            loss <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">(</span>y_pred <span class="token operator">-</span> y<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Epoch </span><span class="token interpolation"><span class="token punctuation">{</span>epoch<span class="token punctuation">}</span></span><span class="token string">, Loss: </span><span class="token interpolation"><span class="token punctuation">{</span>loss<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> weights<span class="token punctuation">,</span> bias</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">X <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">true_weights <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> X @ true_weights <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.1</span></span>
<span class="line"></span>
<span class="line">weights<span class="token punctuation">,</span> bias <span class="token operator">=</span> gradient_descent<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;真实权重:&#39;</span><span class="token punctuation">,</span> true_weights<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;学习权重:&#39;</span><span class="token punctuation">,</span> weights<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-性能优化总结" tabindex="-1"><a class="header-anchor" href="#_6-性能优化总结"><span>6. 性能优化总结</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 1. 使用向量化操作</span></span>
<span class="line">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ❌ 慢</span></span>
<span class="line">result <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> arr<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 快</span></span>
<span class="line">result <span class="token operator">=</span> arr <span class="token operator">**</span> <span class="token number">2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 避免不必要的复制</span></span>
<span class="line">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ❌ 创建副本</span></span>
<span class="line">arr_copy <span class="token operator">=</span> arr<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 使用视图</span></span>
<span class="line">arr_view <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 使用合适的数据类型</span></span>
<span class="line"><span class="token comment"># ❌ 使用float64（8字节）</span></span>
<span class="line">arr_float64 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 使用float32（4字节）</span></span>
<span class="line">arr_float32 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;float64内存: </span><span class="token interpolation"><span class="token punctuation">{</span>arr_float64<span class="token punctuation">.</span>nbytes <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">MB&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;float32内存: </span><span class="token interpolation"><span class="token punctuation">{</span>arr_float32<span class="token punctuation">.</span>nbytes <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">MB&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 预分配数组</span></span>
<span class="line"><span class="token comment"># ❌ 动态增长</span></span>
<span class="line">result <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">,</span> i<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 预分配</span></span>
<span class="line">result <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-总结" tabindex="-1"><a class="header-anchor" href="#💡-总结"><span>💡 总结</span></a></h2><p>通过这些实战案例，我们学习了：</p><ol><li><strong>图像处理</strong> - 灰度化、滤波</li><li><strong>数据分析</strong> - 统计分析、时间序列</li><li><strong>机器学习</strong> - 数据预处理、特征工程</li><li><strong>数值计算</strong> - 矩阵运算、优化算法</li><li><strong>算法实现</strong> - K-means、梯度下降</li><li><strong>性能优化</strong> - 向量化、内存管理</li></ol><h2 id="练习项目" tabindex="-1"><a class="header-anchor" href="#练习项目"><span>练习项目</span></a></h2><ol><li>实现图像的边缘检测（Sobel算子）</li><li>编写一个简单的推荐系统（协同过滤）</li><li>实现PCA降维算法</li><li>开发一个数据清洗工具</li></ol><hr><p><strong>恭喜完成 NumPy 教程！</strong> 🎉</p>`,38)),o("p",null,[n[1]||(n[1]=s("继续学习：",-1)),c(a,{to:"/tutorials/python-ai/pandas/"},{default:l(()=>[...n[0]||(n[0]=[s("Pandas 数据分析",-1)])]),_:1})])])}const v=p(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/python-ai/numpy/10-shizhananli.html","title":"实战案例","lang":"zh-CN","frontmatter":{"title":"实战案例"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. 图像处理","slug":"_1-图像处理","link":"#_1-图像处理","children":[{"level":3,"title":"案例1：图像灰度化","slug":"案例1-图像灰度化","link":"#案例1-图像灰度化","children":[]},{"level":3,"title":"案例2：图像滤波","slug":"案例2-图像滤波","link":"#案例2-图像滤波","children":[]}]},{"level":2,"title":"2. 数据分析","slug":"_2-数据分析","link":"#_2-数据分析","children":[{"level":3,"title":"案例1：学生成绩分析","slug":"案例1-学生成绩分析","link":"#案例1-学生成绩分析","children":[]},{"level":3,"title":"案例2：时间序列分析","slug":"案例2-时间序列分析","link":"#案例2-时间序列分析","children":[]}]},{"level":2,"title":"3. 机器学习预处理","slug":"_3-机器学习预处理","link":"#_3-机器学习预处理","children":[{"level":3,"title":"案例1：数据标准化","slug":"案例1-数据标准化","link":"#案例1-数据标准化","children":[]},{"level":3,"title":"案例2：特征工程","slug":"案例2-特征工程","link":"#案例2-特征工程","children":[]}]},{"level":2,"title":"4. 数值计算","slug":"_4-数值计算","link":"#_4-数值计算","children":[{"level":3,"title":"案例1：矩阵运算优化","slug":"案例1-矩阵运算优化","link":"#案例1-矩阵运算优化","children":[]},{"level":3,"title":"案例2：求解最小二乘问题","slug":"案例2-求解最小二乘问题","link":"#案例2-求解最小二乘问题","children":[]}]},{"level":2,"title":"5. 算法实现","slug":"_5-算法实现","link":"#_5-算法实现","children":[{"level":3,"title":"案例1：K-means聚类","slug":"案例1-k-means聚类","link":"#案例1-k-means聚类","children":[]},{"level":3,"title":"案例2：梯度下降","slug":"案例2-梯度下降","link":"#案例2-梯度下降","children":[]}]},{"level":2,"title":"6. 性能优化总结","slug":"_6-性能优化总结","link":"#_6-性能优化总结","children":[]},{"level":2,"title":"💡 总结","slug":"💡-总结","link":"#💡-总结","children":[]},{"level":2,"title":"练习项目","slug":"练习项目","link":"#练习项目","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/numpy/10-实战案例.md"}');export{v as comp,b as data};
