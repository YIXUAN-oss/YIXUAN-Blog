import{_ as l,c as o,d as c,e as a,f as s,b as t,w as p,r as i,o as d}from"./app-378p-rnH.js";const r={};function u(k,n){const e=i("RouteLink");return d(),o("div",null,[n[7]||(n[7]=c(`<h1 id="java-运算符" tabindex="-1"><a class="header-anchor" href="#java-运算符"><span>Java 运算符</span></a></h1><blockquote><p><strong>本章重点：</strong> 算术运算符、关系运算符、逻辑运算符、位运算符</p><p><strong>面试频率：</strong> ⭐⭐⭐</p></blockquote><hr><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#%E4%B8%80%E8%BF%90%E7%AE%97%E7%AC%A6%E6%A6%82%E8%BF%B0">一、运算符概述</a></li><li><a href="#%E4%BA%8C%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6">二、算术运算符</a></li><li><a href="#%E4%B8%89%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6">三、赋值运算符</a></li><li><a href="#%E5%9B%9B%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6">四、关系运算符</a></li><li><a href="#%E4%BA%94%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6">五、逻辑运算符</a></li><li><a href="#%E5%85%AD%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6">六、三元运算符</a></li><li><a href="#%E4%B8%83%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6">七、位运算符</a></li><li><a href="#%E5%85%AB%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7">八、运算符优先级</a></li><li><a href="#%E4%B9%9D%E6%A0%87%E8%AF%86%E7%AC%A6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">九、标识符命名规范</a></li></ul><hr><h2 id="一、运算符概述" tabindex="-1"><a class="header-anchor" href="#一、运算符概述"><span>一、运算符概述</span></a></h2><p><strong>运算符：</strong> 一种特殊的符号，用以表示数据的运算、赋值和比较等。</p><p><strong>Java 运算符分类：</strong></p><ol><li>算术运算符：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>、<code>++</code>、<code>--</code></li><li>赋值运算符：<code>=</code>、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code></li><li>关系运算符：<code>==</code>、<code>!=</code>、<code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>instanceof</code></li><li>逻辑运算符：<code>&amp;&amp;</code>、<code>||</code>、<code>!</code>、<code>&amp;</code>、<code>|</code>、<code>^</code></li><li>位运算符：<code>&amp;</code>、<code>|</code>、<code>^</code>、<code>~</code>、<code>&lt;&lt;</code>、<code>&gt;&gt;</code>、<code>&gt;&gt;&gt;</code></li><li>三元运算符：<code>? :</code></li></ol><hr><h2 id="二、算术运算符" tabindex="-1"><a class="header-anchor" href="#二、算术运算符"><span>二、算术运算符</span></a></h2><h3 id="_2-1-基本算术运算符" tabindex="-1"><a class="header-anchor" href="#_2-1-基本算术运算符"><span>2.1 基本算术运算符</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法</td><td><code>5 + 3</code></td><td>8</td></tr><tr><td><code>-</code></td><td>减法</td><td><code>5 - 3</code></td><td>2</td></tr><tr><td><code>*</code></td><td>乘法</td><td><code>5 * 3</code></td><td>15</td></tr><tr><td><code>/</code></td><td>除法</td><td><code>5 / 3</code></td><td>1（整数除法）</td></tr><tr><td><code>%</code></td><td>取模（取余）</td><td><code>5 % 3</code></td><td>2</td></tr></tbody></table><h3 id="_2-2-除法运算注意事项" tabindex="-1"><a class="header-anchor" href="#_2-2-除法运算注意事项"><span>2.2 除法运算注意事项</span></a></h3><p><strong>整数除法：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3（舍弃小数部分）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 得到小数结果</span></span>
<span class="line"><span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3.3333333333333335</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>除数不能为0：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>  <span class="token comment">// ArithmeticException: / by zero</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-取模运算" tabindex="-1"><a class="header-anchor" href="#_2-3-取模运算"><span>2.3 取模运算</span></a></h3><p><strong>取模公式：</strong> <code>a % b = a - a / b * b</code></p><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 1</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -1（符号与被除数相同）</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1（符号与被除数相同）</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-自增自减运算符" tabindex="-1"><a class="header-anchor" href="#_2-4-自增自减运算符"><span>2.4 自增自减运算符</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>++</code></td><td>自增</td><td><code>i++</code> 或 <code>++i</code></td></tr><tr><td><code>--</code></td><td>自减</td><td><code>i--</code> 或 <code>--i</code></td></tr></tbody></table><p><strong>前置和后置的区别：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 前置：先自增/自减，再使用</span></span>
<span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token operator">++</span>a<span class="token punctuation">;</span>  <span class="token comment">// a先变成11，再赋值给b</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 11</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 11</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 后置：先使用，再自增/自减</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> d <span class="token operator">=</span> c<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// c的值10先赋值给d，然后c自增为11</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 11</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>独立使用时无区别：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">a<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token comment">// a = 11</span></span>
<span class="line"><span class="token operator">++</span>a<span class="token punctuation">;</span>    <span class="token comment">// a = 12（两者效果相同）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、赋值运算符" tabindex="-1"><a class="header-anchor" href="#三、赋值运算符"><span>三、赋值运算符</span></a></h2><h3 id="_3-1-基本赋值运算符" tabindex="-1"><a class="header-anchor" href="#_3-1-基本赋值运算符"><span>3.1 基本赋值运算符</span></a></h3><p><strong>符号：</strong> <code>=</code></p><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>      <span class="token comment">// 将10赋值给a</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>       <span class="token comment">// 将a的值赋值给b</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>   <span class="token comment">// 从右向左执行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-复合赋值运算符" tabindex="-1"><a class="header-anchor" href="#_3-2-复合赋值运算符"><span>3.2 复合赋值运算符</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>等价于</th></tr></thead><tbody><tr><td><code>+=</code></td><td>加后赋值</td><td><code>a = a + b</code></td></tr><tr><td><code>-=</code></td><td>减后赋值</td><td><code>a = a - b</code></td></tr><tr><td><code>*=</code></td><td>乘后赋值</td><td><code>a = a * b</code></td></tr><tr><td><code>/=</code></td><td>除后赋值</td><td><code>a = a / b</code></td></tr><tr><td><code>%=</code></td><td>取模后赋值</td><td><code>a = a % b</code></td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">a <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>  <span class="token comment">// 等价于 a = a + 5，a = 15</span></span>
<span class="line">a <span class="token operator">-=</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token comment">// 等价于 a = a - 3，a = 12</span></span>
<span class="line">a <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// 等价于 a = a * 2，a = 24</span></span>
<span class="line">a <span class="token operator">/=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token comment">// 等价于 a = a / 4，a = 6</span></span>
<span class="line">a <span class="token operator">%=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token comment">// 等价于 a = a % 4，a = 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 复合赋值运算符会自动进行类型转换</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// b = b + 1;  // ❌ 错误：b + 1 的结果是 int</span></span>
<span class="line">b <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment">// ✅ 正确：自动转换为 byte</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、关系运算符" tabindex="-1"><a class="header-anchor" href="#四、关系运算符"><span>四、关系运算符</span></a></h2><h3 id="_4-1-关系运算符列表" tabindex="-1"><a class="header-anchor" href="#_4-1-关系运算符列表"><span>4.1 关系运算符列表</span></a></h3><table><thead><tr><th>运算符</th><th>说明</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td><code>==</code></td><td>相等</td><td><code>5 == 3</code></td><td>false</td></tr><tr><td><code>!=</code></td><td>不等</td><td><code>5 != 3</code></td><td>true</td></tr><tr><td><code>&gt;</code></td><td>大于</td><td><code>5 &gt; 3</code></td><td>true</td></tr><tr><td><code>&lt;</code></td><td>小于</td><td><code>5 &lt; 3</code></td><td>false</td></tr><tr><td><code>&gt;=</code></td><td>大于等于</td><td><code>5 &gt;= 5</code></td><td>true</td></tr><tr><td><code>&lt;=</code></td><td>小于等于</td><td><code>3 &lt;= 5</code></td><td>true</td></tr><tr><td><code>instanceof</code></td><td>类型判断</td><td><code>&quot;&quot; instanceof String</code></td><td>true</td></tr></tbody></table><h3 id="_4-2-关系运算符特点" tabindex="-1"><a class="header-anchor" href="#_4-2-关系运算符特点"><span>4.2 关系运算符特点</span></a></h3><p><strong>1. 结果都是 boolean 型</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">boolean</span> result <span class="token operator">=</span> a <span class="token operator">&gt;</span> b<span class="token punctuation">;</span>  <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 常用于条件判断和循环</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a 大于 b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    a<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 注意 == 和 = 的区别</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>  <span class="token comment">// ❌ 错误：= 是赋值，不是比较</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token comment">// ✅ 正确：== 是比较</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、逻辑运算符" tabindex="-1"><a class="header-anchor" href="#五、逻辑运算符"><span>五、逻辑运算符</span></a></h2><h3 id="_5-1-逻辑运算符列表" tabindex="-1"><a class="header-anchor" href="#_5-1-逻辑运算符列表"><span>5.1 逻辑运算符列表</span></a></h3><p><strong>用于连接多个条件，结果为 boolean 值。</strong></p><table><thead><tr><th>运算符</th><th>名称</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>&amp;&amp;</code></td><td>短路与</td><td>两个条件都为 true，结果才为 true</td><td><code>a &gt; 0 &amp;&amp; b &gt; 0</code></td></tr><tr><td><code>||</code></td><td>短路或</td><td>有一个条件为 true，结果就为 true</td><td><code>a &gt; 0 || b &gt; 0</code></td></tr><tr><td><code>!</code></td><td>非（取反）</td><td>取反</td><td><code>!(a &gt; 0)</code></td></tr><tr><td><code>&amp;</code></td><td>逻辑与</td><td>两个条件都为 true，结果才为 true</td><td><code>a &gt; 0 &amp; b &gt; 0</code></td></tr><tr><td><code>|</code></td><td>逻辑或</td><td>有一个条件为 true，结果就为 true</td><td><code>a &gt; 0 | b &gt; 0</code></td></tr><tr><td><code>^</code></td><td>异或</td><td>两个条件不同时为 true</td><td><code>a &gt; 0 ^ b &gt; 0</code></td></tr></tbody></table><h3 id="_5-2-短路与-和逻辑与" tabindex="-1"><a class="header-anchor" href="#_5-2-短路与-和逻辑与"><span>5.2 短路与（&amp;&amp;）和逻辑与（&amp;）</span></a></h3><p><strong>真值表：</strong></p><table><thead><tr><th>a</th><th>b</th><th>a &amp;&amp; b</th><th>a &amp; b</th></tr></thead><tbody><tr><td>true</td><td>true</td><td>true</td><td>true</td></tr><tr><td>true</td><td>false</td><td>false</td><td>false</td></tr><tr><td>false</td><td>true</td><td>false</td><td>false</td></tr><tr><td>false</td><td>false</td><td>false</td><td>false</td></tr></tbody></table><p><strong>区别：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 短路与：第一个条件为 false，不再判断第二个条件</span></span>
<span class="line"><span class="token keyword">boolean</span> r1 <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">++</span>b <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 10（b 没有自增）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 逻辑与：无论第一个条件如何，都会判断第二个条件</span></span>
<span class="line"><span class="token keyword">boolean</span> r2 <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">++</span>b <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 11（b 自增了）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结论：</strong></p><ul><li><code>&amp;&amp;</code> 效率高（短路）</li><li>开发中推荐使用 <code>&amp;&amp;</code></li></ul><h3 id="_5-3-短路或-和逻辑或" tabindex="-1"><a class="header-anchor" href="#_5-3-短路或-和逻辑或"><span>5.3 短路或（||）和逻辑或（|）</span></a></h3><p><strong>真值表：</strong></p><table><thead><tr><th>a</th><th>b</th><th>a || b</th><th>a | b</th></tr></thead><tbody><tr><td>true</td><td>true</td><td>true</td><td>true</td></tr><tr><td>true</td><td>false</td><td>true</td><td>true</td></tr><tr><td>false</td><td>true</td><td>true</td><td>true</td></tr><tr><td>false</td><td>false</td><td>false</td><td>false</td></tr></tbody></table><p><strong>区别：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 短路或：第一个条件为 true，不再判断第二个条件</span></span>
<span class="line"><span class="token keyword">boolean</span> r1 <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">++</span>b <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 10（b 没有自增）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 逻辑或：无论第一个条件如何，都会判断第二个条件</span></span>
<span class="line"><span class="token keyword">boolean</span> r2 <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token operator">++</span>b <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 11（b 自增了）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结论：</strong></p><ul><li><code>||</code> 效率高（短路）</li><li>开发中推荐使用 <code>||</code></li></ul><h3 id="_5-4-非运算符" tabindex="-1"><a class="header-anchor" href="#_5-4-非运算符"><span>5.4 非运算符（!）</span></a></h3><p><strong>作用：</strong> 取反</p><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">boolean</span> a <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token operator">!</span>a<span class="token punctuation">;</span>   <span class="token comment">// false</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">boolean</span> isAdult <span class="token operator">=</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">;</span>      <span class="token comment">// true</span></span>
<span class="line"><span class="token keyword">boolean</span> isChild <span class="token operator">=</span> <span class="token operator">!</span>isAdult<span class="token punctuation">;</span>       <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-异或运算符" tabindex="-1"><a class="header-anchor" href="#_5-5-异或运算符"><span>5.5 异或运算符（^）</span></a></h3><p><strong>规则：</strong> 两个条件不同时为 true</p><p><strong>真值表：</strong></p><table><thead><tr><th>a</th><th>b</th><th>a ^ b</th></tr></thead><tbody><tr><td>true</td><td>true</td><td>false</td></tr><tr><td>true</td><td>false</td><td>true</td></tr><tr><td>false</td><td>true</td><td>true</td></tr><tr><td>false</td><td>false</td><td>false</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// true</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// true</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">^</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、三元运算符" tabindex="-1"><a class="header-anchor" href="#六、三元运算符"><span>六、三元运算符</span></a></h2><h3 id="_6-1-语法" tabindex="-1"><a class="header-anchor" href="#_6-1-语法"><span>6.1 语法</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">条件表达式 <span class="token operator">?</span> 表达式<span class="token number">1</span> <span class="token operator">:</span> 表达式<span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>执行流程：</strong></p><ul><li>如果条件表达式为 true，返回表达式1的值</li><li>如果条件表达式为 false，返回表达式2的值</li></ul><h3 id="_6-2-示例" tabindex="-1"><a class="header-anchor" href="#_6-2-示例"><span>6.2 示例</span></a></h3><p><strong>获取两个数的最大值：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> max <span class="token operator">=</span> a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 20</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>判断奇偶：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> result <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;奇数&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 奇数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>等价的 if-else：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> max<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    max <span class="token operator">=</span> a<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    max <span class="token operator">=</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 等价于</span></span>
<span class="line"><span class="token keyword">int</span> max <span class="token operator">=</span> a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、位运算符" tabindex="-1"><a class="header-anchor" href="#七、位运算符"><span>七、位运算符</span></a></h2><h3 id="_7-1-位运算符列表" tabindex="-1"><a class="header-anchor" href="#_7-1-位运算符列表"><span>7.1 位运算符列表</span></a></h3><table><thead><tr><th>运算符</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>&amp;</code></td><td>按位与</td><td>两位都为1，结果为1</td></tr><tr><td><code>|</code></td><td>按位或</td><td>有一位为1，结果为1</td></tr><tr><td><code>^</code></td><td>按位异或</td><td>两位不同，结果为1</td></tr><tr><td><code>~</code></td><td>按位取反</td><td>0变1，1变0</td></tr><tr><td><code>&lt;&lt;</code></td><td>左移</td><td>左移n位，相当于乘以2^n</td></tr><tr><td><code>&gt;&gt;</code></td><td>右移</td><td>右移n位，相当于除以2^n</td></tr><tr><td><code>&gt;&gt;&gt;</code></td><td>无符号右移</td><td>右移，高位补0</td></tr></tbody></table><h3 id="_7-2-位运算示例" tabindex="-1"><a class="header-anchor" href="#_7-2-位运算示例"><span>7.2 位运算示例</span></a></h3><p><strong>按位与（&amp;）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0101</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0011</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">&amp;</span> b<span class="token punctuation">;</span>  <span class="token comment">// 0001 = 1</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>按位或（|）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0101</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0011</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">|</span> b<span class="token punctuation">;</span>  <span class="token comment">// 0111 = 7</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 7</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>按位异或（^）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0101</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0011</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">^</span> b<span class="token punctuation">;</span>  <span class="token comment">// 0110 = 6</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 6</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>按位取反（~）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>   <span class="token comment">// 二进制：0000 0101</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token operator">~</span>a<span class="token punctuation">;</span>  <span class="token comment">// 1111 1010 = -6（补码）</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -6</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-移位运算" tabindex="-1"><a class="header-anchor" href="#_7-3-移位运算"><span>7.3 移位运算</span></a></h3><p><strong>左移（&lt;&lt;）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>      <span class="token comment">// 二进制：0011</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 左移2位：1100 = 12</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 12（相当于 3 * 2^2）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>右移（&gt;&gt;）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>     <span class="token comment">// 二进制：1100</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 右移2位：0011 = 3</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3（相当于 12 / 2^2）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 负数右移，高位补1</span></span>
<span class="line"><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">;</span>     <span class="token comment">// 1111 1000</span></span>
<span class="line"><span class="token keyword">int</span> d <span class="token operator">=</span> c <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 1111 1110 = -2</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>无符号右移（&gt;&gt;&gt;）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">;</span>      <span class="token comment">// 1111 1111 1111 1111 1111 1111 1111 1000</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 0011 1111 1111 1111 1111 1111 1111 1110</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1073741822（高位补0）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 没有 <code>&lt;&lt;&lt;</code> 运算符！</p><hr><h2 id="八、运算符优先级" tabindex="-1"><a class="header-anchor" href="#八、运算符优先级"><span>八、运算符优先级</span></a></h2><h3 id="_8-1-优先级表" tabindex="-1"><a class="header-anchor" href="#_8-1-优先级表"><span>8.1 优先级表</span></a></h3><table><thead><tr><th>优先级</th><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>()</code>, <code>[]</code>, <code>.</code></td><td>括号、数组、成员访问</td></tr><tr><td>2</td><td><code>++</code>, <code>--</code>, <code>!</code>, <code>~</code></td><td>一元运算符</td></tr><tr><td>3</td><td><code>*</code>, <code>/</code>, <code>%</code></td><td>乘除模</td></tr><tr><td>4</td><td><code>+</code>, <code>-</code></td><td>加减</td></tr><tr><td>5</td><td><code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>&gt;&gt;&gt;</code></td><td>移位</td></tr><tr><td>6</td><td><code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>instanceof</code></td><td>关系</td></tr><tr><td>7</td><td><code>==</code>, <code>!=</code></td><td>相等</td></tr><tr><td>8</td><td><code>&amp;</code></td><td>按位与</td></tr><tr><td>9</td><td><code>^</code></td><td>按位异或</td></tr><tr><td>10</td><td><code>|</code></td><td>按位或</td></tr><tr><td>11</td><td><code>&amp;&amp;</code></td><td>逻辑与</td></tr><tr><td>12</td><td><code>||</code></td><td>逻辑或</td></tr><tr><td>13</td><td><code>? :</code></td><td>三元</td></tr><tr><td>14</td><td><code>=</code>, <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code></td><td>赋值</td></tr></tbody></table><h3 id="_8-2-记忆技巧" tabindex="-1"><a class="header-anchor" href="#_8-2-记忆技巧"><span>8.2 记忆技巧</span></a></h3><p><strong>口诀：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">单目乘除为关系，</span>
<span class="line">逻辑三目后赋值</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>建议：</strong> 不确定优先级时，使用小括号明确运算顺序！</p><hr><h2 id="九、标识符命名规范" tabindex="-1"><a class="header-anchor" href="#九、标识符命名规范"><span>九、标识符命名规范</span></a></h2><h3 id="_9-1-命名规则-必须遵守" tabindex="-1"><a class="header-anchor" href="#_9-1-命名规则-必须遵守"><span>9.1 命名规则（必须遵守）</span></a></h3><ol><li>由字母、数字、下划线（_）、美元符号（$）组成</li><li>不能以数字开头</li><li>不能使用关键字和保留字</li><li>区分大小写</li></ol><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// ✅ 合法</span></span>
<span class="line"><span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> _age<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> $age<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> age1<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 非法</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token number">1</span>age<span class="token punctuation">;</span>      <span class="token comment">// 数字开头</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token keyword">class</span><span class="token punctuation">;</span>     <span class="token comment">// 关键字</span></span>
<span class="line"><span class="token keyword">int</span> user<span class="token operator">-</span>name<span class="token punctuation">;</span> <span class="token comment">// 包含非法字符</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-2-命名规范-建议遵守" tabindex="-1"><a class="header-anchor" href="#_9-2-命名规范-建议遵守"><span>9.2 命名规范（建议遵守）</span></a></h3><p><strong>1. 包名：全部小写</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 类名、接口名：大驼峰（每个单词首字母大写）</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">StudentInfo</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 方法名、变量名：小驼峰（第一个单词小写，其他首字母大写）</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> userName<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">calculateTotalScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 常量名：全部大写，单词间用下划线分隔</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAX_VALUE</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14159</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DB_URL</span> <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/test&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. 见名知义</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// ❌ 不好的命名</span></span>
<span class="line"><span class="token keyword">int</span> a<span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> s<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ 好的命名</span></span>
<span class="line"><span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> userName<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">calculateScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📚-快速记忆" tabindex="-1"><a class="header-anchor" href="#📚-快速记忆"><span>📚 快速记忆</span></a></h2><p><strong>1. 运算符分类：</strong></p><ul><li>算术：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>、<code>++</code>、<code>--</code></li><li>关系：<code>==</code>、<code>!=</code>、<code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code></li><li>逻辑：<code>&amp;&amp;</code>、<code>||</code>、<code>!</code>、<code>&amp;</code>、<code>|</code>、<code>^</code></li><li>赋值：<code>=</code>、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code></li><li>三元：<code>? :</code></li></ul><p><strong>2. 注意事项：</strong></p><ul><li>除法：整数相除结果为整数</li><li><code>++i</code> vs <code>i++</code>：前置先自增，后置先使用</li><li><code>&amp;&amp;</code> vs <code>&amp;</code>：短路与效率高（推荐）</li><li><code>||</code> vs <code>|</code>：短路或效率高（推荐）</li></ul><p><strong>3. 优先级：</strong></p><ul><li>括号优先级最高</li><li>单目 &gt; 算术 &gt; 关系 &gt; 逻辑 &gt; 三元 &gt; 赋值</li><li>不确定时使用括号</li></ul><hr>`,149)),a("p",null,[n[1]||(n[1]=a("strong",null,"上一章：",-1)),n[2]||(n[2]=s()),t(e,{to:"/tutorials/java-backend/java/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/02-%E5%8F%98%E9%87%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88%E4%BC%98%E5%8C%96%E7%89%88%EF%BC%89.html"},{default:p(()=>[...n[0]||(n[0]=[s("变量与数据类型",-1)])]),_:1})]),a("p",null,[n[4]||(n[4]=a("strong",null,"下一章：",-1)),n[5]||(n[5]=s()),t(e,{to:"/tutorials/java-backend/java/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/04-%E6%95%B0%E7%BB%84%E6%A6%82%E8%BF%B0.html"},{default:p(()=>[...n[3]||(n[3]=[s("数组",-1)])]),_:1}),n[6]||(n[6]=s(" →",-1))])])}const v=l(r,[["render",u]]),b=JSON.parse('{"path":"/tutorials/java-backend/java/di01zhang-jichurumen/03-yunsuanfu.html","title":"Java 运算符","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"一、运算符概述","slug":"一、运算符概述","link":"#一、运算符概述","children":[]},{"level":2,"title":"二、算术运算符","slug":"二、算术运算符","link":"#二、算术运算符","children":[{"level":3,"title":"2.1 基本算术运算符","slug":"_2-1-基本算术运算符","link":"#_2-1-基本算术运算符","children":[]},{"level":3,"title":"2.2 除法运算注意事项","slug":"_2-2-除法运算注意事项","link":"#_2-2-除法运算注意事项","children":[]},{"level":3,"title":"2.3 取模运算","slug":"_2-3-取模运算","link":"#_2-3-取模运算","children":[]},{"level":3,"title":"2.4 自增自减运算符","slug":"_2-4-自增自减运算符","link":"#_2-4-自增自减运算符","children":[]}]},{"level":2,"title":"三、赋值运算符","slug":"三、赋值运算符","link":"#三、赋值运算符","children":[{"level":3,"title":"3.1 基本赋值运算符","slug":"_3-1-基本赋值运算符","link":"#_3-1-基本赋值运算符","children":[]},{"level":3,"title":"3.2 复合赋值运算符","slug":"_3-2-复合赋值运算符","link":"#_3-2-复合赋值运算符","children":[]}]},{"level":2,"title":"四、关系运算符","slug":"四、关系运算符","link":"#四、关系运算符","children":[{"level":3,"title":"4.1 关系运算符列表","slug":"_4-1-关系运算符列表","link":"#_4-1-关系运算符列表","children":[]},{"level":3,"title":"4.2 关系运算符特点","slug":"_4-2-关系运算符特点","link":"#_4-2-关系运算符特点","children":[]}]},{"level":2,"title":"五、逻辑运算符","slug":"五、逻辑运算符","link":"#五、逻辑运算符","children":[{"level":3,"title":"5.1 逻辑运算符列表","slug":"_5-1-逻辑运算符列表","link":"#_5-1-逻辑运算符列表","children":[]},{"level":3,"title":"5.2 短路与（&&）和逻辑与（&）","slug":"_5-2-短路与-和逻辑与","link":"#_5-2-短路与-和逻辑与","children":[]},{"level":3,"title":"5.3 短路或（||）和逻辑或（|）","slug":"_5-3-短路或-和逻辑或","link":"#_5-3-短路或-和逻辑或","children":[]},{"level":3,"title":"5.4 非运算符（!）","slug":"_5-4-非运算符","link":"#_5-4-非运算符","children":[]},{"level":3,"title":"5.5 异或运算符（^）","slug":"_5-5-异或运算符","link":"#_5-5-异或运算符","children":[]}]},{"level":2,"title":"六、三元运算符","slug":"六、三元运算符","link":"#六、三元运算符","children":[{"level":3,"title":"6.1 语法","slug":"_6-1-语法","link":"#_6-1-语法","children":[]},{"level":3,"title":"6.2 示例","slug":"_6-2-示例","link":"#_6-2-示例","children":[]}]},{"level":2,"title":"七、位运算符","slug":"七、位运算符","link":"#七、位运算符","children":[{"level":3,"title":"7.1 位运算符列表","slug":"_7-1-位运算符列表","link":"#_7-1-位运算符列表","children":[]},{"level":3,"title":"7.2 位运算示例","slug":"_7-2-位运算示例","link":"#_7-2-位运算示例","children":[]},{"level":3,"title":"7.3 移位运算","slug":"_7-3-移位运算","link":"#_7-3-移位运算","children":[]}]},{"level":2,"title":"八、运算符优先级","slug":"八、运算符优先级","link":"#八、运算符优先级","children":[{"level":3,"title":"8.1 优先级表","slug":"_8-1-优先级表","link":"#_8-1-优先级表","children":[]},{"level":3,"title":"8.2 记忆技巧","slug":"_8-2-记忆技巧","link":"#_8-2-记忆技巧","children":[]}]},{"level":2,"title":"九、标识符命名规范","slug":"九、标识符命名规范","link":"#九、标识符命名规范","children":[{"level":3,"title":"9.1 命名规则（必须遵守）","slug":"_9-1-命名规则-必须遵守","link":"#_9-1-命名规则-必须遵守","children":[]},{"level":3,"title":"9.2 命名规范（建议遵守）","slug":"_9-2-命名规范-建议遵守","link":"#_9-2-命名规范-建议遵守","children":[]}]},{"level":2,"title":"📚 快速记忆","slug":"📚-快速记忆","link":"#📚-快速记忆","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/java/第01章-基础入门/03-运算符.md"}');export{v as comp,b as data};
