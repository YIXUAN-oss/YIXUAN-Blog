import{_ as l,c as i,d as t,e as n,f as a,b as r,w as d,r as p,o as c}from"./app-378p-rnH.js";const o={};function u(v,s){const e=p("RouteLink");return c(),i("div",null,[s[3]||(s[3]=t(`<h1 id="_06-redis集群与高可用" tabindex="-1"><a class="header-anchor" href="#_06-redis集群与高可用"><span>06 - Redis集群与高可用</span></a></h1><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>理解Redis主从复制原理</li><li>掌握Redis哨兵模式</li><li>了解Redis Cluster集群</li><li>学会高可用方案选择</li></ul><h2 id="_1️⃣-主从复制" tabindex="-1"><a class="header-anchor" href="#_1️⃣-主从复制"><span>1️⃣ 主从复制</span></a></h2><h3 id="什么是主从复制" tabindex="-1"><a class="header-anchor" href="#什么是主从复制"><span>什么是主从复制？</span></a></h3><p>一个Master节点，多个Slave节点，数据从Master复制到Slave。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Master (写)</span>
<span class="line">  ↓</span>
<span class="line">  ├─ Slave1 (读)</span>
<span class="line">  ├─ Slave2 (读)</span>
<span class="line">  └─ Slave3 (读)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h3><ul><li>📖 <strong>读写分离</strong> - Master写，Slave读</li><li>💾 <strong>数据备份</strong> - 数据冗余</li><li>🚀 <strong>高可用</strong> - Master故障，Slave可升级</li></ul><h3 id="配置主从复制" tabindex="-1"><a class="header-anchor" href="#配置主从复制"><span>配置主从复制</span></a></h3><p><strong>Master配置（无需修改）：</strong></p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line"># redis.conf</span>
<span class="line">bind 0.0.0.0</span>
<span class="line">port 6379</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Slave配置：</strong></p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line"># redis.conf</span>
<span class="line">port 6380</span>
<span class="line">replicaof 127.0.0.1 6379</span>
<span class="line">masterauth password  # 如果Master有密码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>运行时配置：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 连接到Slave</span></span>
<span class="line">redis-cli <span class="token parameter variable">-p</span> <span class="token number">6380</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置为从节点</span></span>
<span class="line">SLAVEOF <span class="token number">127.0</span>.0.1 <span class="token number">6379</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 取消从节点</span></span>
<span class="line">SLAVEOF NO ONE</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="复制原理" tabindex="-1"><a class="header-anchor" href="#复制原理"><span>复制原理</span></a></h3><p><strong>全量同步：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. Slave发送PSYNC命令</span>
<span class="line">2. Master执行BGSAVE生成RDB</span>
<span class="line">3. Master发送RDB文件给Slave</span>
<span class="line">4. Slave加载RDB文件</span>
<span class="line">5. Master发送缓冲区命令给Slave</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>增量同步：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Master写命令 → 复制到Slave</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看复制状态" tabindex="-1"><a class="header-anchor" href="#查看复制状态"><span>查看复制状态</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 在Master上查看</span></span>
<span class="line">INFO replication</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：</span></span>
<span class="line"><span class="token comment"># role:master</span></span>
<span class="line"><span class="token comment"># connected_slaves:2</span></span>
<span class="line"><span class="token comment"># slave0:ip=127.0.0.1,port=6380,state=online</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2️⃣-哨兵模式" tabindex="-1"><a class="header-anchor" href="#_2️⃣-哨兵模式"><span>2️⃣ 哨兵模式</span></a></h2><h3 id="什么是哨兵" tabindex="-1"><a class="header-anchor" href="#什么是哨兵"><span>什么是哨兵？</span></a></h3><p>Sentinel（哨兵）是Redis的高可用解决方案，监控主从节点，自动故障转移。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Sentinel1 ──┐</span>
<span class="line">Sentinel2 ──┼── 监控 → Master</span>
<span class="line">Sentinel3 ──┘              ↓</span>
<span class="line">                        Slave1, Slave2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1"><span>作用</span></a></h3><ul><li>🔍 <strong>监控</strong> - 检查Master和Slave是否正常</li><li>📢 <strong>通知</strong> - 故障时通知管理员</li><li>🔄 <strong>故障转移</strong> - Master故障时，自动选举新Master</li><li>📡 <strong>配置中心</strong> - 客户端连接Sentinel获取Master地址</li></ul><h3 id="哨兵配置" tabindex="-1"><a class="header-anchor" href="#哨兵配置"><span>哨兵配置</span></a></h3><p><strong>sentinel.conf：</strong></p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line"># 哨兵端口</span>
<span class="line">port 26379</span>
<span class="line"></span>
<span class="line"># 监控Master</span>
<span class="line"># sentinel monitor &lt;master-name&gt; &lt;ip&gt; &lt;port&gt; &lt;quorum&gt;</span>
<span class="line">sentinel monitor mymaster 127.0.0.1 6379 2</span>
<span class="line"></span>
<span class="line"># Master密码</span>
<span class="line">sentinel auth-pass mymaster yourpassword</span>
<span class="line"></span>
<span class="line"># 主观下线时间（30秒）</span>
<span class="line">sentinel down-after-milliseconds mymaster 30000</span>
<span class="line"></span>
<span class="line"># 故障转移超时时间</span>
<span class="line">sentinel failover-timeout mymaster 180000</span>
<span class="line"></span>
<span class="line"># 同时进行复制的Slave数量</span>
<span class="line">sentinel parallel-syncs mymaster 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>启动哨兵：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">redis-sentinel sentinel.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="故障转移流程" tabindex="-1"><a class="header-anchor" href="#故障转移流程"><span>故障转移流程</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 主观下线：单个Sentinel认为Master下线</span>
<span class="line">2. 客观下线：多个Sentinel（≥quorum）确认下线</span>
<span class="line">3. 选举Leader：Sentinel选举出Leader</span>
<span class="line">4. 故障转移：Leader执行转移</span>
<span class="line">   - 选择一个Slave升级为Master</span>
<span class="line">   - 其他Slave改为复制新Master</span>
<span class="line">   - 通知客户端新Master地址</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spring-boot整合" tabindex="-1"><a class="header-anchor" href="#spring-boot整合"><span>Spring Boot整合</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">redis</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">sentinel</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">master</span><span class="token punctuation">:</span> mymaster</span>
<span class="line">      <span class="token key atrule">nodes</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">26379</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">26380</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">26381</span></span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> yourpassword</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3️⃣-redis-cluster" tabindex="-1"><a class="header-anchor" href="#_3️⃣-redis-cluster"><span>3️⃣ Redis Cluster</span></a></h2><h3 id="什么是redis-cluster" tabindex="-1"><a class="header-anchor" href="#什么是redis-cluster"><span>什么是Redis Cluster？</span></a></h3><p>Redis官方的分布式解决方案，数据自动分片，支持高可用。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Node1 (0-5460)</span>
<span class="line">Node2 (5461-10922)</span>
<span class="line">Node3 (10923-16383)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ul><li>🔢 <strong>数据分片</strong> - 16384个哈希槽</li><li>🌐 <strong>去中心化</strong> - 无需代理，节点间通信</li><li>🔄 <strong>高可用</strong> - 主从复制，自动故障转移</li><li>🚀 <strong>可扩展</strong> - 动态添加/删除节点</li></ul><h3 id="集群搭建" tabindex="-1"><a class="header-anchor" href="#集群搭建"><span>集群搭建</span></a></h3><p><strong>节点配置：</strong></p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line"># redis-6379.conf</span>
<span class="line">port 6379</span>
<span class="line">cluster-enabled yes</span>
<span class="line">cluster-config-file nodes-6379.conf</span>
<span class="line">cluster-node-timeout 15000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>创建集群：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建6节点集群（3主3从）</span></span>
<span class="line">redis-cli <span class="token parameter variable">--cluster</span> create <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token number">127.0</span>.0.1:6379 <span class="token number">127.0</span>.0.1:6380 <span class="token number">127.0</span>.0.1:6381 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token number">127.0</span>.0.1:6382 <span class="token number">127.0</span>.0.1:6383 <span class="token number">127.0</span>.0.1:6384 <span class="token punctuation">\\</span></span>
<span class="line">  --cluster-replicas <span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据分片原理" tabindex="-1"><a class="header-anchor" href="#数据分片原理"><span>数据分片原理</span></a></h3><p><strong>槽位计算：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">HASH_SLOT = CRC16(key) % 16384</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>示例：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># key &quot;user:1001&quot; 计算槽位</span></span>
<span class="line">CRC16<span class="token punctuation">(</span><span class="token string">&quot;user:1001&quot;</span><span class="token punctuation">)</span> % <span class="token number">16384</span> <span class="token operator">=</span> <span class="token number">5460</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 存储到负责5460槽位的节点</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="集群操作" tabindex="-1"><a class="header-anchor" href="#集群操作"><span>集群操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 查看集群信息</span></span>
<span class="line">redis-cli <span class="token parameter variable">--cluster</span> check <span class="token number">127.0</span>.0.1:6379</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 添加节点</span></span>
<span class="line">redis-cli <span class="token parameter variable">--cluster</span> add-node <span class="token number">127.0</span>.0.1:6385 <span class="token number">127.0</span>.0.1:6379</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重新分片</span></span>
<span class="line">redis-cli <span class="token parameter variable">--cluster</span> reshard <span class="token number">127.0</span>.0.1:6379</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除节点</span></span>
<span class="line">redis-cli <span class="token parameter variable">--cluster</span> del-node <span class="token number">127.0</span>.0.1:6379 <span class="token operator">&lt;</span>node-id<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spring-boot整合-1" tabindex="-1"><a class="header-anchor" href="#spring-boot整合-1"><span>Spring Boot整合</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">redis</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">cluster</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">nodes</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6379</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6380</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6381</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6382</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6383</span></span>
<span class="line">        <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6384</span></span>
<span class="line">      <span class="token key atrule">max-redirects</span><span class="token punctuation">:</span> <span class="token number">3</span></span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> yourpassword</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-方案对比" tabindex="-1"><a class="header-anchor" href="#📊-方案对比"><span>📊 方案对比</span></a></h2><table><thead><tr><th>特性</th><th>主从复制</th><th>哨兵模式</th><th>Cluster</th></tr></thead><tbody><tr><td>高可用</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>自动故障转移</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>数据分片</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>横向扩展</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>配置复杂度</td><td>低</td><td>中</td><td>高</td></tr><tr><td>适用场景</td><td>读多写少</td><td>高可用</td><td>大数据量</td></tr></tbody></table><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><ol><li><strong>小规模</strong> - 主从复制 + 哨兵</li><li><strong>大规模</strong> - Redis Cluster</li><li><strong>定期备份</strong> - RDB + AOF</li><li><strong>监控告警</strong> - 实时监控集群状态</li><li><strong>合理分片</strong> - 避免热点数据</li></ol><hr>`,63)),n("p",null,[s[1]||(s[1]=n("strong",null,"Redis教程完结！",-1)),s[2]||(s[2]=a(" 继续学习 → ",-1)),r(e,{to:"/tutorials/java-backend/mybatis/"},{default:d(()=>[...s[0]||(s[0]=[a("MyBatis框架",-1)])]),_:1})])])}const b=l(o,[["render",u]]),h=JSON.parse('{"path":"/tutorials/java-backend/redis/06-Redisjiqunyugaokeyong.html","title":"Redis集群与高可用","lang":"zh-CN","frontmatter":{"title":"Redis集群与高可用"},"headers":[{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"1️⃣ 主从复制","slug":"_1️⃣-主从复制","link":"#_1️⃣-主从复制","children":[{"level":3,"title":"什么是主从复制？","slug":"什么是主从复制","link":"#什么是主从复制","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"配置主从复制","slug":"配置主从复制","link":"#配置主从复制","children":[]},{"level":3,"title":"复制原理","slug":"复制原理","link":"#复制原理","children":[]},{"level":3,"title":"查看复制状态","slug":"查看复制状态","link":"#查看复制状态","children":[]}]},{"level":2,"title":"2️⃣ 哨兵模式","slug":"_2️⃣-哨兵模式","link":"#_2️⃣-哨兵模式","children":[{"level":3,"title":"什么是哨兵？","slug":"什么是哨兵","link":"#什么是哨兵","children":[]},{"level":3,"title":"作用","slug":"作用-1","link":"#作用-1","children":[]},{"level":3,"title":"哨兵配置","slug":"哨兵配置","link":"#哨兵配置","children":[]},{"level":3,"title":"故障转移流程","slug":"故障转移流程","link":"#故障转移流程","children":[]},{"level":3,"title":"Spring Boot整合","slug":"spring-boot整合","link":"#spring-boot整合","children":[]}]},{"level":2,"title":"3️⃣ Redis Cluster","slug":"_3️⃣-redis-cluster","link":"#_3️⃣-redis-cluster","children":[{"level":3,"title":"什么是Redis Cluster？","slug":"什么是redis-cluster","link":"#什么是redis-cluster","children":[]},{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"集群搭建","slug":"集群搭建","link":"#集群搭建","children":[]},{"level":3,"title":"数据分片原理","slug":"数据分片原理","link":"#数据分片原理","children":[]},{"level":3,"title":"集群操作","slug":"集群操作","link":"#集群操作","children":[]},{"level":3,"title":"Spring Boot整合","slug":"spring-boot整合-1","link":"#spring-boot整合-1","children":[]}]},{"level":2,"title":"📊 方案对比","slug":"📊-方案对比","link":"#📊-方案对比","children":[]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/redis/06-Redis集群与高可用.md"}');export{b as comp,h as data};
