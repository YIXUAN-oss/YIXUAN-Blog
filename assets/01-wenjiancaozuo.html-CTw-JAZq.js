import{_ as t,c as e,d as l,e as s,f as a,b as i,w as c,r as o,o as u}from"./app-378p-rnH.js";const r={};function k(d,n){const p=o("RouteLink");return u(),e("div",null,[n[3]||(n[3]=l(`<h1 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作"><span>文件操作</span></a></h1><blockquote><p>掌握Python文件的读写操作，处理文本和二进制文件</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>理解文件操作的基本概念</li><li>掌握文件的打开、读取和写入</li><li>学会使用with语句管理文件</li><li>掌握文件路径操作</li><li>学习处理不同格式的文件</li></ul><h2 id="_1-文件的基本操作" tabindex="-1"><a class="header-anchor" href="#_1-文件的基本操作"><span>1. 文件的基本操作</span></a></h2><h3 id="_1-1-打开文件" tabindex="-1"><a class="header-anchor" href="#_1-1-打开文件"><span>1.1 打开文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 基本语法</span></span>
<span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mode&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 常用模式</span></span>
<span class="line"><span class="token comment"># &#39;r&#39;  - 只读（默认）</span></span>
<span class="line"><span class="token comment"># &#39;w&#39;  - 写入（会覆盖原文件）</span></span>
<span class="line"><span class="token comment"># &#39;a&#39;  - 追加</span></span>
<span class="line"><span class="token comment"># &#39;r+&#39; - 读写</span></span>
<span class="line"><span class="token comment"># &#39;b&#39;  - 二进制模式</span></span>
<span class="line"><span class="token comment"># &#39;t&#39;  - 文本模式（默认）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例</span></span>
<span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-关闭文件" tabindex="-1"><a class="header-anchor" href="#_1-2-关闭文件"><span>1.2 关闭文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 方式1：手动关闭</span></span>
<span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span></span>
<span class="line">content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 必须关闭！</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：使用 with 语句（推荐）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 自动关闭文件，即使发生异常</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-文件读取" tabindex="-1"><a class="header-anchor" href="#_2-文件读取"><span>2. 文件读取</span></a></h2><h3 id="_2-1-read-读取全部内容" tabindex="-1"><a class="header-anchor" href="#_2-1-read-读取全部内容"><span>2.1 read() - 读取全部内容</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 读取整个文件</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取指定字节数</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 读取前10个字符</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-readline-读取一行" tabindex="-1"><a class="header-anchor" href="#_2-2-readline-读取一行"><span>2.2 readline() - 读取一行</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    line1 <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 读取第一行</span></span>
<span class="line">    line2 <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 读取第二行</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>line1<span class="token punctuation">,</span> line2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-readlines-读取所有行" tabindex="-1"><a class="header-anchor" href="#_2-3-readlines-读取所有行"><span>2.3 readlines() - 读取所有行</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 返回列表</span></span>
<span class="line">    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># strip() 去除换行符</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-循环读取-推荐" tabindex="-1"><a class="header-anchor" href="#_2-4-循环读取-推荐"><span>2.4 循环读取（推荐）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 内存友好的方式</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-文件写入" tabindex="-1"><a class="header-anchor" href="#_3-文件写入"><span>3. 文件写入</span></a></h2><h3 id="_3-1-write-写入字符串" tabindex="-1"><a class="header-anchor" href="#_3-1-write-写入字符串"><span>3.1 write() - 写入字符串</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 写入模式（覆盖）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Hello, Python!\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;这是第二行\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 追加模式</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;追加的内容\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-writelines-写入多行" tabindex="-1"><a class="header-anchor" href="#_3-2-writelines-写入多行"><span>3.2 writelines() - 写入多行</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;第一行\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;第二行\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;第三行\\n&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>lines<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-实用示例-文件复制" tabindex="-1"><a class="header-anchor" href="#_3-3-实用示例-文件复制"><span>3.3 实用示例：文件复制</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 文本文件复制</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;source.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> source<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;target.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> target<span class="token punctuation">:</span></span>
<span class="line">        content <span class="token operator">=</span> source<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        target<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 逐行复制（大文件）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;source.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> source<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;target.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> target<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> line <span class="token keyword">in</span> source<span class="token punctuation">:</span></span>
<span class="line">            target<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-二进制文件操作" tabindex="-1"><a class="header-anchor" href="#_4-二进制文件操作"><span>4. 二进制文件操作</span></a></h2><h3 id="_4-1-读写二进制文件" tabindex="-1"><a class="header-anchor" href="#_4-1-读写二进制文件"><span>4.1 读写二进制文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 读取二进制文件（图片、音频等）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;文件大小: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> 字节&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入二进制文件</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;copy_image.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-文件复制-二进制" tabindex="-1"><a class="header-anchor" href="#_4-2-文件复制-二进制"><span>4.2 文件复制（二进制）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">copy_file</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;复制任意类型文件&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> src<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> dst<span class="token punctuation">:</span></span>
<span class="line">            dst<span class="token punctuation">.</span>write<span class="token punctuation">(</span>src<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">copy_file<span class="token punctuation">(</span><span class="token string">&#39;original.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;backup.jpg&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-文件路径操作" tabindex="-1"><a class="header-anchor" href="#_5-文件路径操作"><span>5. 文件路径操作</span></a></h2><h3 id="_5-1-os-模块" tabindex="-1"><a class="header-anchor" href="#_5-1-os-模块"><span>5.1 os 模块</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取当前工作目录</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 改变工作目录</span></span>
<span class="line">os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token string">&#39;/path/to/directory&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 列出目录内容</span></span>
<span class="line">files <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建目录</span></span>
<span class="line">os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">&#39;new_folder&#39;</span><span class="token punctuation">)</span></span>
<span class="line">os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string">&#39;parent/child/grandchild&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 创建多级目录</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除目录</span></span>
<span class="line">os<span class="token punctuation">.</span>rmdir<span class="token punctuation">(</span><span class="token string">&#39;empty_folder&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 只能删除空目录</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重命名</span></span>
<span class="line">os<span class="token punctuation">.</span>rename<span class="token punctuation">(</span><span class="token string">&#39;old_name.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;new_name.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除文件</span></span>
<span class="line">os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查路径是否存在</span></span>
<span class="line"><span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;文件存在&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 判断是文件还是目录</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span><span class="token string">&#39;folder&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取文件大小</span></span>
<span class="line">size <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>getsize<span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;文件大小: </span><span class="token interpolation"><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span><span class="token string"> 字节&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-os-path-模块" tabindex="-1"><a class="header-anchor" href="#_5-2-os-path-模块"><span>5.2 os.path 模块</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> os<span class="token punctuation">.</span>path</span>
<span class="line"></span>
<span class="line">path <span class="token operator">=</span> <span class="token string">&#39;/home/user/documents/file.txt&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 路径拼接</span></span>
<span class="line">new_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;folder&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;subfolder&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 分离路径和文件名</span></span>
<span class="line">dir_name<span class="token punctuation">,</span> file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>path<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;目录: </span><span class="token interpolation"><span class="token punctuation">{</span>dir_name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;文件名: </span><span class="token interpolation"><span class="token punctuation">{</span>file_name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 分离文件名和扩展名</span></span>
<span class="line">name<span class="token punctuation">,</span> ext <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span><span class="token string">&#39;document.pdf&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;名称: </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">, 扩展名: </span><span class="token interpolation"><span class="token punctuation">{</span>ext<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取绝对路径</span></span>
<span class="line">abs_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取文件所在目录</span></span>
<span class="line">dir_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span><span class="token string">&#39;/path/to/file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取文件名</span></span>
<span class="line">file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span><span class="token string">&#39;/path/to/file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-pathlib-模块-推荐" tabindex="-1"><a class="header-anchor" href="#_5-3-pathlib-模块-推荐"><span>5.3 pathlib 模块（推荐）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建路径对象</span></span>
<span class="line">p <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">&#39;folder/subfolder/file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 路径拼接</span></span>
<span class="line">path <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">&#39;folder&#39;</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token string">&#39;subfolder&#39;</span> <span class="token operator">/</span> <span class="token string">&#39;file.txt&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取当前目录</span></span>
<span class="line">current <span class="token operator">=</span> Path<span class="token punctuation">.</span>cwd<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取家目录</span></span>
<span class="line">home <span class="token operator">=</span> Path<span class="token punctuation">.</span>home<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建目录</span></span>
<span class="line">Path<span class="token punctuation">(</span><span class="token string">&#39;new_folder&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">Path<span class="token punctuation">(</span><span class="token string">&#39;parent/child&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>parents<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读写文件</span></span>
<span class="line">path <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line">path<span class="token punctuation">.</span>write_text<span class="token punctuation">(</span><span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line">content <span class="token operator">=</span> path<span class="token punctuation">.</span>read_text<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查文件是否存在</span></span>
<span class="line"><span class="token keyword">if</span> path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;文件存在&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 判断是文件还是目录</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>is_file<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>is_dir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取文件信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;文件名: </span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;扩展名: </span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">.</span>suffix<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;不含扩展名: </span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">.</span>stem<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;父目录: </span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">.</span>parent<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 遍历目录</span></span>
<span class="line"><span class="token keyword">for</span> item <span class="token keyword">in</span> Path<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>iterdir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> item<span class="token punctuation">.</span>is_file<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;文件: </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 递归查找文件</span></span>
<span class="line"><span class="token keyword">for</span> txt_file <span class="token keyword">in</span> Path<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rglob<span class="token punctuation">(</span><span class="token string">&#39;*.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>txt_file<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-处理特殊格式文件" tabindex="-1"><a class="header-anchor" href="#_6-处理特殊格式文件"><span>6. 处理特殊格式文件</span></a></h2><h3 id="_6-1-csv-文件" tabindex="-1"><a class="header-anchor" href="#_6-1-csv-文件"><span>6.1 CSV 文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> csv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取 CSV</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入 CSV</span></span>
<span class="line">data <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;城市&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;25&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;北京&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;30&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;上海&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">    writer<span class="token punctuation">.</span>writerows<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用字典读写</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    fieldnames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;城市&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span>f<span class="token punctuation">,</span> fieldnames<span class="token operator">=</span>fieldnames<span class="token punctuation">)</span></span>
<span class="line">    writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;28&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;城市&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-json-文件" tabindex="-1"><a class="header-anchor" href="#_6-2-json-文件"><span>6.2 JSON 文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> json</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取 JSON</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    data <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 写入 JSON</span></span>
<span class="line">data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;skills&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Java&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Go&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span> f<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># JSON 字符串转换</span></span>
<span class="line">json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">data_dict <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-文本文件编码处理" tabindex="-1"><a class="header-anchor" href="#_6-3-文本文件编码处理"><span>6.3 文本文件编码处理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 读取不同编码的文件</span></span>
<span class="line">encodings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gbk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gb2312&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> encoding <span class="token keyword">in</span> encodings<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span>encoding<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">            content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;成功使用 </span><span class="token interpolation"><span class="token punctuation">{</span>encoding<span class="token punctuation">}</span></span><span class="token string"> 编码读取&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">    <span class="token keyword">except</span> UnicodeDecodeError<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">continue</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 转换文件编码</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">convert_encoding</span><span class="token punctuation">(</span>input_file<span class="token punctuation">,</span> output_file<span class="token punctuation">,</span> from_enc<span class="token punctuation">,</span> to_enc<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>input_file<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span>from_enc<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>output_file<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span>to_enc<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">convert_encoding<span class="token punctuation">(</span><span class="token string">&#39;gbk_file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8_file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gbk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-实战案例" tabindex="-1"><a class="header-anchor" href="#_7-实战案例"><span>7. 实战案例</span></a></h2><h3 id="案例1-统计文件行数和字数" tabindex="-1"><a class="header-anchor" href="#案例1-统计文件行数和字数"><span>案例1：统计文件行数和字数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">count_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;统计文件的行数和字数&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        line_count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span></span>
<span class="line">        word_count <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">)</span></span>
<span class="line">        char_count <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;行数: </span><span class="token interpolation"><span class="token punctuation">{</span>line_count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;单词数: </span><span class="token interpolation"><span class="token punctuation">{</span>word_count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;字符数: </span><span class="token interpolation"><span class="token punctuation">{</span>char_count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">count_file<span class="token punctuation">(</span><span class="token string">&#39;document.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-批量重命名文件" tabindex="-1"><a class="header-anchor" href="#案例2-批量重命名文件"><span>案例2：批量重命名文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">batch_rename</span><span class="token punctuation">(</span>directory<span class="token punctuation">,</span> old_ext<span class="token punctuation">,</span> new_ext<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;批量修改文件扩展名&quot;&quot;&quot;</span></span>
<span class="line">    path <span class="token operator">=</span> Path<span class="token punctuation">(</span>directory<span class="token punctuation">)</span></span>
<span class="line">    count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> path<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;*.</span><span class="token interpolation"><span class="token punctuation">{</span>old_ext<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        new_name <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>stem <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f&#39;.</span><span class="token interpolation"><span class="token punctuation">{</span>new_ext<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span></span>
<span class="line">        <span class="token builtin">file</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>parent <span class="token operator">/</span> new_name<span class="token punctuation">)</span></span>
<span class="line">        count <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;重命名: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">file</span><span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>new_name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;共重命名 </span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string"> 个文件&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">batch_rename<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;md&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例3-文件内容查找" tabindex="-1"><a class="header-anchor" href="#案例3-文件内容查找"><span>案例3：文件内容查找</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">search_in_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> keyword<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;在文件中搜索关键词&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> line_num<span class="token punctuation">,</span> line <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">if</span> keyword <span class="token keyword">in</span> line<span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;第 </span><span class="token interpolation"><span class="token punctuation">{</span>line_num<span class="token punctuation">}</span></span><span class="token string"> 行: </span><span class="token interpolation"><span class="token punctuation">{</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">search_in_file<span class="token punctuation">(</span><span class="token string">&#39;log.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ERROR&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例4-日志文件分析" tabindex="-1"><a class="header-anchor" href="#案例4-日志文件分析"><span>案例4：日志文件分析</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter</span>
<span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">analyze_log</span><span class="token punctuation">(</span>log_file<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;分析日志文件&quot;&quot;&quot;</span></span>
<span class="line">    levels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>log_file<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token string">&#39;ERROR&#39;</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span></span>
<span class="line">                levels<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;ERROR&#39;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">elif</span> <span class="token string">&#39;WARNING&#39;</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span></span>
<span class="line">                levels<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;WARNING&#39;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">elif</span> <span class="token string">&#39;INFO&#39;</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span></span>
<span class="line">                levels<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;INFO&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 统计各级别数量</span></span>
<span class="line">    counter <span class="token operator">=</span> Counter<span class="token punctuation">(</span>levels<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;日志级别统计:&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> level<span class="token punctuation">,</span> count <span class="token keyword">in</span> counter<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>level<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">analyze_log<span class="token punctuation">(</span><span class="token string">&#39;app.log&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-常见问题" tabindex="-1"><a class="header-anchor" href="#_8-常见问题"><span>8. 常见问题</span></a></h2><h3 id="_8-1-文件未关闭" tabindex="-1"><a class="header-anchor" href="#_8-1-文件未关闭"><span>8.1 文件未关闭</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 错误示例</span></span>
<span class="line">f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span></span>
<span class="line">content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 忘记关闭文件</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 正确示例</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 自动关闭</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-编码问题" tabindex="-1"><a class="header-anchor" href="#_8-2-编码问题"><span>8.2 编码问题</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 可能出错</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>  <span class="token comment"># 使用默认编码</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 明确指定编码</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-3-路径问题" tabindex="-1"><a class="header-anchor" href="#_8-3-路径问题"><span>8.3 路径问题</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 硬编码路径</span></span>
<span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;C:\\\\Users\\\\user\\\\file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 使用 pathlib</span></span>
<span class="line"><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path</span>
<span class="line">file_path <span class="token operator">=</span> Path<span class="token punctuation">.</span>home<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token string">&#39;documents&#39;</span> <span class="token operator">/</span> <span class="token string">&#39;file.txt&#39;</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><ol><li><strong>始终使用 with 语句</strong> - 自动管理文件资源</li><li><strong>明确指定编码</strong> - 避免编码问题</li><li><strong>使用 pathlib</strong> - 跨平台路径处理</li><li><strong>大文件逐行读取</strong> - 避免内存溢出</li><li><strong>异常处理</strong> - 处理文件不存在等异常情况</li></ol><h2 id="📝-练习题" tabindex="-1"><a class="header-anchor" href="#📝-练习题"><span>📝 练习题</span></a></h2><ol><li>编写程序，读取一个文本文件，统计每个单词出现的次数</li><li>实现一个文件备份工具，定期备份指定文件夹</li><li>编写程序，合并多个文本文件的内容</li><li>实现一个简单的日志记录器，将日志写入文件</li><li>编写程序，将 CSV 文件转换为 JSON 格式</li></ol><hr>`,65)),s("p",null,[n[1]||(n[1]=s("strong",null,"下一节：",-1)),n[2]||(n[2]=a()),i(p,{to:"/tutorials/python-ai/python/%E7%AC%AC03%E7%AB%A0-%E8%BF%9B%E9%98%B6%E7%BC%96%E7%A8%8B/02-%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8.html"},{default:c(()=>[...n[0]||(n[0]=[a("迭代器与生成器",-1)])]),_:1})])])}const m=t(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di03zhang-jinjiebiancheng/01-wenjiancaozuo.html","title":"文件操作","lang":"zh-CN","frontmatter":{"title":"文件操作"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. 文件的基本操作","slug":"_1-文件的基本操作","link":"#_1-文件的基本操作","children":[{"level":3,"title":"1.1 打开文件","slug":"_1-1-打开文件","link":"#_1-1-打开文件","children":[]},{"level":3,"title":"1.2 关闭文件","slug":"_1-2-关闭文件","link":"#_1-2-关闭文件","children":[]}]},{"level":2,"title":"2. 文件读取","slug":"_2-文件读取","link":"#_2-文件读取","children":[{"level":3,"title":"2.1 read() - 读取全部内容","slug":"_2-1-read-读取全部内容","link":"#_2-1-read-读取全部内容","children":[]},{"level":3,"title":"2.2 readline() - 读取一行","slug":"_2-2-readline-读取一行","link":"#_2-2-readline-读取一行","children":[]},{"level":3,"title":"2.3 readlines() - 读取所有行","slug":"_2-3-readlines-读取所有行","link":"#_2-3-readlines-读取所有行","children":[]},{"level":3,"title":"2.4 循环读取（推荐）","slug":"_2-4-循环读取-推荐","link":"#_2-4-循环读取-推荐","children":[]}]},{"level":2,"title":"3. 文件写入","slug":"_3-文件写入","link":"#_3-文件写入","children":[{"level":3,"title":"3.1 write() - 写入字符串","slug":"_3-1-write-写入字符串","link":"#_3-1-write-写入字符串","children":[]},{"level":3,"title":"3.2 writelines() - 写入多行","slug":"_3-2-writelines-写入多行","link":"#_3-2-writelines-写入多行","children":[]},{"level":3,"title":"3.3 实用示例：文件复制","slug":"_3-3-实用示例-文件复制","link":"#_3-3-实用示例-文件复制","children":[]}]},{"level":2,"title":"4. 二进制文件操作","slug":"_4-二进制文件操作","link":"#_4-二进制文件操作","children":[{"level":3,"title":"4.1 读写二进制文件","slug":"_4-1-读写二进制文件","link":"#_4-1-读写二进制文件","children":[]},{"level":3,"title":"4.2 文件复制（二进制）","slug":"_4-2-文件复制-二进制","link":"#_4-2-文件复制-二进制","children":[]}]},{"level":2,"title":"5. 文件路径操作","slug":"_5-文件路径操作","link":"#_5-文件路径操作","children":[{"level":3,"title":"5.1 os 模块","slug":"_5-1-os-模块","link":"#_5-1-os-模块","children":[]},{"level":3,"title":"5.2 os.path 模块","slug":"_5-2-os-path-模块","link":"#_5-2-os-path-模块","children":[]},{"level":3,"title":"5.3 pathlib 模块（推荐）","slug":"_5-3-pathlib-模块-推荐","link":"#_5-3-pathlib-模块-推荐","children":[]}]},{"level":2,"title":"6. 处理特殊格式文件","slug":"_6-处理特殊格式文件","link":"#_6-处理特殊格式文件","children":[{"level":3,"title":"6.1 CSV 文件","slug":"_6-1-csv-文件","link":"#_6-1-csv-文件","children":[]},{"level":3,"title":"6.2 JSON 文件","slug":"_6-2-json-文件","link":"#_6-2-json-文件","children":[]},{"level":3,"title":"6.3 文本文件编码处理","slug":"_6-3-文本文件编码处理","link":"#_6-3-文本文件编码处理","children":[]}]},{"level":2,"title":"7. 实战案例","slug":"_7-实战案例","link":"#_7-实战案例","children":[{"level":3,"title":"案例1：统计文件行数和字数","slug":"案例1-统计文件行数和字数","link":"#案例1-统计文件行数和字数","children":[]},{"level":3,"title":"案例2：批量重命名文件","slug":"案例2-批量重命名文件","link":"#案例2-批量重命名文件","children":[]},{"level":3,"title":"案例3：文件内容查找","slug":"案例3-文件内容查找","link":"#案例3-文件内容查找","children":[]},{"level":3,"title":"案例4：日志文件分析","slug":"案例4-日志文件分析","link":"#案例4-日志文件分析","children":[]}]},{"level":2,"title":"8. 常见问题","slug":"_8-常见问题","link":"#_8-常见问题","children":[{"level":3,"title":"8.1 文件未关闭","slug":"_8-1-文件未关闭","link":"#_8-1-文件未关闭","children":[]},{"level":3,"title":"8.2 编码问题","slug":"_8-2-编码问题","link":"#_8-2-编码问题","children":[]},{"level":3,"title":"8.3 路径问题","slug":"_8-3-路径问题","link":"#_8-3-路径问题","children":[]}]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[]},{"level":2,"title":"📝 练习题","slug":"📝-练习题","link":"#📝-练习题","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第03章-进阶编程/01-文件操作.md"}');export{m as comp,b as data};
