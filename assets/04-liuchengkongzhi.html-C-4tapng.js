import{_ as t,c as i,d as o,e as a,f as s,b as p,w as l,r as c,o as r}from"./app-DnBTedau.js";const u={};function d(k,n){const e=c("RouteLink");return r(),i("div",null,[n[8]||(n[8]=o(`<h1 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制"><span>流程控制</span></a></h1><h2 id="一、if条件语句" tabindex="-1"><a class="header-anchor" href="#一、if条件语句"><span>一、if条件语句</span></a></h2><h3 id="_1-基本if语句" tabindex="-1"><a class="header-anchor" href="#_1-基本if语句"><span>1. 基本if语句</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">19</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我已经成年了&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;即将步入大学生活&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;时间过的真快呀&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> Python使用缩进来表示代码块，通常使用4个空格。</p><hr><h3 id="_2-if-else语句" tabindex="-1"><a class="header-anchor" href="#_2-if-else语句"><span>2. if-else语句</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;欢迎来到黑马儿童游乐场，儿童免费，成人收费。&quot;</span><span class="token punctuation">)</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的年龄:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;您已成年，游玩需要补票10元。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;您未成年，可以免费游玩。&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;祝您游玩愉快。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-if-elif-else语句" tabindex="-1"><a class="header-anchor" href="#_3-if-elif-else语句"><span>3. if-elif-else语句</span></a></h3><p>每个条件之间互斥，只会执行第一个满足条件的分支。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;欢迎来到动物园。&quot;</span><span class="token punctuation">)</span></span>
<span class="line">height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的身高(cm):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">vip_level <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的vip级别(1~5):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">day <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入今天的日期(1~30):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> height <span class="token operator">&lt;</span> <span class="token number">120</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;您的身高小于120CM，可以免费游玩。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> vip_level <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;您的vip级别大于3，可以免费游玩。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> day <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;今天是1号免费日，可以免费游玩。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不好意思，所有条件都不满足，需要购票10元。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-嵌套if语句" tabindex="-1"><a class="header-anchor" href="#_4-嵌套if语句"><span>4. 嵌套if语句</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 成绩等级判定</span></span>
<span class="line">score <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入成绩(0-100)：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> score <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">:</span></span>
<span class="line">        grade <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;优秀&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">80</span><span class="token punctuation">:</span></span>
<span class="line">        grade <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;良好&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">70</span><span class="token punctuation">:</span></span>
<span class="line">        grade <span class="token operator">=</span> <span class="token string">&#39;C&#39;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;中等&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span></span>
<span class="line">        grade <span class="token operator">=</span> <span class="token string">&#39;D&#39;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;及格&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        grade <span class="token operator">=</span> <span class="token string">&#39;F&#39;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不及格&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;成绩：</span><span class="token interpolation"><span class="token punctuation">{</span>score<span class="token punctuation">}</span></span><span class="token string">，等级：</span><span class="token interpolation"><span class="token punctuation">{</span>grade<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;成绩无效！&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、while循环" tabindex="-1"><a class="header-anchor" href="#二、while循环"><span>二、while循环</span></a></h2><h3 id="_1-基本while循环" tabindex="-1"><a class="header-anchor" href="#_1-基本while循环"><span>1. 基本while循环</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">i <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"><span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line">    i <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;i的值是：&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-while循环应用" tabindex="-1"><a class="header-anchor" href="#_2-while循环应用"><span>2. while循环应用</span></a></h3><h4 id="示例1-猜数字游戏" tabindex="-1"><a class="header-anchor" href="#示例1-猜数字游戏"><span>示例1：猜数字游戏</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 获取范围在1-100的随机数字</span></span>
<span class="line"><span class="token keyword">import</span> random</span>
<span class="line">num <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义一个变量，记录总共猜测了多少次</span></span>
<span class="line">count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过一个布尔类型的变量，作为循环是否继续的标记</span></span>
<span class="line">flag <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> flag<span class="token punctuation">:</span></span>
<span class="line">    guess_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你猜测的数字:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    count <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> guess_num <span class="token operator">==</span> num<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;猜中了&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># 设置为False就是终止循环的条件</span></span>
<span class="line">        flag <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> guess_num <span class="token operator">&gt;</span> num<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你猜的大了&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你猜的小了&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            </span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;你总共猜测了</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">次&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-嵌套while循环" tabindex="-1"><a class="header-anchor" href="#_3-嵌套while循环"><span>3. 嵌套while循环</span></a></h3><h4 id="示例-九九乘法表" tabindex="-1"><a class="header-anchor" href="#示例-九九乘法表"><span>示例：九九乘法表</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 定义外层循环</span></span>
<span class="line">i <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 定义内层循环</span></span>
<span class="line">    j <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>j <span class="token operator">*</span> i<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;\\t&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        j <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 换行</span></span>
<span class="line">    i <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1 * 1 = 1	</span>
<span class="line">1 * 2 = 2	2 * 2 = 4	</span>
<span class="line">1 * 3 = 3	2 * 3 = 6	3 * 3 = 9	</span>
<span class="line">...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> <code>print(&quot;hello&quot;, end=&quot;&quot;)</code> 表示不换行输出。</p><hr><h2 id="三、for循环" tabindex="-1"><a class="header-anchor" href="#三、for循环"><span>三、for循环</span></a></h2><h3 id="_1-基本for循环" tabindex="-1"><a class="header-anchor" href="#_1-基本for循环"><span>1. 基本for循环</span></a></h3><p>for循环用于遍历序列（如字符串、列表、元组等）。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 遍历字符串</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;yixuan&quot;</span></span>
<span class="line"><span class="token keyword">for</span> char <span class="token keyword">in</span> name<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-range-函数" tabindex="-1"><a class="header-anchor" href="#_2-range-函数"><span>2. range()函数</span></a></h3><p>for循环语句，本质上是遍历序列类型。通过<code>range()</code>函数可以获得一个数字序列。</p><h4 id="语法1-range-num" tabindex="-1"><a class="header-anchor" href="#语法1-range-num"><span>语法1：range(num)</span></a></h4><p>获取一个从0开始，到num结束的数字序列（不含num本身）</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 演示 range(num)</span></span>
<span class="line"><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 输出 0 到 9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="语法2-range-num1-num2" tabindex="-1"><a class="header-anchor" href="#语法2-range-num1-num2"><span>语法2：range(num1, num2)</span></a></h4><p>获得一个从num1开始，到num2结束的数字序列（不含num2本身）</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 演示 range(num1, num2)</span></span>
<span class="line"><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 输出 1 到 9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="语法3-range-num1-num2-step" tabindex="-1"><a class="header-anchor" href="#语法3-range-num1-num2-step"><span>语法3：range(num1, num2, step)</span></a></h4><p>获得一个从num1开始，到num2结束的数字序列（不含num2本身），数字之间的步长以step为准</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 演示 range(num1, num2, step)</span></span>
<span class="line"><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 输出 1, 3, 5, 7, 9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-for循环应用" tabindex="-1"><a class="header-anchor" href="#_3-for循环应用"><span>3. for循环应用</span></a></h3><h4 id="示例1-累加求和" tabindex="-1"><a class="header-anchor" href="#示例1-累加求和"><span>示例1：累加求和</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 计算1到100的和</span></span>
<span class="line">total <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    total <span class="token operator">+=</span> i</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;1到100的和是：</span><span class="token interpolation"><span class="token punctuation">{</span>total<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="示例2-遍历列表" tabindex="-1"><a class="header-anchor" href="#示例2-遍历列表"><span>示例2：遍历列表</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;orange&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> fruit <span class="token keyword">in</span> fruits<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我喜欢吃</span><span class="token interpolation"><span class="token punctuation">{</span>fruit<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、循环控制语句" tabindex="-1"><a class="header-anchor" href="#四、循环控制语句"><span>四、循环控制语句</span></a></h2><h3 id="_1-break语句" tabindex="-1"><a class="header-anchor" href="#_1-break语句"><span>1. break语句</span></a></h3><p><code>break</code>用于跳出整个循环。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 找到第一个能被7整除的数</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">7</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;第一个能被7整除的数是：</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-continue语句" tabindex="-1"><a class="header-anchor" href="#_2-continue语句"><span>2. continue语句</span></a></h3><p><code>continue</code>用于跳过本次循环，继续下一次循环。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 输出1到10之间的奇数</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">continue</span>  <span class="token comment"># 跳过偶数</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-break和continue的区别" tabindex="-1"><a class="header-anchor" href="#_3-break和continue的区别"><span>3. break和continue的区别</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># break示例</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;=== break示例 ===&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 输出：1 2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># continue示例</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;=== continue示例 ===&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">continue</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 输出：1 2 4 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、while-vs-for" tabindex="-1"><a class="header-anchor" href="#五、while-vs-for"><span>五、while vs for</span></a></h2><h3 id="_1-区别对比" tabindex="-1"><a class="header-anchor" href="#_1-区别对比"><span>1. 区别对比</span></a></h3><p><strong>在循环控制上:</strong></p><ul><li>while循环可以自定循环条件，并自行控制</li><li>for循环不可以自定循环条件，只可以一个个从容器内取出数据</li></ul><p><strong>在无限循环上:</strong></p><ul><li>while循环可以通过条件控制做到无限循环</li><li>for循环理论上不可以，因为被遍历的容器容量不是无限的</li></ul><p><strong>在使用场景上:</strong></p><ul><li>while循环适用于任何想要循环的场景</li><li>for循环适用于遍历数据容器的场景或简单的固定次数循环场景</li></ul><hr><h2 id="六、实战练习" tabindex="-1"><a class="header-anchor" href="#六、实战练习"><span>六、实战练习</span></a></h2><h3 id="练习1-打印图案" tabindex="-1"><a class="header-anchor" href="#练习1-打印图案"><span>练习1：打印图案</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 打印直角三角形</span></span>
<span class="line">n <span class="token operator">=</span> <span class="token number">5</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：</span></span>
<span class="line"><span class="token comment"># *</span></span>
<span class="line"><span class="token comment"># **</span></span>
<span class="line"><span class="token comment"># ***</span></span>
<span class="line"><span class="token comment"># ****</span></span>
<span class="line"><span class="token comment"># *****</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-水仙花数" tabindex="-1"><a class="header-anchor" href="#练习2-水仙花数"><span>练习2：水仙花数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 找出所有的水仙花数（三位数，各位数字立方和等于该数本身）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;水仙花数有：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 获取个位、十位、百位</span></span>
<span class="line">    a <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span></span>
<span class="line">    b <span class="token operator">=</span> num <span class="token operator">//</span> <span class="token number">10</span> <span class="token operator">%</span> <span class="token number">10</span></span>
<span class="line">    c <span class="token operator">=</span> num <span class="token operator">//</span> <span class="token number">100</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 判断是否为水仙花数</span></span>
<span class="line">    <span class="token keyword">if</span> a<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">+</span> b<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">+</span> c<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">==</span> num<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：153, 370, 371, 407</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习3-斐波那契数列" tabindex="-1"><a class="header-anchor" href="#练习3-斐波那契数列"><span>练习3：斐波那契数列</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 输出斐波那契数列的前20项</span></span>
<span class="line">a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span></span>
<span class="line">count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a <span class="token operator">+</span> b</span>
<span class="line">    count <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：0 1 1 2 3 5 8 13 21 34 55 89 144 ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、知识点总结" tabindex="-1"><a class="header-anchor" href="#七、知识点总结"><span>七、知识点总结</span></a></h2><h3 id="✅-核心要点" tabindex="-1"><a class="header-anchor" href="#✅-核心要点"><span>✅ 核心要点</span></a></h3><ol><li><strong>if语句</strong>：用于条件判断</li><li><strong>while循环</strong>：条件循环，适合不确定次数的循环</li><li><strong>for循环</strong>：遍历循环，适合遍历序列</li><li><strong>break</strong>：跳出整个循环</li><li><strong>continue</strong>：跳过本次循环</li></ol><h3 id="📝-面试重点" tabindex="-1"><a class="header-anchor" href="#📝-面试重点"><span>📝 面试重点</span></a></h3><ul><li>if-elif-else的执行顺序</li><li>while和for的区别</li><li>break和continue的区别</li><li>range()函数的三种用法</li></ul><hr>`,89)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),p(e,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/03-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"},{default:l(()=>[...n[0]||(n[0]=[s("运算符与表达式",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),p(e,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/05-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C.html"},{default:l(()=>[...n[1]||(n[1]=[s("字符串操作",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const v=t(u,[["render",d]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di01zhang-jichubiancheng/04-liuchengkongzhi.html","title":"流程控制","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、if条件语句","slug":"一、if条件语句","link":"#一、if条件语句","children":[{"level":3,"title":"1. 基本if语句","slug":"_1-基本if语句","link":"#_1-基本if语句","children":[]},{"level":3,"title":"2. if-else语句","slug":"_2-if-else语句","link":"#_2-if-else语句","children":[]},{"level":3,"title":"3. if-elif-else语句","slug":"_3-if-elif-else语句","link":"#_3-if-elif-else语句","children":[]},{"level":3,"title":"4. 嵌套if语句","slug":"_4-嵌套if语句","link":"#_4-嵌套if语句","children":[]}]},{"level":2,"title":"二、while循环","slug":"二、while循环","link":"#二、while循环","children":[{"level":3,"title":"1. 基本while循环","slug":"_1-基本while循环","link":"#_1-基本while循环","children":[]},{"level":3,"title":"2. while循环应用","slug":"_2-while循环应用","link":"#_2-while循环应用","children":[]},{"level":3,"title":"3. 嵌套while循环","slug":"_3-嵌套while循环","link":"#_3-嵌套while循环","children":[]}]},{"level":2,"title":"三、for循环","slug":"三、for循环","link":"#三、for循环","children":[{"level":3,"title":"1. 基本for循环","slug":"_1-基本for循环","link":"#_1-基本for循环","children":[]},{"level":3,"title":"2. range()函数","slug":"_2-range-函数","link":"#_2-range-函数","children":[]},{"level":3,"title":"3. for循环应用","slug":"_3-for循环应用","link":"#_3-for循环应用","children":[]}]},{"level":2,"title":"四、循环控制语句","slug":"四、循环控制语句","link":"#四、循环控制语句","children":[{"level":3,"title":"1. break语句","slug":"_1-break语句","link":"#_1-break语句","children":[]},{"level":3,"title":"2. continue语句","slug":"_2-continue语句","link":"#_2-continue语句","children":[]},{"level":3,"title":"3. break和continue的区别","slug":"_3-break和continue的区别","link":"#_3-break和continue的区别","children":[]}]},{"level":2,"title":"五、while vs for","slug":"五、while-vs-for","link":"#五、while-vs-for","children":[{"level":3,"title":"1. 区别对比","slug":"_1-区别对比","link":"#_1-区别对比","children":[]}]},{"level":2,"title":"六、实战练习","slug":"六、实战练习","link":"#六、实战练习","children":[{"level":3,"title":"练习1：打印图案","slug":"练习1-打印图案","link":"#练习1-打印图案","children":[]},{"level":3,"title":"练习2：水仙花数","slug":"练习2-水仙花数","link":"#练习2-水仙花数","children":[]},{"level":3,"title":"练习3：斐波那契数列","slug":"练习3-斐波那契数列","link":"#练习3-斐波那契数列","children":[]}]},{"level":2,"title":"七、知识点总结","slug":"七、知识点总结","link":"#七、知识点总结","children":[{"level":3,"title":"✅ 核心要点","slug":"✅-核心要点","link":"#✅-核心要点","children":[]},{"level":3,"title":"📝 面试重点","slug":"📝-面试重点","link":"#📝-面试重点","children":[]}]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第01章-基础编程/04-流程控制.md"}');export{v as comp,b as data};
