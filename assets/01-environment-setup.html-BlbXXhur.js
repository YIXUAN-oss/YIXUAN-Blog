import{_ as c,c as o,d as i,e as s,f as a,b as e,w as d,r as t,o as r}from"./app-B1lgwjy6.js";const u={},v={href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.jetbrains.com/pycharm/download/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.python.org/zh-cn/3/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://pip.pypa.io/en/stable/user_guide/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.python.org/zh-cn/3/library/venv.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://plugins.jetbrains.com/plugin/631-python",target:"_blank",rel:"noopener noreferrer"};function g(x,n){const l=t("ExternalLinkIcon"),p=t("RouteLink");return r(),o("div",null,[n[14]||(n[14]=i(`<h1 id="python-环境搭建" tabindex="-1"><a class="header-anchor" href="#python-环境搭建"><span>Python 环境搭建</span></a></h1><blockquote><p>为 Java 开发者准备的 Python 开发环境配置指南</p></blockquote><h2 id="📖-本文概述" tabindex="-1"><a class="header-anchor" href="#📖-本文概述"><span>📖 本文概述</span></a></h2><p>作为 Java 开发者，你已经熟悉了 JDK、Maven/Gradle、IDEA 等工具。Python 的开发环境设置同样简单，本文将帮你快速搭建 Python 开发环境。</p><hr><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>✅ 安装 Python 解释器</li><li>✅ 配置环境变量</li><li>✅ 安装包管理工具（pip）</li><li>✅ 配置 IDE（IntelliJ IDEA / PyCharm）</li><li>✅ 创建和管理虚拟环境</li><li>✅ 运行第一个 Python 程序</li></ul><hr><h2 id="🛠️-python-vs-java-环境对比" tabindex="-1"><a class="header-anchor" href="#🛠️-python-vs-java-环境对比"><span>🛠️ Python vs Java 环境对比</span></a></h2><table><thead><tr><th>环境组件</th><th>Java</th><th>Python</th></tr></thead><tbody><tr><td><strong>运行时</strong></td><td>JDK (Java Development Kit)</td><td>Python 解释器</td></tr><tr><td><strong>包管理</strong></td><td>Maven / Gradle</td><td>pip / conda</td></tr><tr><td><strong>项目依赖</strong></td><td>pom.xml / build.gradle</td><td>requirements.txt / pyproject.toml</td></tr><tr><td><strong>虚拟环境</strong></td><td>不需要（JDK 全局）</td><td>venv / virtualenv (推荐)</td></tr><tr><td><strong>IDE</strong></td><td>IntelliJ IDEA / Eclipse</td><td>PyCharm / IntelliJ + Plugin</td></tr></tbody></table><hr><h2 id="📦-安装-python" tabindex="-1"><a class="header-anchor" href="#📦-安装-python"><span>📦 安装 Python</span></a></h2><h3 id="windows-系统" tabindex="-1"><a class="header-anchor" href="#windows-系统"><span>Windows 系统</span></a></h3><h4 id="方法-1-使用-winget-推荐" tabindex="-1"><a class="header-anchor" href="#方法-1-使用-winget-推荐"><span>方法 1：使用 winget (推荐)</span></a></h4><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token comment"># 安装 Python 3.12</span></span>
<span class="line">winget install Python<span class="token punctuation">.</span>Python<span class="token punctuation">.</span>3<span class="token punctuation">.</span>12</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 验证安装</span></span>
<span class="line">python <span class="token operator">--</span>version</span>
<span class="line"><span class="token comment"># 输出: Python 3.12.x</span></span>
<span class="line"></span>
<span class="line">pip <span class="token operator">--</span>version</span>
<span class="line"><span class="token comment"># 输出: pip 24.x.x</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法-2-从官网下载" tabindex="-1"><a class="header-anchor" href="#方法-2-从官网下载"><span>方法 2：从官网下载</span></a></h4>`,16)),s("ol",null,[s("li",null,[n[1]||(n[1]=a("访问 ",-1)),s("a",v,[n[0]||(n[0]=a("https://www.python.org/downloads/",-1)),e(l)])]),n[2]||(n[2]=s("li",null,"下载 Python 3.10+ 版本",-1)),n[3]||(n[3]=s("li",null,[s("strong",null,"重要："),a(' 勾选 "Add Python to PATH"')],-1)),n[4]||(n[4]=s("li",null,'选择 "Install Now"',-1))]),n[15]||(n[15]=i(`<h3 id="macos-系统" tabindex="-1"><a class="header-anchor" href="#macos-系统"><span>macOS 系统</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用 Homebrew</span></span>
<span class="line">brew <span class="token function">install</span> python@3.12</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 验证</span></span>
<span class="line">python3 <span class="token parameter variable">--version</span></span>
<span class="line">pip3 <span class="token parameter variable">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="linux-系统" tabindex="-1"><a class="header-anchor" href="#linux-系统"><span>Linux 系统</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Ubuntu/Debian</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> update</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3.12 python3-pip</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Fedora/RHEL</span></span>
<span class="line"><span class="token function">sudo</span> dnf <span class="token function">install</span> python3.12 python3-pip</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 验证</span></span>
<span class="line">python3 <span class="token parameter variable">--version</span></span>
<span class="line">pip3 <span class="token parameter variable">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🔧-配置-ide" tabindex="-1"><a class="header-anchor" href="#🔧-配置-ide"><span>🔧 配置 IDE</span></a></h2><h3 id="选项-1-intellij-idea-推荐给-java-开发者" tabindex="-1"><a class="header-anchor" href="#选项-1-intellij-idea-推荐给-java-开发者"><span>选项 1：IntelliJ IDEA (推荐给 Java 开发者)</span></a></h3><p><strong>优点：</strong> 熟悉的界面，Java + Python 都能用</p><h4 id="安装-python-插件" tabindex="-1"><a class="header-anchor" href="#安装-python-插件"><span>安装 Python 插件</span></a></h4><ol><li>打开 IntelliJ IDEA</li><li><code>File</code> → <code>Settings</code> → <code>Plugins</code></li><li>搜索 &quot;Python&quot;</li><li>安装 &quot;Python&quot; 插件</li><li>重启 IDEA</li></ol><h4 id="配置-python-解释器" tabindex="-1"><a class="header-anchor" href="#配置-python-解释器"><span>配置 Python 解释器</span></a></h4><ol><li><code>File</code> → <code>Project Structure</code> → <code>SDKs</code></li><li>点击 <code>+</code> → <code>Add Python SDK</code></li><li>选择系统安装的 Python 路径</li><li>应用配置</li></ol><h4 id="创建-python-项目" tabindex="-1"><a class="header-anchor" href="#创建-python-项目"><span>创建 Python 项目</span></a></h4><ol><li><code>File</code> → <code>New</code> → <code>Project</code></li><li>选择 &quot;Python&quot;</li><li>配置项目名称和位置</li><li>选择 Python 解释器</li><li>创建项目</li></ol><h3 id="选项-2-pycharm-python-专业-ide" tabindex="-1"><a class="header-anchor" href="#选项-2-pycharm-python-专业-ide"><span>选项 2：PyCharm (Python 专业 IDE)</span></a></h3><p><strong>优点：</strong> 功能最强大的 Python IDE</p><h4 id="下载安装" tabindex="-1"><a class="header-anchor" href="#下载安装"><span>下载安装</span></a></h4>`,17)),s("ul",null,[s("li",null,[s("a",h,[n[5]||(n[5]=a("PyCharm Community (免费)",-1)),e(l)])]),n[6]||(n[6]=s("li",null,"或使用 PyCharm Professional (付费，更多功能)",-1))]),n[16]||(n[16]=i(`<h4 id="配置类似-intellij-idea" tabindex="-1"><a class="header-anchor" href="#配置类似-intellij-idea"><span>配置类似 IntelliJ IDEA</span></a></h4><hr><h2 id="📦-包管理-pip" tabindex="-1"><a class="header-anchor" href="#📦-包管理-pip"><span>📦 包管理：pip</span></a></h2><h3 id="pip-是什么" tabindex="-1"><a class="header-anchor" href="#pip-是什么"><span>pip 是什么？</span></a></h3><blockquote><p>pip 相当于 Java 的 Maven/Gradle，用于管理 Python 第三方库</p></blockquote><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><h4 id="对比学习" tabindex="-1"><a class="header-anchor" href="#对比学习"><span>对比学习</span></a></h4><table><thead><tr><th>操作</th><th>Maven</th><th>pip</th></tr></thead><tbody><tr><td><strong>安装依赖</strong></td><td><code>mvn install</code></td><td><code>pip install package_name</code></td></tr><tr><td><strong>列出依赖</strong></td><td><code>mvn dependency:tree</code></td><td><code>pip list</code></td></tr><tr><td><strong>导出依赖</strong></td><td>pom.xml</td><td><code>pip freeze &gt; requirements.txt</code></td></tr><tr><td><strong>安装项目依赖</strong></td><td><code>mvn install</code></td><td><code>pip install -r requirements.txt</code></td></tr><tr><td><strong>卸载依赖</strong></td><td>修改 pom.xml</td><td><code>pip uninstall package_name</code></td></tr></tbody></table><h3 id="实战示例" tabindex="-1"><a class="header-anchor" href="#实战示例"><span>实战示例</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 安装单个包</span></span>
<span class="line">pip <span class="token function">install</span> requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装特定版本</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token assign-left variable">numpy</span><span class="token operator">==</span><span class="token number">1.24</span>.0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装多个包</span></span>
<span class="line">pip <span class="token function">install</span> pandas matplotlib seaborn</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看已安装的包</span></span>
<span class="line">pip list</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看包信息</span></span>
<span class="line">pip show requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 导出依赖到文件 (相当于 pom.xml)</span></span>
<span class="line">pip freeze <span class="token operator">&gt;</span> requirements.txt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从文件安装依赖</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 卸载包</span></span>
<span class="line">pip uninstall requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 升级包</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 升级 pip 本身</span></span>
<span class="line">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🌍-虚拟环境" tabindex="-1"><a class="header-anchor" href="#🌍-虚拟环境"><span>🌍 虚拟环境</span></a></h2><h3 id="为什么需要虚拟环境" tabindex="-1"><a class="header-anchor" href="#为什么需要虚拟环境"><span>为什么需要虚拟环境？</span></a></h3><p><strong>Java 开发者的理解：</strong></p><ul><li>Java 项目依赖 JDK，全局共享</li><li>Python 项目可以有独立的 Python 环境和依赖</li><li>类似于 Docker 容器，但更轻量</li></ul><p><strong>好处：</strong></p><ul><li>不同项目使用不同版本的库</li><li>避免依赖冲突</li><li>项目环境隔离</li></ul><h3 id="使用-venv-推荐" tabindex="-1"><a class="header-anchor" href="#使用-venv-推荐"><span>使用 venv (推荐)</span></a></h3><h4 id="创建虚拟环境" tabindex="-1"><a class="header-anchor" href="#创建虚拟环境"><span>创建虚拟环境</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 进入项目目录</span></span>
<span class="line"><span class="token builtin class-name">cd</span> my-python-project</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建虚拟环境 (相当于创建一个独立的 Python 环境)</span></span>
<span class="line">python <span class="token parameter variable">-m</span> venv venv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 目录结构：</span></span>
<span class="line"><span class="token comment"># my-python-project/</span></span>
<span class="line"><span class="token comment">#   venv/          # 虚拟环境目录（类似 node_modules）</span></span>
<span class="line"><span class="token comment">#     Scripts/     # Windows</span></span>
<span class="line"><span class="token comment">#     bin/         # Linux/macOS</span></span>
<span class="line"><span class="token comment">#     Lib/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="激活虚拟环境" tabindex="-1"><a class="header-anchor" href="#激活虚拟环境"><span>激活虚拟环境</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Windows</span></span>
<span class="line">venv<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>activate</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Linux/macOS</span></span>
<span class="line"><span class="token builtin class-name">source</span> venv/bin/activate</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 激活后，命令行前面会显示 (venv)</span></span>
<span class="line"><span class="token punctuation">(</span>venv<span class="token punctuation">)</span> PS E:<span class="token punctuation">\\</span>my-python-project<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用虚拟环境" tabindex="-1"><a class="header-anchor" href="#使用虚拟环境"><span>使用虚拟环境</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 激活后，pip 安装的包只在这个环境中</span></span>
<span class="line"><span class="token punctuation">(</span>venv<span class="token punctuation">)</span> $ pip <span class="token function">install</span> requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看虚拟环境中的包</span></span>
<span class="line"><span class="token punctuation">(</span>venv<span class="token punctuation">)</span> $ pip list</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 退出虚拟环境</span></span>
<span class="line"><span class="token punctuation">(</span>venv<span class="token punctuation">)</span> $ deactivate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在-ide-中使用虚拟环境" tabindex="-1"><a class="header-anchor" href="#在-ide-中使用虚拟环境"><span>在 IDE 中使用虚拟环境</span></a></h4><p><strong>IntelliJ IDEA：</strong></p><ol><li><code>File</code> → <code>Project Structure</code> → <code>SDKs</code></li><li>添加虚拟环境中的 Python： <code>项目路径/venv/Scripts/python.exe</code> (Windows)</li><li>设置为项目解释器</li></ol><h3 id="依赖管理最佳实践" tabindex="-1"><a class="header-anchor" href="#依赖管理最佳实践"><span>依赖管理最佳实践</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 1. 创建项目</span></span>
<span class="line"><span class="token function">mkdir</span> my-ai-project</span>
<span class="line"><span class="token builtin class-name">cd</span> my-ai-project</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 创建虚拟环境</span></span>
<span class="line">python <span class="token parameter variable">-m</span> venv venv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 激活虚拟环境</span></span>
<span class="line">venv<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>activate  <span class="token comment"># Windows</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 安装依赖</span></span>
<span class="line">pip <span class="token function">install</span> openai numpy pandas</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 导出依赖（提交到 Git）</span></span>
<span class="line">pip freeze <span class="token operator">&gt;</span> requirements.txt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 6. 其他人克隆项目后</span></span>
<span class="line"><span class="token function">git</span> clone xxx</span>
<span class="line"><span class="token builtin class-name">cd</span> my-ai-project</span>
<span class="line">python <span class="token parameter variable">-m</span> venv venv</span>
<span class="line">venv<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>activate</span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt  <span class="token comment"># 安装所有依赖</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✅-环境验证" tabindex="-1"><a class="header-anchor" href="#✅-环境验证"><span>✅ 环境验证</span></a></h2><h3 id="创建测试文件" tabindex="-1"><a class="header-anchor" href="#创建测试文件"><span>创建测试文件</span></a></h3><p>创建 <code>hello.py</code>：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># hello.py</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello from Python!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 显示 Python 版本</span></span>
<span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Python version: </span><span class="token interpolation"><span class="token punctuation">{</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试包导入</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;NumPy version: </span><span class="token interpolation"><span class="token punctuation">{</span>np<span class="token punctuation">.</span>__version__<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ImportError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NumPy not installed&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行程序" tabindex="-1"><a class="header-anchor" href="#运行程序"><span>运行程序</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 命令行运行</span></span>
<span class="line">python hello.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：</span></span>
<span class="line"><span class="token comment"># Hello from Python!</span></span>
<span class="line"><span class="token comment"># Python version: 3.12.x</span></span>
<span class="line"><span class="token comment"># NumPy version: 1.26.x (如果已安装)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-idea-中运行" tabindex="-1"><a class="header-anchor" href="#在-idea-中运行"><span>在 IDEA 中运行</span></a></h3><ol><li>右键 <code>hello.py</code></li><li>点击 &quot;Run &#39;hello&#39;&quot;</li><li>查看输出</li></ol><hr><h2 id="🎯-java-vs-python-对比示例" tabindex="-1"><a class="header-anchor" href="#🎯-java-vs-python-对比示例"><span>🎯 Java vs Python 对比示例</span></a></h2><h3 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello World</span></a></h3><p><strong>Java:</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Python:</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="包导入" tabindex="-1"><a class="header-anchor" href="#包导入"><span>包导入</span></a></h3><p><strong>Java:</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Python:</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">from</span> typing <span class="token keyword">import</span> List</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h3><p><strong>Java 项目：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">my-java-project/</span>
<span class="line">├── pom.xml</span>
<span class="line">├── src/</span>
<span class="line">│   └── main/</span>
<span class="line">│       └── java/</span>
<span class="line">│           └── com/example/App.java</span>
<span class="line">└── target/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Python 项目：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">my-python-project/</span>
<span class="line">├── requirements.txt</span>
<span class="line">├── venv/              # 虚拟环境（不提交到 Git）</span>
<span class="line">├── src/</span>
<span class="line">│   └── main.py</span>
<span class="line">└── tests/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🐛-常见问题" tabindex="-1"><a class="header-anchor" href="#🐛-常见问题"><span>🐛 常见问题</span></a></h2><h3 id="q1-pip-安装很慢怎么办" tabindex="-1"><a class="header-anchor" href="#q1-pip-安装很慢怎么办"><span>Q1: pip 安装很慢怎么办？</span></a></h3><p><strong>A:</strong> 使用国内镜像源</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 临时使用</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple numpy</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 永久配置</span></span>
<span class="line">pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q2-虚拟环境应该提交到-git-吗" tabindex="-1"><a class="header-anchor" href="#q2-虚拟环境应该提交到-git-吗"><span>Q2: 虚拟环境应该提交到 Git 吗？</span></a></h3><p><strong>A:</strong> 不应该！类似 Java 的 <code>target/</code> 目录</p><p><code>.gitignore</code> 文件：</p><div class="language-gitignore line-numbers-mode" data-highlighter="prismjs" data-ext="gitignore" data-title="gitignore"><pre><code><span class="line"><span class="token entry string">venv<span class="token punctuation">/</span></span></span>
<span class="line"><span class="token entry string">__pycache__<span class="token punctuation">/</span></span></span>
<span class="line"><span class="token entry string"><span class="token operator">*</span>.pyc</span></span>
<span class="line"><span class="token entry string">.env</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q3-多个-python-版本如何管理" tabindex="-1"><a class="header-anchor" href="#q3-多个-python-版本如何管理"><span>Q3: 多个 Python 版本如何管理？</span></a></h3><p><strong>A:</strong> 使用 <code>pyenv</code> (类似 Java 的 SDKMAN)</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 安装 pyenv</span></span>
<span class="line"><span class="token function">curl</span> https://pyenv.run <span class="token operator">|</span> <span class="token function">bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装不同版本的 Python</span></span>
<span class="line">pyenv <span class="token function">install</span> <span class="token number">3.10</span>.0</span>
<span class="line">pyenv <span class="token function">install</span> <span class="token number">3.12</span>.0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 切换版本</span></span>
<span class="line">pyenv global <span class="token number">3.12</span>.0</span>
<span class="line">pyenv <span class="token builtin class-name">local</span> <span class="token number">3.10</span>.0  <span class="token comment"># 项目级别</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📋-环境配置检查清单" tabindex="-1"><a class="header-anchor" href="#📋-环境配置检查清单"><span>📋 环境配置检查清单</span></a></h2><p>完成以下检查，确保环境搭建成功：</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Python 3.10+ 已安装</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> <code>python --version</code> 显示正确版本</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> <code>pip --version</code> 正常工作</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> IDE 配置完成（IntelliJ IDEA / PyCharm）</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 能够创建和激活虚拟环境</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> <code>pip install</code> 能够成功安装包</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 能够运行 Python 程序</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 理解 <code>requirements.txt</code> 的作用</li></ul><hr><h2 id="🚀-下一步" tabindex="-1"><a class="header-anchor" href="#🚀-下一步"><span>🚀 下一步</span></a></h2><p>环境搭建完成！现在你可以开始学习 Python 语法了：</p>`,74)),s("p",null,[n[8]||(n[8]=s("strong",null,"下一步",-1)),n[9]||(n[9]=a(" → ",-1)),e(p,{to:"/tutorials/java-to-llm/01-prerequisites/python-basics/02-syntax-comparison.html"},{default:d(()=>[...n[7]||(n[7]=[a("Java vs Python 语法对比",-1)])]),_:1})]),n[17]||(n[17]=s("hr",null,null,-1)),n[18]||(n[18]=s("h2",{id:"📖-参考资源",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#📖-参考资源"},[s("span",null,"📖 参考资源")])],-1)),s("ul",null,[s("li",null,[s("a",m,[n[10]||(n[10]=a("Python 官方文档",-1)),e(l)])]),s("li",null,[s("a",b,[n[11]||(n[11]=a("pip 用户指南",-1)),e(l)])]),s("li",null,[s("a",k,[n[12]||(n[12]=a("venv 文档",-1)),e(l)])]),s("li",null,[s("a",y,[n[13]||(n[13]=a("IntelliJ IDEA Python 插件",-1)),e(l)])])]),n[19]||(n[19]=s("hr",null,null,-1)),n[20]||(n[20]=s("p",null,[s("strong",null,"恭喜！"),a(" 你已经成功搭建了 Python 开发环境。作为 Java 开发者，你会发现 Python 的环境管理其实很简单。让我们继续学习 Python 语法！💪")],-1))])}const P=c(u,[["render",g]]),j=JSON.parse('{"path":"/tutorials/java-to-llm/01-prerequisites/python-basics/01-environment-setup.html","title":"环境搭建","lang":"zh-CN","frontmatter":{"title":"环境搭建"},"headers":[{"level":2,"title":"📖 本文概述","slug":"📖-本文概述","link":"#📖-本文概述","children":[]},{"level":2,"title":"🎯 学习目标","slug":"🎯-学习目标","link":"#🎯-学习目标","children":[]},{"level":2,"title":"🛠️ Python vs Java 环境对比","slug":"🛠️-python-vs-java-环境对比","link":"#🛠️-python-vs-java-环境对比","children":[]},{"level":2,"title":"📦 安装 Python","slug":"📦-安装-python","link":"#📦-安装-python","children":[{"level":3,"title":"Windows 系统","slug":"windows-系统","link":"#windows-系统","children":[]},{"level":3,"title":"macOS 系统","slug":"macos-系统","link":"#macos-系统","children":[]},{"level":3,"title":"Linux 系统","slug":"linux-系统","link":"#linux-系统","children":[]}]},{"level":2,"title":"🔧 配置 IDE","slug":"🔧-配置-ide","link":"#🔧-配置-ide","children":[{"level":3,"title":"选项 1：IntelliJ IDEA (推荐给 Java 开发者)","slug":"选项-1-intellij-idea-推荐给-java-开发者","link":"#选项-1-intellij-idea-推荐给-java-开发者","children":[]},{"level":3,"title":"选项 2：PyCharm (Python 专业 IDE)","slug":"选项-2-pycharm-python-专业-ide","link":"#选项-2-pycharm-python-专业-ide","children":[]}]},{"level":2,"title":"📦 包管理：pip","slug":"📦-包管理-pip","link":"#📦-包管理-pip","children":[{"level":3,"title":"pip 是什么？","slug":"pip-是什么","link":"#pip-是什么","children":[]},{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"实战示例","slug":"实战示例","link":"#实战示例","children":[]}]},{"level":2,"title":"🌍 虚拟环境","slug":"🌍-虚拟环境","link":"#🌍-虚拟环境","children":[{"level":3,"title":"为什么需要虚拟环境？","slug":"为什么需要虚拟环境","link":"#为什么需要虚拟环境","children":[]},{"level":3,"title":"使用 venv (推荐)","slug":"使用-venv-推荐","link":"#使用-venv-推荐","children":[]},{"level":3,"title":"依赖管理最佳实践","slug":"依赖管理最佳实践","link":"#依赖管理最佳实践","children":[]}]},{"level":2,"title":"✅ 环境验证","slug":"✅-环境验证","link":"#✅-环境验证","children":[{"level":3,"title":"创建测试文件","slug":"创建测试文件","link":"#创建测试文件","children":[]},{"level":3,"title":"运行程序","slug":"运行程序","link":"#运行程序","children":[]},{"level":3,"title":"在 IDEA 中运行","slug":"在-idea-中运行","link":"#在-idea-中运行","children":[]}]},{"level":2,"title":"🎯 Java vs Python 对比示例","slug":"🎯-java-vs-python-对比示例","link":"#🎯-java-vs-python-对比示例","children":[{"level":3,"title":"Hello World","slug":"hello-world","link":"#hello-world","children":[]},{"level":3,"title":"包导入","slug":"包导入","link":"#包导入","children":[]},{"level":3,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[]}]},{"level":2,"title":"🐛 常见问题","slug":"🐛-常见问题","link":"#🐛-常见问题","children":[{"level":3,"title":"Q1: pip 安装很慢怎么办？","slug":"q1-pip-安装很慢怎么办","link":"#q1-pip-安装很慢怎么办","children":[]},{"level":3,"title":"Q2: 虚拟环境应该提交到 Git 吗？","slug":"q2-虚拟环境应该提交到-git-吗","link":"#q2-虚拟环境应该提交到-git-吗","children":[]},{"level":3,"title":"Q3: 多个 Python 版本如何管理？","slug":"q3-多个-python-版本如何管理","link":"#q3-多个-python-版本如何管理","children":[]}]},{"level":2,"title":"📋 环境配置检查清单","slug":"📋-环境配置检查清单","link":"#📋-环境配置检查清单","children":[]},{"level":2,"title":"🚀 下一步","slug":"🚀-下一步","link":"#🚀-下一步","children":[]},{"level":2,"title":"📖 参考资源","slug":"📖-参考资源","link":"#📖-参考资源","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-to-llm/01-prerequisites/python-basics/01-environment-setup.md"}');export{P as comp,j as data};
