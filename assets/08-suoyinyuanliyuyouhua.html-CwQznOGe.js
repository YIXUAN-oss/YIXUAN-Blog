import{_ as p,c as l,d as t,e as a,f as n,b as i,w as o,r as c,o as r}from"./app-DeqJ5waz.js";const d={};function u(k,s){const e=c("RouteLink");return r(),l("div",null,[s[3]||(s[3]=t(`<h1 id="索引原理与优化" tabindex="-1"><a class="header-anchor" href="#索引原理与优化"><span>索引原理与优化</span></a></h1><blockquote><p>索引是提升数据库查询性能的关键技术。本章将深入学习索引的原理、类型和优化策略。</p></blockquote><h2 id="📋-本章目录" tabindex="-1"><a class="header-anchor" href="#📋-本章目录"><span>📋 本章目录</span></a></h2><ul><li><a href="#%E4%B8%80%E7%B4%A2%E5%BC%95%E6%A6%82%E8%BF%B0">一、索引概述</a></li><li><a href="#%E4%BA%8C%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">二、索引数据结构</a></li><li><a href="#%E4%B8%89%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB">三、索引分类</a></li><li><a href="#%E5%9B%9B%E7%B4%A2%E5%BC%95%E6%93%8D%E4%BD%9C">四、索引操作</a></li><li><a href="#%E4%BA%94%E7%B4%A2%E5%BC%95%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99">五、索引设计原则</a></li><li><a href="#%E5%85%AD%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98">六、索引优化实战</a></li></ul><hr><h2 id="一、索引概述" tabindex="-1"><a class="header-anchor" href="#一、索引概述"><span>一、索引概述</span></a></h2><h3 id="_1-1-什么是索引" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是索引"><span>1.1 什么是索引？</span></a></h3><p><strong>索引</strong>是帮助MySQL高效获取数据的<strong>数据结构</strong>，类似于书籍的目录。</p><p><strong>没有索引：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 全表扫描，逐行查找</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>  <span class="token comment">-- 扫描100万行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>有索引：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 通过索引快速定位</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>  <span class="token comment">-- 只需几次查找</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-索引的优缺点" tabindex="-1"><a class="header-anchor" href="#_1-2-索引的优缺点"><span>1.2 索引的优缺点</span></a></h3><p><strong>优点：</strong></p><ul><li>✅ 提高查询效率（降低IO成本）</li><li>✅ 降低排序成本（索引已排序）</li><li>✅ 加速表连接</li></ul><p><strong>缺点：</strong></p><ul><li>❌ 占用存储空间</li><li>❌ 降低写入效率（INSERT、UPDATE、DELETE）</li><li>❌ 维护成本</li></ul><hr><h2 id="二、索引数据结构" tabindex="-1"><a class="header-anchor" href="#二、索引数据结构"><span>二、索引数据结构</span></a></h2><h3 id="_2-1-b-tree索引-最常用" tabindex="-1"><a class="header-anchor" href="#_2-1-b-tree索引-最常用"><span>2.1 B+Tree索引（最常用）</span></a></h3><p><strong>特点：</strong></p><ul><li>多路平衡查找树</li><li>所有数据存储在叶子节点</li><li>叶子节点通过链表连接</li><li>适合范围查询</li></ul><p><strong>B+Tree结构：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">          [50]</span>
<span class="line">         /    \\</span>
<span class="line">    [20,30]   [70,90]</span>
<span class="line">     /  |  \\   /  |  \\</span>
<span class="line">[10][25][40][60][80][100]  ← 叶子节点（存储数据）</span>
<span class="line"> ←→  ←→  ←→  ←→  ←→  ←→     ← 双向链表</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>优势：</strong></p><ul><li>查询效率稳定（O(log n)）</li><li>范围查询效率高</li><li>磁盘IO次数少</li></ul><h3 id="_2-2-hash索引" tabindex="-1"><a class="header-anchor" href="#_2-2-hash索引"><span>2.2 Hash索引</span></a></h3><p><strong>特点：</strong></p><ul><li>基于哈希表实现</li><li>只支持等值查询（=、IN）</li><li>不支持范围查询</li><li>Memory引擎默认</li></ul><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> hash_table <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">INDEX</span> <span class="token keyword">USING</span> <span class="token keyword">HASH</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span>Memory<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-full-text全文索引" tabindex="-1"><a class="header-anchor" href="#_2-3-full-text全文索引"><span>2.3 Full-Text全文索引</span></a></h3><p>用于全文搜索，支持MATCH...AGAINST语法。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> articles <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    title <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    content <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">    FULLTEXT <span class="token punctuation">(</span>title<span class="token punctuation">,</span> content<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 全文搜索</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> articles </span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> content<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">&#39;MySQL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、索引分类" tabindex="-1"><a class="header-anchor" href="#三、索引分类"><span>三、索引分类</span></a></h2><h3 id="_3-1-按功能分类" tabindex="-1"><a class="header-anchor" href="#_3-1-按功能分类"><span>3.1 按功能分类</span></a></h3><table><thead><tr><th>类型</th><th>说明</th><th>关键字</th></tr></thead><tbody><tr><td><strong>主键索引</strong></td><td>唯一标识，非空唯一</td><td>PRIMARY KEY</td></tr><tr><td><strong>唯一索引</strong></td><td>值唯一，可为NULL</td><td>UNIQUE</td></tr><tr><td><strong>普通索引</strong></td><td>最基本的索引</td><td>INDEX / KEY</td></tr><tr><td><strong>全文索引</strong></td><td>全文搜索</td><td>FULLTEXT</td></tr></tbody></table><h3 id="_3-2-按列数分类" tabindex="-1"><a class="header-anchor" href="#_3-2-按列数分类"><span>3.2 按列数分类</span></a></h3><p><strong>单列索引：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name <span class="token keyword">ON</span> users<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>联合索引（复合索引）：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name_age <span class="token keyword">ON</span> users<span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-3-按存储方式分类" tabindex="-1"><a class="header-anchor" href="#_3-3-按存储方式分类"><span>3.3 按存储方式分类</span></a></h3><p><strong>聚集索引（Clustered Index）：</strong></p><ul><li>数据按照主键顺序存储</li><li>一张表只能有一个聚集索引</li><li>InnoDB中主键就是聚集索引</li></ul><p><strong>非聚集索引（Secondary Index）：</strong></p><ul><li>索引和数据分开存储</li><li>叶子节点存储主键值</li><li>需要回表查询</li></ul><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 主键索引（聚集索引）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- 直接找到数据</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 普通索引（非聚集索引）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 1. 通过name索引找到id</span></span>
<span class="line"><span class="token comment">-- 2. 再通过id（主键）找到完整数据（回表）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、索引操作" tabindex="-1"><a class="header-anchor" href="#四、索引操作"><span>四、索引操作</span></a></h2><h3 id="_4-1-创建索引" tabindex="-1"><a class="header-anchor" href="#_4-1-创建索引"><span>4.1 创建索引</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 方式1：创建表时定义</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>                    <span class="token comment">-- 主键索引</span></span>
<span class="line">    username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>          <span class="token comment">-- 唯一索引</span></span>
<span class="line">    email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    age <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">INDEX</span> idx_age <span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token comment">-- 普通索引</span></span>
<span class="line">    <span class="token keyword">INDEX</span> idx_email_age <span class="token punctuation">(</span>email<span class="token punctuation">,</span> age<span class="token punctuation">)</span>      <span class="token comment">-- 联合索引</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 方式2：单独创建</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name <span class="token keyword">ON</span> users<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> idx_email <span class="token keyword">ON</span> users<span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 方式3：ALTER TABLE</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> users <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> idx_age <span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> users <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span> <span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 联合索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name_age_salary <span class="token keyword">ON</span> employees<span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> salary<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-查看索引" tabindex="-1"><a class="header-anchor" href="#_4-2-查看索引"><span>4.2 查看索引</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查看表的索引</span></span>
<span class="line"><span class="token keyword">SHOW</span> <span class="token keyword">INDEX</span> <span class="token keyword">FROM</span> users<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查看索引使用情况</span></span>
<span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-删除索引" tabindex="-1"><a class="header-anchor" href="#_4-3-删除索引"><span>4.3 删除索引</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 删除索引</span></span>
<span class="line"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idx_age <span class="token keyword">ON</span> users<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ALTER TABLE方式</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> users <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idx_age<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 删除主键索引</span></span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> users <span class="token keyword">DROP</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、索引设计原则" tabindex="-1"><a class="header-anchor" href="#五、索引设计原则"><span>五、索引设计原则</span></a></h2><h3 id="_5-1-💼-实际工作中什么时候创建索引" tabindex="-1"><a class="header-anchor" href="#_5-1-💼-实际工作中什么时候创建索引"><span>5.1 💼 实际工作中什么时候创建索引？</span></a></h3><p><strong>真实场景分析：</strong></p><p><strong>场景1：用户登录查询（高频查询）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 业务场景：用户登录，每秒数千次查询</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> username <span class="token operator">=</span> <span class="token string">&#39;zhangsan&#39;</span> <span class="token operator">AND</span> password <span class="token operator">=</span> <span class="token string">&#39;***&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 索引方案</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_username_password <span class="token keyword">ON</span> users<span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 为什么：</span></span>
<span class="line"><span class="token comment">-- 1. 登录是高频操作，必须快</span></span>
<span class="line"><span class="token comment">-- 2. username和password组合查询，用联合索引</span></span>
<span class="line"><span class="token comment">-- 3. username放前面（选择性更高）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景2：订单列表查询（分页查询）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 业务场景：查看我的订单列表</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders </span>
<span class="line"><span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">1001</span> <span class="token operator">AND</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">2</span> </span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> create_time <span class="token keyword">DESC</span> </span>
<span class="line"><span class="token keyword">LIMIT</span> <span class="token number">10</span> <span class="token keyword">OFFSET</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 索引方案</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_user_status_time <span class="token keyword">ON</span> orders<span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> <span class="token keyword">status</span><span class="token punctuation">,</span> create_time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 为什么：</span></span>
<span class="line"><span class="token comment">-- 1. WHERE条件：user_id、status</span></span>
<span class="line"><span class="token comment">-- 2. ORDER BY：create_time</span></span>
<span class="line"><span class="token comment">-- 3. 联合索引覆盖所有条件，避免filesort</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景3：商品搜索（模糊查询）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 业务场景：搜索商品</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> title <span class="token operator">LIKE</span> <span class="token string">&#39;iPhone%&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- ✅ 前缀匹配</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> title <span class="token operator">LIKE</span> <span class="token string">&#39;%Phone%&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 中间匹配</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 索引方案</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_title <span class="token keyword">ON</span> products<span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 或使用全文索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> FULLTEXT <span class="token keyword">INDEX</span> idx_title_full <span class="token keyword">ON</span> products<span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 为什么：</span></span>
<span class="line"><span class="token comment">-- 1. LIKE &#39;iPhone%&#39; 可以用索引（前缀匹配）</span></span>
<span class="line"><span class="token comment">-- 2. LIKE &#39;%Phone%&#39; 不能用普通索引，需要全文索引</span></span>
<span class="line"><span class="token comment">-- 3. 电商搜索推荐用ElasticSearch等专业搜索引擎</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景4：订单统计查询（聚合查询）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 业务场景：统计每个用户的订单数和总金额</span></span>
<span class="line"><span class="token keyword">SELECT</span> user_id<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> </span>
<span class="line"><span class="token keyword">FROM</span> orders </span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> user_id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 索引方案</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_user_amount <span class="token keyword">ON</span> orders<span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 为什么：</span></span>
<span class="line"><span class="token comment">-- 1. GROUP BY user_id 需要索引</span></span>
<span class="line"><span class="token comment">-- 2. SUM(amount) 如果amount也在索引中，可以直接从索引读取（覆盖索引）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景5：关联查询（JOIN）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 业务场景：查询订单及用户信息</span></span>
<span class="line"><span class="token keyword">SELECT</span> o<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>phone </span>
<span class="line"><span class="token keyword">FROM</span> orders o </span>
<span class="line"><span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> users u <span class="token keyword">ON</span> o<span class="token punctuation">.</span>user_id <span class="token operator">=</span> u<span class="token punctuation">.</span>id </span>
<span class="line"><span class="token keyword">WHERE</span> o<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 索引方案</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_status <span class="token keyword">ON</span> orders<span class="token punctuation">(</span><span class="token keyword">status</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- orders表</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_id <span class="token keyword">ON</span> users<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">-- users表（主键自动有索引）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 为什么：</span></span>
<span class="line"><span class="token comment">-- 1. JOIN的关联字段必须有索引</span></span>
<span class="line"><span class="token comment">-- 2. WHERE条件的字段也要有索引</span></span>
<span class="line"><span class="token comment">-- 3. 小表驱动大表，优化器会选择合适的执行顺序</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-何时创建索引" tabindex="-1"><a class="header-anchor" href="#_5-2-何时创建索引"><span>5.2 何时创建索引</span></a></h3><p><strong>✅ 应该创建索引：</strong></p><ol><li><strong>WHERE条件字段</strong></li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>  <span class="token comment">-- age应该加索引</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li><strong>ORDER BY字段</strong></li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price<span class="token punctuation">;</span>  <span class="token comment">-- price加索引</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li><strong>GROUP BY字段</strong></li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> dept_id<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> dept_id<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- dept_id加索引</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>JOIN关联字段</strong></li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders o <span class="token keyword">JOIN</span> users u <span class="token keyword">ON</span> o<span class="token punctuation">.</span>user_id <span class="token operator">=</span> u<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- user_id和id都应加索引</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><strong>数据量大且查询频繁的表</strong></li></ol><p><strong>实际工作经验：</strong></p><ul><li>📊 <strong>数据量参考</strong>：表数据 &gt; 10万行，应该考虑索引</li><li>⏱️ <strong>查询频率</strong>：每秒 &gt; 100次查询，必须优化索引</li><li>🔍 <strong>慢查询</strong>：查询时间 &gt; 1秒，检查是否缺少索引</li><li>💡 <strong>监控工具</strong>：使用慢查询日志找出需要优化的SQL</li></ul><h3 id="_5-2-何时不创建索引" tabindex="-1"><a class="header-anchor" href="#_5-2-何时不创建索引"><span>5.2 何时不创建索引</span></a></h3><p><strong>❌ 不应该创建索引：</strong></p><ol><li>数据量小的表（&lt; 1000行）</li><li>频繁更新的字段</li><li>重复数据多的字段（如性别）</li><li>WHERE条件中用不到的字段</li></ol><h3 id="_5-3-索引设计原则" tabindex="-1"><a class="header-anchor" href="#_5-3-索引设计原则"><span>5.3 索引设计原则</span></a></h3><p><strong>1. 选择性高的字段优先</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 好：唯一性高</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_id_card <span class="token keyword">ON</span> users<span class="token punctuation">(</span>id_card<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 身份证号</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 差：重复值多</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_gender <span class="token keyword">ON</span> users<span class="token punctuation">(</span>gender<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">-- 性别只有2个值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 使用前缀索引（长字符串）</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 对长字符串只索引前几个字符</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_email <span class="token keyword">ON</span> users<span class="token punctuation">(</span>email<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 只索引前10个字符</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 联合索引遵循最左前缀原则</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_abc <span class="token keyword">ON</span> <span class="token keyword">table</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 能用到索引</span></span>
<span class="line"><span class="token keyword">WHERE</span> a <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">WHERE</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">AND</span> b <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">WHERE</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">AND</span> b <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">AND</span> c <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ❌ 不能用到索引</span></span>
<span class="line"><span class="token keyword">WHERE</span> b <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">WHERE</span> c <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"><span class="token keyword">WHERE</span> b <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">AND</span> c <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 控制索引数量</strong></p><ul><li>建议单表索引不超过5个</li><li>单个索引字段不超过5个</li></ul><p><strong>5. 避免冗余索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 已有 INDEX(a, b)</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_a <span class="token keyword">ON</span> <span class="token keyword">table</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 冗余，可以删除</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、索引优化实战" tabindex="-1"><a class="header-anchor" href="#六、索引优化实战"><span>六、索引优化实战</span></a></h2><h3 id="_6-1-使用explain分析" tabindex="-1"><a class="header-anchor" href="#_6-1-使用explain分析"><span>6.1 使用EXPLAIN分析</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>关键字段：</strong></p><ul><li><code>type</code>：访问类型（ALL &lt; index &lt; range &lt; ref &lt; eq_ref &lt; const）</li><li><code>key</code>：实际使用的索引</li><li><code>rows</code>：扫描的行数</li><li><code>Extra</code>：额外信息</li></ul><h3 id="_6-2-索引失效场景" tabindex="-1"><a class="header-anchor" href="#_6-2-索引失效场景"><span>6.2 索引失效场景</span></a></h3><p><strong>1. 违反最左前缀原则</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 索引：INDEX(name, age, salary)</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> emp <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 失效（跳过name）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 在索引列上使用函数</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>birth_date<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1990</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 失效</span></span>
<span class="line"><span class="token comment">-- 改进</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> birth_date <span class="token operator">BETWEEN</span> <span class="token string">&#39;1990-01-01&#39;</span> <span class="token operator">AND</span> <span class="token string">&#39;1990-12-31&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 字符串不加引号</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> phone <span class="token operator">=</span> <span class="token number">13800138000</span><span class="token punctuation">;</span>  <span class="token comment">-- ❌ 失效（类型转换）</span></span>
<span class="line"><span class="token comment">-- 改进</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> phone <span class="token operator">=</span> <span class="token string">&#39;13800138000&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- ✅ 正常</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 使用OR连接</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">OR</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 可能失效</span></span>
<span class="line"><span class="token comment">-- 改进：使用UNION</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">UNION</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. 使用!=、&lt;&gt;、NOT IN</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">!=</span> <span class="token number">25</span><span class="token punctuation">;</span>  <span class="token comment">-- 可能失效</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_6-3-覆盖索引优化" tabindex="-1"><a class="header-anchor" href="#_6-3-覆盖索引优化"><span>6.3 覆盖索引优化</span></a></h3><p><strong>覆盖索引</strong>：查询的字段都在索引中，不需要回表。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 创建联合索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name_age_salary <span class="token keyword">ON</span> employees<span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> salary<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ✅ 覆盖索引（不需要回表）</span></span>
<span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ❌ 非覆盖索引（需要回表）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-4-索引下推-icp" tabindex="-1"><a class="header-anchor" href="#_6-4-索引下推-icp"><span>6.4 索引下推（ICP）</span></a></h3><p>MySQL 5.6+支持索引下推优化。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 索引：INDEX(name, age)</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;张%&#39;</span> <span class="token operator">AND</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 没有ICP：先根据name筛选，回表后再判断age</span></span>
<span class="line"><span class="token comment">-- 有ICP：在索引中就判断age条件，减少回表次数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-实战案例" tabindex="-1"><a class="header-anchor" href="#_6-5-实战案例"><span>6.5 实战案例</span></a></h3><p><strong>案例1：慢查询优化</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 原SQL（慢）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> <span class="token keyword">DATE</span><span class="token punctuation">(</span>create_time<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;2024-01-01&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 问题：在索引列上使用函数</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 优化后（快）</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders </span>
<span class="line"><span class="token keyword">WHERE</span> create_time <span class="token operator">&gt;=</span> <span class="token string">&#39;2024-01-01&#39;</span> </span>
<span class="line">  <span class="token operator">AND</span> create_time <span class="token operator">&lt;</span> <span class="token string">&#39;2024-01-02&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>案例2：联合索引优化</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 查询条件：name、age、city</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span> <span class="token operator">AND</span> age <span class="token operator">=</span> <span class="token number">25</span> <span class="token operator">AND</span> city <span class="token operator">=</span> <span class="token string">&#39;北京&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 方案1：三个单列索引（不推荐）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name <span class="token keyword">ON</span> users<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_age <span class="token keyword">ON</span> users<span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_city <span class="token keyword">ON</span> users<span class="token punctuation">(</span>city<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 方案2：一个联合索引（推荐）</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name_age_city <span class="token keyword">ON</span> users<span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> city<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、本章总结" tabindex="-1"><a class="header-anchor" href="#七、本章总结"><span>七、本章总结</span></a></h2><h3 id="核心要点" tabindex="-1"><a class="header-anchor" href="#核心要点"><span>核心要点</span></a></h3><ol><li><strong>索引是数据结构</strong>：B+Tree最常用</li><li><strong>索引分类</strong>：主键、唯一、普通、全文；聚集、非聚集</li><li><strong>创建原则</strong>：WHERE、ORDER BY、GROUP BY字段</li><li><strong>最左前缀</strong>：联合索引的关键规则</li><li><strong>避免失效</strong>：不在索引列上使用函数、注意类型匹配</li></ol><h3 id="优化策略" tabindex="-1"><a class="header-anchor" href="#优化策略"><span>优化策略</span></a></h3><table><thead><tr><th>场景</th><th>优化方案</th></tr></thead><tbody><tr><td>长字符串</td><td>前缀索引</td></tr><tr><td>多条件查询</td><td>联合索引</td></tr><tr><td>只查索引字段</td><td>覆盖索引</td></tr><tr><td>范围+等值</td><td>等值放前面</td></tr><tr><td>慢查询</td><td>EXPLAIN分析</td></tr></tbody></table><h3 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h3><ol><li>✅ 为WHERE、ORDER BY、GROUP BY字段建索引</li><li>✅ 优先使用联合索引</li><li>✅ 遵循最左前缀原则</li><li>✅ 避免在索引列上使用函数</li><li>✅ 定期分析和优化索引</li></ol><hr><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题"><span>练习题</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- 1. 创建合适的索引</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    user_id <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">    amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">status</span> <span class="token keyword">TINYINT</span><span class="token punctuation">,</span></span>
<span class="line">    create_time <span class="token keyword">DATETIME</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 思考：应该创建哪些索引？</span></span>
<span class="line"><span class="token comment">-- 答案：</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_user_id <span class="token keyword">ON</span> orders<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_status_create_time <span class="token keyword">ON</span> orders<span class="token punctuation">(</span><span class="token keyword">status</span><span class="token punctuation">,</span> create_time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 2. 分析SQL执行计划</span></span>
<span class="line"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders </span>
<span class="line"><span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">AND</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token number">1</span> </span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> create_time<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 3. 优化慢查询</span></span>
<span class="line"><span class="token comment">-- 原SQL</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> SUBSTRING<span class="token punctuation">(</span>phone<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;138&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 优化后</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> phone <span class="token operator">LIKE</span> <span class="token string">&#39;138%&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,139)),a("p",null,[a("strong",null,[s[1]||(s[1]=n("下一章：",-1)),i(e,{to:"/tutorials/database/mysql/%E7%AC%AC03%E7%AB%A0-%E9%AB%98%E7%BA%A7%E7%AF%87/09-SQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html"},{default:o(()=>[...s[0]||(s[0]=[n("第09章 - SQL性能优化",-1)])]),_:1})]),s[2]||(s[2]=n(" →",-1))])])}const v=p(d,[["render",u]]),b=JSON.parse('{"path":"/tutorials/database/mysql/di03zhang-gaojipian/08-suoyinyuanliyuyouhua.html","title":"索引原理与优化","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 本章目录","slug":"📋-本章目录","link":"#📋-本章目录","children":[]},{"level":2,"title":"一、索引概述","slug":"一、索引概述","link":"#一、索引概述","children":[{"level":3,"title":"1.1 什么是索引？","slug":"_1-1-什么是索引","link":"#_1-1-什么是索引","children":[]},{"level":3,"title":"1.2 索引的优缺点","slug":"_1-2-索引的优缺点","link":"#_1-2-索引的优缺点","children":[]}]},{"level":2,"title":"二、索引数据结构","slug":"二、索引数据结构","link":"#二、索引数据结构","children":[{"level":3,"title":"2.1 B+Tree索引（最常用）","slug":"_2-1-b-tree索引-最常用","link":"#_2-1-b-tree索引-最常用","children":[]},{"level":3,"title":"2.2 Hash索引","slug":"_2-2-hash索引","link":"#_2-2-hash索引","children":[]},{"level":3,"title":"2.3 Full-Text全文索引","slug":"_2-3-full-text全文索引","link":"#_2-3-full-text全文索引","children":[]}]},{"level":2,"title":"三、索引分类","slug":"三、索引分类","link":"#三、索引分类","children":[{"level":3,"title":"3.1 按功能分类","slug":"_3-1-按功能分类","link":"#_3-1-按功能分类","children":[]},{"level":3,"title":"3.2 按列数分类","slug":"_3-2-按列数分类","link":"#_3-2-按列数分类","children":[]},{"level":3,"title":"3.3 按存储方式分类","slug":"_3-3-按存储方式分类","link":"#_3-3-按存储方式分类","children":[]}]},{"level":2,"title":"四、索引操作","slug":"四、索引操作","link":"#四、索引操作","children":[{"level":3,"title":"4.1 创建索引","slug":"_4-1-创建索引","link":"#_4-1-创建索引","children":[]},{"level":3,"title":"4.2 查看索引","slug":"_4-2-查看索引","link":"#_4-2-查看索引","children":[]},{"level":3,"title":"4.3 删除索引","slug":"_4-3-删除索引","link":"#_4-3-删除索引","children":[]}]},{"level":2,"title":"五、索引设计原则","slug":"五、索引设计原则","link":"#五、索引设计原则","children":[{"level":3,"title":"5.1 💼 实际工作中什么时候创建索引？","slug":"_5-1-💼-实际工作中什么时候创建索引","link":"#_5-1-💼-实际工作中什么时候创建索引","children":[]},{"level":3,"title":"5.2 何时创建索引","slug":"_5-2-何时创建索引","link":"#_5-2-何时创建索引","children":[]},{"level":3,"title":"5.2 何时不创建索引","slug":"_5-2-何时不创建索引","link":"#_5-2-何时不创建索引","children":[]},{"level":3,"title":"5.3 索引设计原则","slug":"_5-3-索引设计原则","link":"#_5-3-索引设计原则","children":[]}]},{"level":2,"title":"六、索引优化实战","slug":"六、索引优化实战","link":"#六、索引优化实战","children":[{"level":3,"title":"6.1 使用EXPLAIN分析","slug":"_6-1-使用explain分析","link":"#_6-1-使用explain分析","children":[]},{"level":3,"title":"6.2 索引失效场景","slug":"_6-2-索引失效场景","link":"#_6-2-索引失效场景","children":[]},{"level":3,"title":"6.3 覆盖索引优化","slug":"_6-3-覆盖索引优化","link":"#_6-3-覆盖索引优化","children":[]},{"level":3,"title":"6.4 索引下推（ICP）","slug":"_6-4-索引下推-icp","link":"#_6-4-索引下推-icp","children":[]},{"level":3,"title":"6.5 实战案例","slug":"_6-5-实战案例","link":"#_6-5-实战案例","children":[]}]},{"level":2,"title":"七、本章总结","slug":"七、本章总结","link":"#七、本章总结","children":[{"level":3,"title":"核心要点","slug":"核心要点","link":"#核心要点","children":[]},{"level":3,"title":"优化策略","slug":"优化策略","link":"#优化策略","children":[]},{"level":3,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}]},{"level":2,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}],"git":{"createdTime":1760859744000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/database/mysql/第03章-高级篇/08-索引原理与优化.md"}');export{v as comp,b as data};
