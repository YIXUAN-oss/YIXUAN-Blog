import{_ as s,c as a,d as e,o as l}from"./app-DOpRTEVU.js";const t={};function p(i,n){return l(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="ribbon负载均衡" tabindex="-1"><a class="header-anchor" href="#ribbon负载均衡"><span>Ribbon负载均衡</span></a></h1><h2 id="一、负载均衡概述" tabindex="-1"><a class="header-anchor" href="#一、负载均衡概述"><span>一、负载均衡概述</span></a></h2><h3 id="_1-1-什么是负载均衡" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是负载均衡"><span>1.1 什么是负载均衡？</span></a></h3><p><strong>负载均衡</strong>：将请求分发到多个服务实例，提高系统的可用性和性能。</p><p><strong>类型：</strong></p><ul><li><strong>服务端负载均衡</strong>：Nginx、HAProxy</li><li><strong>客户端负载均衡</strong>：Ribbon</li></ul><h3 id="_1-2-ribbon简介" tabindex="-1"><a class="header-anchor" href="#_1-2-ribbon简介"><span>1.2 Ribbon简介</span></a></h3><p><strong>Ribbon</strong> 是 Netflix 开源的客户端负载均衡组件。</p><p><strong>特点：</strong></p><ul><li>客户端负载均衡</li><li>多种负载均衡策略</li><li>与 RestTemplate 集成</li><li>与 Eureka 集成</li></ul><hr><h2 id="二、ribbon使用" tabindex="-1"><a class="header-anchor" href="#二、ribbon使用"><span>二、Ribbon使用</span></a></h2><h3 id="_2-1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_2-1-添加依赖"><span>2.1 添加依赖</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- Eureka Client 已包含 Ribbon --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-配置resttemplate" tabindex="-1"><a class="header-anchor" href="#_2-2-配置resttemplate"><span>2.2 配置RestTemplate</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token annotation punctuation">@LoadBalanced</span>  <span class="token comment">// 启用负载均衡</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-服务调用" tabindex="-1"><a class="header-anchor" href="#_2-3-服务调用"><span>2.3 服务调用</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderController</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/order/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 通过服务名调用（自动负载均衡）</span></span>
<span class="line">        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;http://user-service/api/users/&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、负载均衡策略" tabindex="-1"><a class="header-anchor" href="#三、负载均衡策略"><span>三、负载均衡策略</span></a></h2><h3 id="_3-1-内置策略" tabindex="-1"><a class="header-anchor" href="#_3-1-内置策略"><span>3.1 内置策略</span></a></h3><table><thead><tr><th>策略</th><th>说明</th></tr></thead><tbody><tr><td>RoundRobinRule</td><td>轮询（默认）</td></tr><tr><td>RandomRule</td><td>随机</td></tr><tr><td>RetryRule</td><td>重试</td></tr><tr><td>WeightedResponseTimeRule</td><td>响应时间加权</td></tr><tr><td>BestAvailableRule</td><td>最低并发</td></tr><tr><td>AvailabilityFilteringRule</td><td>可用性过滤</td></tr><tr><td>ZoneAvoidanceRule</td><td>区域感知</td></tr></tbody></table><h3 id="_3-2-全局配置" tabindex="-1"><a class="header-anchor" href="#_3-2-全局配置"><span>3.2 全局配置</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RibbonConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">IRule</span> <span class="token function">ribbonRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 使用随机策略</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RandomRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-配置文件配置" tabindex="-1"><a class="header-anchor" href="#_3-3-配置文件配置"><span>3.3 配置文件配置</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># 全局配置</span></span>
<span class="line"><span class="token key atrule">ribbon</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">NFLoadBalancerRuleClassName</span><span class="token punctuation">:</span> com.netflix.loadbalancer.RandomRule</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定服务配置</span></span>
<span class="line"><span class="token key atrule">user-service</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">ribbon</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">NFLoadBalancerRuleClassName</span><span class="token punctuation">:</span> com.netflix.loadbalancer.RandomRule</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、自定义负载均衡" tabindex="-1"><a class="header-anchor" href="#四、自定义负载均衡"><span>四、自定义负载均衡</span></a></h2><h3 id="_4-1-自定义规则" tabindex="-1"><a class="header-anchor" href="#_4-1-自定义规则"><span>4.1 自定义规则</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRule</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractLoadBalancerRule</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Server</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">&gt;</span></span> servers <span class="token operator">=</span> <span class="token function">getLoadBalancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAllServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 自定义选择逻辑</span></span>
<span class="line">        <span class="token keyword">return</span> servers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initWithNiwsConfig</span><span class="token punctuation">(</span><span class="token class-name">IClientConfig</span> clientConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-使用自定义规则" tabindex="-1"><a class="header-anchor" href="#_4-2-使用自定义规则"><span>4.2 使用自定义规则</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">IRule</span> <span class="token function">ribbonRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、总结" tabindex="-1"><a class="header-anchor" href="#五、总结"><span>五、总结</span></a></h2><p>✅ <strong>本章学习内容：</strong></p><ul><li>负载均衡概述</li><li>Ribbon 使用</li><li>负载均衡策略</li><li>自定义负载均衡</li></ul><p>✅ <strong>核心要点：</strong></p><ul><li>Ribbon 客户端负载均衡</li><li>@LoadBalanced 启用负载均衡</li><li>支持多种策略</li></ul><p><strong>下一章预告：</strong> 我们将学习 OpenFeign 服务调用。</p>`,39)])])}const o=s(t,[["render",p]]),r=JSON.parse('{"path":"/tutorials/java-backend/springcloud/3.Ribbonfuzaijunheng.html","title":"Ribbon负载均衡","lang":"zh-CN","frontmatter":{"title":"Ribbon负载均衡"},"headers":[{"level":2,"title":"一、负载均衡概述","slug":"一、负载均衡概述","link":"#一、负载均衡概述","children":[{"level":3,"title":"1.1 什么是负载均衡？","slug":"_1-1-什么是负载均衡","link":"#_1-1-什么是负载均衡","children":[]},{"level":3,"title":"1.2 Ribbon简介","slug":"_1-2-ribbon简介","link":"#_1-2-ribbon简介","children":[]}]},{"level":2,"title":"二、Ribbon使用","slug":"二、ribbon使用","link":"#二、ribbon使用","children":[{"level":3,"title":"2.1 添加依赖","slug":"_2-1-添加依赖","link":"#_2-1-添加依赖","children":[]},{"level":3,"title":"2.2 配置RestTemplate","slug":"_2-2-配置resttemplate","link":"#_2-2-配置resttemplate","children":[]},{"level":3,"title":"2.3 服务调用","slug":"_2-3-服务调用","link":"#_2-3-服务调用","children":[]}]},{"level":2,"title":"三、负载均衡策略","slug":"三、负载均衡策略","link":"#三、负载均衡策略","children":[{"level":3,"title":"3.1 内置策略","slug":"_3-1-内置策略","link":"#_3-1-内置策略","children":[]},{"level":3,"title":"3.2 全局配置","slug":"_3-2-全局配置","link":"#_3-2-全局配置","children":[]},{"level":3,"title":"3.3 配置文件配置","slug":"_3-3-配置文件配置","link":"#_3-3-配置文件配置","children":[]}]},{"level":2,"title":"四、自定义负载均衡","slug":"四、自定义负载均衡","link":"#四、自定义负载均衡","children":[{"level":3,"title":"4.1 自定义规则","slug":"_4-1-自定义规则","link":"#_4-1-自定义规则","children":[]},{"level":3,"title":"4.2 使用自定义规则","slug":"_4-2-使用自定义规则","link":"#_4-2-使用自定义规则","children":[]}]},{"level":2,"title":"五、总结","slug":"五、总结","link":"#五、总结","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/springcloud/3.Ribbon负载均衡.md"}');export{o as comp,r as data};
