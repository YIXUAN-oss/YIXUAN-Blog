import{_ as d,c as u,d as i,e as t,b as n,w as a,f as s,r as o,o as p}from"./app-QnWV-YHu.js";const h={},g={href:"https://leetcode.cn/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://programmercarl.com/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://labuladong.github.io/algo/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://leetcode.cn/problem-list/2cktkvj/",target:"_blank",rel:"noopener noreferrer"};function c(x,l){const e=o("RouteLink"),r=o("ExternalLinkIcon");return p(),u("div",null,[l[39]||(l[39]=i('<h1 id="数据结构与算法教程" tabindex="-1"><a class="header-anchor" href="#数据结构与算法教程"><span>数据结构与算法教程</span></a></h1><blockquote><p>📊 <strong>系统化算法学习路线</strong> | 从基础到进阶 | 包含面试高频考点</p><p>💡 <strong>使用建议</strong>：理论结合实践，在LeetCode上刷题巩固</p></blockquote><hr><h2 id="📖-教程结构" tabindex="-1"><a class="header-anchor" href="#📖-教程结构"><span>📖 教程结构</span></a></h2><h3 id="第一章-数组与链表" tabindex="-1"><a class="header-anchor" href="#第一章-数组与链表"><span>第一章：数组与链表</span></a></h3><blockquote><p>掌握最基础的线性数据结构</p></blockquote>',6)),t("table",null,[l[4]||(l[4]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"章节"),t("th",null,"核心内容"),t("th",null,"面试频率")])],-1)),t("tbody",null,[t("tr",null,[l[1]||(l[1]=t("td",null,"01",-1)),t("td",null,[n(e,{to:"/tutorials/computer-basics/data-structures/basic/array.html"},{default:a(()=>[...l[0]||(l[0]=[s("数组与链表",-1)])]),_:1})]),l[2]||(l[2]=t("td",null,"顺序表、单链表、双链表、循环链表",-1)),l[3]||(l[3]=t("td",null,"⭐⭐⭐⭐⭐",-1))])])]),l[40]||(l[40]=i('<p><strong>学习目标：</strong></p><ul><li>✅ 掌握数组和链表的特点</li><li>✅ 理解时间复杂度和空间复杂度</li><li>✅ 掌握链表的基本操作</li></ul><p><strong>重点面试题：</strong></p><ul><li>数组和链表的区别</li><li>反转链表</li><li>链表环检测</li><li>合并两个有序链表</li></ul><hr><h3 id="第二章-栈与队列" tabindex="-1"><a class="header-anchor" href="#第二章-栈与队列"><span>第二章：栈与队列</span></a></h3><blockquote><p>理解后进先出和先进先出</p></blockquote>',7)),t("table",null,[l[9]||(l[9]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"章节"),t("th",null,"核心内容"),t("th",null,"面试频率")])],-1)),t("tbody",null,[t("tr",null,[l[6]||(l[6]=t("td",null,"02",-1)),t("td",null,[n(e,{to:"/tutorials/computer-basics/data-structures/basic/stack-queue.html"},{default:a(()=>[...l[5]||(l[5]=[s("栈与队列",-1)])]),_:1})]),l[7]||(l[7]=t("td",null,"栈、队列、双端队列、优先队列",-1)),l[8]||(l[8]=t("td",null,"⭐⭐⭐⭐⭐",-1))])])]),l[41]||(l[41]=i('<p><strong>学习目标：</strong></p><ul><li>✅ 掌握栈和队列的特性</li><li>✅ 理解栈的应用场景</li><li>✅ 了解单调栈和单调队列</li></ul><p><strong>重点面试题：</strong></p><ul><li>用栈实现队列</li><li>用队列实现栈</li><li>有效的括号匹配</li><li>最小栈</li></ul><hr><h3 id="第三章-哈希表" tabindex="-1"><a class="header-anchor" href="#第三章-哈希表"><span>第三章：哈希表</span></a></h3><blockquote><p>理解O(1)时间复杂度的查找</p></blockquote>',7)),t("table",null,[l[14]||(l[14]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"章节"),t("th",null,"核心内容"),t("th",null,"面试频率")])],-1)),t("tbody",null,[t("tr",null,[l[11]||(l[11]=t("td",null,"03",-1)),t("td",null,[n(e,{to:"/tutorials/computer-basics/data-structures/basic/hash.html"},{default:a(()=>[...l[10]||(l[10]=[s("哈希表",-1)])]),_:1})]),l[12]||(l[12]=t("td",null,"哈希函数、冲突处理、负载因子",-1)),l[13]||(l[13]=t("td",null,"⭐⭐⭐⭐⭐",-1))])])]),l[42]||(l[42]=i('<p><strong>学习目标：</strong></p><ul><li>✅ 理解哈希表的原理</li><li>✅ 掌握冲突解决方法</li><li>✅ 了解哈希表的应用</li></ul><p><strong>重点面试题：</strong></p><ul><li>两数之和</li><li>字母异位词分组</li><li>HashMap的实现原理</li></ul><hr><h3 id="第四章-二叉树" tabindex="-1"><a class="header-anchor" href="#第四章-二叉树"><span>第四章：二叉树</span></a></h3><blockquote><p>掌握树形结构的基础</p></blockquote>',7)),t("table",null,[l[19]||(l[19]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"章节"),t("th",null,"核心内容"),t("th",null,"面试频率")])],-1)),t("tbody",null,[t("tr",null,[l[16]||(l[16]=t("td",null,"04",-1)),t("td",null,[n(e,{to:"/tutorials/computer-basics/data-structures/tree/binary-tree.html"},{default:a(()=>[...l[15]||(l[15]=[s("二叉树",-1)])]),_:1})]),l[17]||(l[17]=t("td",null,"二叉树遍历、BST、完全二叉树",-1)),l[18]||(l[18]=t("td",null,"⭐⭐⭐⭐⭐",-1))])])]),l[43]||(l[43]=i('<p><strong>学习目标：</strong></p><ul><li>✅ 掌握三种遍历方式</li><li>✅ 理解二叉搜索树</li><li>✅ 掌握递归思维</li></ul><p><strong>重点面试题：</strong></p><ul><li>前中后序遍历</li><li>层序遍历</li><li>二叉树的最大深度</li><li>验证二叉搜索树</li></ul><hr><h3 id="第五章-排序算法" tabindex="-1"><a class="header-anchor" href="#第五章-排序算法"><span>第五章：排序算法</span></a></h3><blockquote><p>掌握常见排序算法</p></blockquote>',7)),t("table",null,[l[24]||(l[24]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"章节"),t("th",null,"核心内容"),t("th",null,"面试频率")])],-1)),t("tbody",null,[t("tr",null,[l[21]||(l[21]=t("td",null,"05",-1)),t("td",null,[n(e,{to:"/tutorials/computer-basics/data-structures/algorithm/sort.html"},{default:a(()=>[...l[20]||(l[20]=[s("排序算法",-1)])]),_:1})]),l[22]||(l[22]=t("td",null,"冒泡、选择、插入、快排、归并、堆排",-1)),l[23]||(l[23]=t("td",null,"⭐⭐⭐⭐⭐",-1))])])]),l[44]||(l[44]=i('<p><strong>学习目标：</strong></p><ul><li>✅ 掌握各种排序算法</li><li>✅ 理解时间空间复杂度</li><li>✅ 了解稳定性</li></ul><p><strong>重点面试题：</strong></p><ul><li>手写快速排序</li><li>手写归并排序</li><li>排序算法对比</li><li>TopK问题</li></ul><hr><h3 id="第六章-动态规划" tabindex="-1"><a class="header-anchor" href="#第六章-动态规划"><span>第六章：动态规划</span></a></h3><blockquote><p>掌握最重要的算法思想</p></blockquote>',7)),t("table",null,[l[29]||(l[29]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"章节"),t("th",null,"核心内容"),t("th",null,"面试频率")])],-1)),t("tbody",null,[t("tr",null,[l[26]||(l[26]=t("td",null,"06",-1)),t("td",null,[n(e,{to:"/tutorials/computer-basics/data-structures/algorithm/dp.html"},{default:a(()=>[...l[25]||(l[25]=[s("动态规划",-1)])]),_:1})]),l[27]||(l[27]=t("td",null,"状态定义、状态转移、优化",-1)),l[28]||(l[28]=t("td",null,"⭐⭐⭐⭐⭐",-1))])])]),l[45]||(l[45]=i(`<p><strong>学习目标：</strong></p><ul><li>✅ 理解动态规划思想</li><li>✅ 掌握状态转移方程</li><li>✅ 学会空间优化</li></ul><p><strong>重点面试题：</strong></p><ul><li>爬楼梯</li><li>最长递增子序列</li><li>背包问题</li><li>股票买卖</li></ul><hr><h2 id="🎯-学习路线建议" tabindex="-1"><a class="header-anchor" href="#🎯-学习路线建议"><span>🎯 学习路线建议</span></a></h2><h3 id="🔰-基础学习路线-2-3个月" tabindex="-1"><a class="header-anchor" href="#🔰-基础学习路线-2-3个月"><span>🔰 基础学习路线（2-3个月）</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid" data-title="mermaid"><pre><code><span class="line"><span class="token keyword">graph</span> LR</span>
<span class="line">    A<span class="token text string">[数组链表]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">[栈队列]</span></span>
<span class="line">    B <span class="token arrow operator">--&gt;</span> C<span class="token text string">[哈希表]</span></span>
<span class="line">    C <span class="token arrow operator">--&gt;</span> D<span class="token text string">[二叉树]</span></span>
<span class="line">    D <span class="token arrow operator">--&gt;</span> E<span class="token text string">[排序算法]</span></span>
<span class="line">    E <span class="token arrow operator">--&gt;</span> F<span class="token text string">[动态规划]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>推荐学习顺序：</strong></p><ol><li>数组与链表（2周）- 打好基础</li><li>栈与队列（1周）- 理解LIFO/FIFO</li><li>哈希表（1周）- 掌握快速查找</li><li>二叉树（2周）- <strong>重点</strong>：递归思维</li><li>排序算法（2周）- 必须掌握</li><li>动态规划（3周）- <strong>难点</strong>：需多练习</li></ol><h3 id="🚀-刷题建议" tabindex="-1"><a class="header-anchor" href="#🚀-刷题建议"><span>🚀 刷题建议</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Easy题 (100道) → Medium题 (150道) → Hard题 (50道)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="📝-面试高频考点汇总" tabindex="-1"><a class="header-anchor" href="#📝-面试高频考点汇总"><span>📝 面试高频考点汇总</span></a></h2><h3 id="⭐⭐⭐⭐⭐-必考考点" tabindex="-1"><a class="header-anchor" href="#⭐⭐⭐⭐⭐-必考考点"><span>⭐⭐⭐⭐⭐ 必考考点</span></a></h3><ol><li><strong>反转链表</strong></li><li><strong>两数之和</strong></li><li><strong>有效的括号</strong></li><li><strong>二叉树遍历</strong></li><li><strong>快速排序</strong></li><li><strong>爬楼梯（DP入门）</strong></li><li><strong>最长递增子序列</strong></li><li><strong>背包问题</strong></li><li><strong>岛屿数量（DFS/BFS）</strong></li><li><strong>LRU缓存</strong></li></ol><h3 id="⭐⭐⭐⭐-常考考点" tabindex="-1"><a class="header-anchor" href="#⭐⭐⭐⭐-常考考点"><span>⭐⭐⭐⭐ 常考考点</span></a></h3><ol><li><strong>链表环检测</strong></li><li><strong>合并K个有序链表</strong></li><li><strong>最小栈</strong></li><li><strong>二叉树的最大深度</strong></li><li><strong>归并排序</strong></li><li><strong>Top K问题</strong></li><li><strong>字符串匹配</strong></li><li><strong>滑动窗口</strong></li></ol><hr><h2 id="💡-学习建议" tabindex="-1"><a class="header-anchor" href="#💡-学习建议"><span>💡 学习建议</span></a></h2><h3 id="✅-推荐做法" tabindex="-1"><a class="header-anchor" href="#✅-推荐做法"><span>✅ 推荐做法</span></a></h3><ol><li><strong>理解为主</strong> - 先理解原理再写代码</li><li><strong>多写多练</strong> - 每天至少1-2道题</li><li><strong>总结模板</strong> - 整理常见题型模板</li><li><strong>复习巩固</strong> - 定期回顾做过的题</li><li><strong>画图辅助</strong> - 画图理解算法过程</li></ol><h3 id="❌-避免误区" tabindex="-1"><a class="header-anchor" href="#❌-避免误区"><span>❌ 避免误区</span></a></h3><ol><li>❌ 只看不练</li><li>❌ 死记硬背代码</li><li>❌ 忽视时间复杂度分析</li><li>❌ 遇到困难就放弃</li></ol><hr><h2 id="🛠️-刷题平台" tabindex="-1"><a class="header-anchor" href="#🛠️-刷题平台"><span>🛠️ 刷题平台</span></a></h2><ul><li><strong>LeetCode</strong> - 最推荐，题库完整</li><li><strong>牛客网</strong> - 针对国内面试</li><li><strong>洛谷</strong> - 算法竞赛</li><li><strong>Codeforces</strong> - 国际竞赛</li></ul><hr><h2 id="📚-推荐资源" tabindex="-1"><a class="header-anchor" href="#📚-推荐资源"><span>📚 推荐资源</span></a></h2><h3 id="书籍推荐" tabindex="-1"><a class="header-anchor" href="#书籍推荐"><span>书籍推荐</span></a></h3><ul><li>《算法导论》(CLRS)</li><li>《数据结构与算法分析》- Mark Allen Weiss</li><li>《剑指Offer》</li><li>《labuladong的算法小抄》</li></ul><h3 id="在线资源" tabindex="-1"><a class="header-anchor" href="#在线资源"><span>在线资源</span></a></h3>`,32)),t("ul",null,[t("li",null,[t("a",g,[l[30]||(l[30]=s("LeetCode中文站",-1)),n(r)])]),t("li",null,[t("a",b,[l[31]||(l[31]=s("代码随想录",-1)),n(r)])]),t("li",null,[t("a",k,[l[32]||(l[32]=s("labuladong的算法网站",-1)),n(r)])])]),l[46]||(l[46]=i('<hr><h2 id="📊-学习进度追踪" tabindex="-1"><a class="header-anchor" href="#📊-学习进度追踪"><span>📊 学习进度追踪</span></a></h2><h3 id="基础阶段-✅" tabindex="-1"><a class="header-anchor" href="#基础阶段-✅"><span>基础阶段 ✅</span></a></h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 数组与链表 (LeetCode 20题)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 栈与队列 (LeetCode 10题)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 哈希表 (LeetCode 15题)</li></ul><h3 id="进阶阶段-🔄" tabindex="-1"><a class="header-anchor" href="#进阶阶段-🔄"><span>进阶阶段 🔄</span></a></h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 二叉树 (LeetCode 30题)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 排序算法 (LeetCode 15题)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> DFS/BFS (LeetCode 20题)</li></ul><h3 id="高级阶段-⏳" tabindex="-1"><a class="header-anchor" href="#高级阶段-⏳"><span>高级阶段 ⏳</span></a></h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 动态规划 (LeetCode 40题)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 贪心算法 (LeetCode 15题)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 图论算法 (LeetCode 15题)</li></ul><hr>',9)),t("p",null,[l[34]||(l[34]=t("strong",null,"开始学习",-1)),l[35]||(l[35]=s(" → ",-1)),n(e,{to:"/tutorials/computer-basics/data-structures/basic/array.html"},{default:a(()=>[...l[33]||(l[33]=[s("第一章 - 数组与链表",-1)])]),_:1})]),t("p",null,[l[37]||(l[37]=t("strong",null,"开始刷题",-1)),l[38]||(l[38]=s(" → ",-1)),t("a",m,[l[36]||(l[36]=s("LeetCode热题100",-1)),n(r)])])])}const v=d(h,[["render",c]]),y=JSON.parse('{"path":"/tutorials/computer-basics/data-structures/","title":"数据结构与算法教程","lang":"zh-CN","frontmatter":{"title":"数据结构与算法教程","autoGroup":false,"autoSort":false,"sidebarDepth":0},"headers":[{"level":2,"title":"📖 教程结构","slug":"📖-教程结构","link":"#📖-教程结构","children":[{"level":3,"title":"第一章：数组与链表","slug":"第一章-数组与链表","link":"#第一章-数组与链表","children":[]},{"level":3,"title":"第二章：栈与队列","slug":"第二章-栈与队列","link":"#第二章-栈与队列","children":[]},{"level":3,"title":"第三章：哈希表","slug":"第三章-哈希表","link":"#第三章-哈希表","children":[]},{"level":3,"title":"第四章：二叉树","slug":"第四章-二叉树","link":"#第四章-二叉树","children":[]},{"level":3,"title":"第五章：排序算法","slug":"第五章-排序算法","link":"#第五章-排序算法","children":[]},{"level":3,"title":"第六章：动态规划","slug":"第六章-动态规划","link":"#第六章-动态规划","children":[]}]},{"level":2,"title":"🎯 学习路线建议","slug":"🎯-学习路线建议","link":"#🎯-学习路线建议","children":[{"level":3,"title":"🔰 基础学习路线（2-3个月）","slug":"🔰-基础学习路线-2-3个月","link":"#🔰-基础学习路线-2-3个月","children":[]},{"level":3,"title":"🚀 刷题建议","slug":"🚀-刷题建议","link":"#🚀-刷题建议","children":[]}]},{"level":2,"title":"📝 面试高频考点汇总","slug":"📝-面试高频考点汇总","link":"#📝-面试高频考点汇总","children":[{"level":3,"title":"⭐⭐⭐⭐⭐ 必考考点","slug":"⭐⭐⭐⭐⭐-必考考点","link":"#⭐⭐⭐⭐⭐-必考考点","children":[]},{"level":3,"title":"⭐⭐⭐⭐ 常考考点","slug":"⭐⭐⭐⭐-常考考点","link":"#⭐⭐⭐⭐-常考考点","children":[]}]},{"level":2,"title":"💡 学习建议","slug":"💡-学习建议","link":"#💡-学习建议","children":[{"level":3,"title":"✅ 推荐做法","slug":"✅-推荐做法","link":"#✅-推荐做法","children":[]},{"level":3,"title":"❌ 避免误区","slug":"❌-避免误区","link":"#❌-避免误区","children":[]}]},{"level":2,"title":"🛠️ 刷题平台","slug":"🛠️-刷题平台","link":"#🛠️-刷题平台","children":[]},{"level":2,"title":"📚 推荐资源","slug":"📚-推荐资源","link":"#📚-推荐资源","children":[{"level":3,"title":"书籍推荐","slug":"书籍推荐","link":"#书籍推荐","children":[]},{"level":3,"title":"在线资源","slug":"在线资源","link":"#在线资源","children":[]}]},{"level":2,"title":"📊 学习进度追踪","slug":"📊-学习进度追踪","link":"#📊-学习进度追踪","children":[{"level":3,"title":"基础阶段 ✅","slug":"基础阶段-✅","link":"#基础阶段-✅","children":[]},{"level":3,"title":"进阶阶段 🔄","slug":"进阶阶段-🔄","link":"#进阶阶段-🔄","children":[]},{"level":3,"title":"高级阶段 ⏳","slug":"高级阶段-⏳","link":"#高级阶段-⏳","children":[]}]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/computer-basics/data-structures/README.md"}');export{v as comp,y as data};
