import{_ as l,c as i,d as o,e as a,f as s,b as t,w as e,r as c,o as u}from"./app-BVgOaNeG.js";const r={};function d(k,n){const p=c("RouteLink");return u(),i("div",null,[n[8]||(n[8]=o(`<h1 id="字符串操作" tabindex="-1"><a class="header-anchor" href="#字符串操作"><span>字符串操作</span></a></h1><h2 id="一、字符串的定义" tabindex="-1"><a class="header-anchor" href="#一、字符串的定义"><span>一、字符串的定义</span></a></h2><h3 id="_1-三种定义方式" tabindex="-1"><a class="header-anchor" href="#_1-三种定义方式"><span>1. 三种定义方式</span></a></h3><p>字符串在Python中有多种定义形式:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 1. 单引号定义法</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&#39;你好&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 双引号定义法</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;你好&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 三引号定义法（支持换行）</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;你好</span>
<span class="line">Python</span>
<span class="line">世界&quot;&quot;&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-引号的嵌套" tabindex="-1"><a class="header-anchor" href="#_2-引号的嵌套"><span>2. 引号的嵌套</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 在字符串内包含双引号</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&#39;&quot;你好&quot;&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token comment"># &quot;你好&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在字符串内包含单引号</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;&#39;你好&#39;&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token comment"># &#39;你好&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用转义字符\\解除引号的效用</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;\\&quot;你好\\&quot;&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token comment"># &quot;你好&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-转义字符" tabindex="-1"><a class="header-anchor" href="#_3-转义字符"><span>3. 转义字符</span></a></h3><table><thead><tr><th>转义字符</th><th>说明</th></tr></thead><tbody><tr><td>\\n</td><td>换行</td></tr><tr><td>\\t</td><td>制表符（Tab）</td></tr><tr><td>\\</td><td>反斜杠</td></tr><tr><td>&#39;</td><td>单引号</td></tr><tr><td>&quot;</td><td>双引号</td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello\\nWorld&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 换行</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Name:\\tAge&quot;</span><span class="token punctuation">)</span>    <span class="token comment"># 制表符</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users&quot;</span><span class="token punctuation">)</span>     <span class="token comment"># 反斜杠</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、字符串的拼接" tabindex="-1"><a class="header-anchor" href="#二、字符串的拼接"><span>二、字符串的拼接</span></a></h2><h3 id="_1-使用-号拼接" tabindex="-1"><a class="header-anchor" href="#_1-使用-号拼接"><span>1. 使用+号拼接</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">first_name <span class="token operator">=</span> <span class="token string">&quot;张&quot;</span></span>
<span class="line">last_name <span class="token operator">=</span> <span class="token string">&quot;三&quot;</span></span>
<span class="line">full_name <span class="token operator">=</span> first_name <span class="token operator">+</span> last_name</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>full_name<span class="token punctuation">)</span>  <span class="token comment"># 张三</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 拼接多个字符串</span></span>
<span class="line">greeting <span class="token operator">=</span> <span class="token string">&quot;你好，&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;我是&quot;</span> <span class="token operator">+</span> full_name</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span>  <span class="token comment"># 你好，我是张三</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 无法和非字符串类型进行拼接！</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 错误示例</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我今年&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&quot;岁&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># TypeError</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 正确示例</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我今年&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;岁&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、字符串格式化" tabindex="-1"><a class="header-anchor" href="#三、字符串格式化"><span>三、字符串格式化</span></a></h2><h3 id="_1-格式化" tabindex="-1"><a class="header-anchor" href="#_1-格式化"><span>1. %格式化</span></a></h3><h4 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;懿轩&quot;</span></span>
<span class="line">message <span class="token operator">=</span> <span class="token string">&quot;你好，%s&quot;</span> <span class="token operator">%</span> name</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>  <span class="token comment"># 你好，懿轩</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>占位符说明：</strong></p><ul><li><code>%s</code>：字符串</li><li><code>%d</code>：整数</li><li><code>%f</code>：浮点数</li></ul><h4 id="多个变量格式化" tabindex="-1"><a class="header-anchor" href="#多个变量格式化"><span>多个变量格式化</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;懿轩&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line">height <span class="token operator">=</span> <span class="token number">175.5</span></span>
<span class="line"></span>
<span class="line">message <span class="token operator">=</span> <span class="token string">&quot;我是%s，今年%d岁，身高%.1fcm&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>  <span class="token comment"># 我是懿轩，今年18岁，身高175.5cm</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="格式化控制" tabindex="-1"><a class="header-anchor" href="#格式化控制"><span>格式化控制</span></a></h4><p><strong>m.n格式：</strong></p><ul><li><code>m</code>：控制宽度（很少使用）</li><li><code>.n</code>：控制小数点精度，会进行四舍五入</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">num1 <span class="token operator">=</span> <span class="token number">11</span></span>
<span class="line">num2 <span class="token operator">=</span> <span class="token number">11.345</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数字11宽度限制5，结果是:%5d&quot;</span> <span class="token operator">%</span> num1<span class="token punctuation">)</span>  <span class="token comment"># &quot;   11&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数字11.345小数精度2，结果是:%.2f&quot;</span> <span class="token operator">%</span> num2<span class="token punctuation">)</span>  <span class="token comment"># &quot;11.35&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数字11.345宽度7精度2，结果是:%7.2f&quot;</span> <span class="token operator">%</span> num2<span class="token punctuation">)</span>  <span class="token comment"># &quot;  11.35&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-f-string格式化-推荐" tabindex="-1"><a class="header-anchor" href="#_2-f-string格式化-推荐"><span>2. f-string格式化（推荐）</span></a></h3><p>Python 3.6+ 支持，更简洁直观。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;懿轩&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line">price <span class="token operator">=</span> <span class="token number">19.99</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># f-string格式化</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我是</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，今年</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">岁&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;商品价格是</span><span class="token interpolation"><span class="token punctuation">{</span>price<span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 支持表达式</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;1 + 1 = </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;明年我</span><span class="token interpolation"><span class="token punctuation">{</span>age <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">岁&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-format-方法" tabindex="-1"><a class="header-anchor" href="#_3-format-方法"><span>3. format()方法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;懿轩&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 按位置</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是{}，今年{}岁&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 按索引</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是{0}，今年{1}岁，{0}很高兴认识你&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 按关键字</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是{name}，今年{age}岁&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token operator">=</span>name<span class="token punctuation">,</span> age<span class="token operator">=</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、字符串的索引" tabindex="-1"><a class="header-anchor" href="#四、字符串的索引"><span>四、字符串的索引</span></a></h2><h3 id="_1-下标访问" tabindex="-1"><a class="header-anchor" href="#_1-下标访问"><span>1. 下标访问</span></a></h3><p>和列表、元组一样，字符串也可以通过下标进行访问：</p><ul><li>从前向后，下标从0开始</li><li>从后向前，下标从-1开始</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 通过下标索引取值</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># h</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># w</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># d</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># r</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 字符串是不可变的，不能通过下标修改字符！</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span></span>
<span class="line">my_str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;H&quot;</span>  <span class="token comment"># ❌ TypeError: &#39;str&#39; object does not support item assignment</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、字符串的常用方法" tabindex="-1"><a class="header-anchor" href="#五、字符串的常用方法"><span>五、字符串的常用方法</span></a></h2><h3 id="_1-查找方法" tabindex="-1"><a class="header-anchor" href="#_1-查找方法"><span>1. 查找方法</span></a></h3><h4 id="index-查找子串位置" tabindex="-1"><a class="header-anchor" href="#index-查找子串位置"><span>index() - 查找子串位置</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line">index <span class="token operator">=</span> my_str<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>  <span class="token comment"># 6</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果找不到，会报错</span></span>
<span class="line"><span class="token comment"># index = my_str.index(&quot;python&quot;)  # ValueError</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="find-查找子串位置-推荐" tabindex="-1"><a class="header-anchor" href="#find-查找子串位置-推荐"><span>find() - 查找子串位置（推荐）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line">index <span class="token operator">=</span> my_str<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>  <span class="token comment"># 6</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果找不到，返回-1</span></span>
<span class="line">index <span class="token operator">=</span> my_str<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>  <span class="token comment"># -1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="count-统计出现次数" tabindex="-1"><a class="header-anchor" href="#count-统计出现次数"><span>count() - 统计出现次数</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world hello python&quot;</span></span>
<span class="line">count <span class="token operator">=</span> my_str<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>  <span class="token comment"># 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-替换方法" tabindex="-1"><a class="header-anchor" href="#_2-替换方法"><span>2. 替换方法</span></a></h3><h4 id="replace-替换字符串" tabindex="-1"><a class="header-anchor" href="#replace-替换字符串"><span>replace() - 替换字符串</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line">new_str <span class="token operator">=</span> my_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span>  <span class="token comment"># hello python</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 原字符串不变</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span>  <span class="token comment"># hello world</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 替换所有匹配项</span></span>
<span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world hello python&quot;</span></span>
<span class="line">new_str <span class="token operator">=</span> my_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span>  <span class="token comment"># hi world hi python</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-分割方法" tabindex="-1"><a class="header-anchor" href="#_3-分割方法"><span>3. 分割方法</span></a></h3><h4 id="split-分割字符串" tabindex="-1"><a class="header-anchor" href="#split-分割字符串"><span>split() - 分割字符串</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world python&quot;</span></span>
<span class="line">str_list <span class="token operator">=</span> my_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str_list<span class="token punctuation">)</span>  <span class="token comment"># [&#39;hello&#39;, &#39;world&#39;, &#39;python&#39;]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>str_list<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;list&#39;&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 按其他分隔符分割</span></span>
<span class="line">date <span class="token operator">=</span> <span class="token string">&quot;2025-01-18&quot;</span></span>
<span class="line">date_list <span class="token operator">=</span> date<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>date_list<span class="token punctuation">)</span>  <span class="token comment"># [&#39;2025&#39;, &#39;01&#39;, &#39;18&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-去除空白" tabindex="-1"><a class="header-anchor" href="#_4-去除空白"><span>4. 去除空白</span></a></h3><h4 id="strip-去除两端空白" tabindex="-1"><a class="header-anchor" href="#strip-去除两端空白"><span>strip() - 去除两端空白</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;  hello world  &quot;</span></span>
<span class="line">new_str <span class="token operator">=</span> my_str<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>new_str<span class="token punctuation">}</span></span><span class="token string">&#39;&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># &#39;hello world&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 去除指定字符</span></span>
<span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;###hello###&quot;</span></span>
<span class="line">new_str <span class="token operator">=</span> my_str<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span>  <span class="token comment"># hello</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lstrip-rstrip-去除左-右空白" tabindex="-1"><a class="header-anchor" href="#lstrip-rstrip-去除左-右空白"><span>lstrip() / rstrip() - 去除左/右空白</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;  hello world  &quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>my_str<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># &#39;hello world  &#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>my_str<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># &#39;  hello world&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_5-大小写转换" tabindex="-1"><a class="header-anchor" href="#_5-大小写转换"><span>5. 大小写转换</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># HELLO WORLD（转大写）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># hello world（转小写）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>capitalize<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># Hello world（首字母大写）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># Hello World（每个单词首字母大写）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_6-判断方法" tabindex="-1"><a class="header-anchor" href="#_6-判断方法"><span>6. 判断方法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 判断是否以指定字符串开头/结尾</span></span>
<span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># True</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 判断是否全是字母/数字</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;abc123&quot;</span><span class="token punctuation">.</span>isalnum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 判断是否全是空白字符</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;   &quot;</span><span class="token punctuation">.</span>isspace<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_7-连接方法" tabindex="-1"><a class="header-anchor" href="#_7-连接方法"><span>7. 连接方法</span></a></h3><h4 id="join-连接字符串" tabindex="-1"><a class="header-anchor" href="#join-连接字符串"><span>join() - 连接字符串</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 用指定字符连接列表中的字符串</span></span>
<span class="line">words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span></span>
<span class="line">result <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>words<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># hello world python</span></span>
<span class="line"></span>
<span class="line">result <span class="token operator">=</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>words<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># hello-world-python</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 连接字符串中的每个字符</span></span>
<span class="line">result <span class="token operator">=</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># h*e*l*l*o</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、字符串切片" tabindex="-1"><a class="header-anchor" href="#六、字符串切片"><span>六、字符串切片</span></a></h2><h3 id="_1-切片语法" tabindex="-1"><a class="header-anchor" href="#_1-切片语法"><span>1. 切片语法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">字符串<span class="token punctuation">[</span>start<span class="token punctuation">:</span>end<span class="token punctuation">:</span>step<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>start</code>：起始索引（包含），默认为0</li><li><code>end</code>：结束索引（不包含），默认为字符串长度</li><li><code>step</code>：步长，默认为1</li></ul><h3 id="_2-切片示例" tabindex="-1"><a class="header-anchor" href="#_2-切片示例"><span>2. 切片示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">my_str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 基本切片</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># hello</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># world</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment"># hello（省略start）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment"># world（省略end）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 负数索引</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># world</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># hello</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 步长切片</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># hlowrd（步长为2）</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># dlrow olleh（反转字符串）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、实战练习" tabindex="-1"><a class="header-anchor" href="#七、实战练习"><span>七、实战练习</span></a></h2><h3 id="练习1-字符串处理" tabindex="-1"><a class="header-anchor" href="#练习1-字符串处理"><span>练习1：字符串处理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 用户输入处理</span></span>
<span class="line">user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入内容：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 去除两端空白</span></span>
<span class="line">user_input <span class="token operator">=</span> user_input<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 转换为小写</span></span>
<span class="line">user_input <span class="token operator">=</span> user_input<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 替换敏感词</span></span>
<span class="line">user_input <span class="token operator">=</span> user_input<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;敏感词&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;处理后的内容：</span><span class="token interpolation"><span class="token punctuation">{</span>user_input<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-统计字符" tabindex="-1"><a class="header-anchor" href="#练习2-统计字符"><span>练习2：统计字符</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">text <span class="token operator">=</span> <span class="token string">&quot;Hello World! Welcome to Python Programming.&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 统计字符数量</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;总字符数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字母o出现次数：</span><span class="token interpolation"><span class="token punctuation">{</span>text<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;单词数量：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 转换大小写</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;全部大写：</span><span class="token interpolation"><span class="token punctuation">{</span>text<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;全部小写：</span><span class="token interpolation"><span class="token punctuation">{</span>text<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习3-提取信息" tabindex="-1"><a class="header-anchor" href="#练习3-提取信息"><span>练习3：提取信息</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 从邮箱中提取用户名和域名</span></span>
<span class="line">email <span class="token operator">=</span> <span class="token string">&quot;zhangsan@example.com&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 分割邮箱</span></span>
<span class="line">parts <span class="token operator">=</span> email<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span></span>
<span class="line">username <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">domain <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;用户名：</span><span class="token interpolation"><span class="token punctuation">{</span>username<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;域名：</span><span class="token interpolation"><span class="token punctuation">{</span>domain<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 或者使用索引</span></span>
<span class="line">at_index <span class="token operator">=</span> email<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span></span>
<span class="line">username <span class="token operator">=</span> email<span class="token punctuation">[</span><span class="token punctuation">:</span>at_index<span class="token punctuation">]</span></span>
<span class="line">domain <span class="token operator">=</span> email<span class="token punctuation">[</span>at_index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;用户名：</span><span class="token interpolation"><span class="token punctuation">{</span>username<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;域名：</span><span class="token interpolation"><span class="token punctuation">{</span>domain<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、字符串的特点" tabindex="-1"><a class="header-anchor" href="#八、字符串的特点"><span>八、字符串的特点</span></a></h2><p>经过学习，可以总结出字符串有如下特点:</p><ul><li>✅ 可以容纳多个字符</li><li>✅ 数据是有序存储的（下标索引）</li><li>✅ 允许重复字符存在</li><li>❌ 不可以修改（增加或删除字符等）</li><li>✅ 支持for循环遍历</li></ul><p><strong>注意：</strong> 如果必须要修改，只能得到一个新的字符串！</p><hr><h2 id="九、知识点总结" tabindex="-1"><a class="header-anchor" href="#九、知识点总结"><span>九、知识点总结</span></a></h2><h3 id="✅-核心要点" tabindex="-1"><a class="header-anchor" href="#✅-核心要点"><span>✅ 核心要点</span></a></h3><ol><li><strong>字符串定义</strong>：单引号、双引号、三引号</li><li><strong>字符串格式化</strong>：%格式化、f-string（推荐）</li><li><strong>常用方法</strong>：find、replace、split、strip、join</li><li><strong>字符串切片</strong>：[start🔚step]</li><li><strong>不可变性</strong>：字符串不能直接修改</li></ol><h3 id="📝-面试重点" tabindex="-1"><a class="header-anchor" href="#📝-面试重点"><span>📝 面试重点</span></a></h3><ul><li>字符串是不可变对象</li><li>f-string vs %格式化</li><li>常用字符串方法的使用</li><li>字符串切片操作</li></ul><hr>`,104)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),t(p,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/04-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.html"},{default:e(()=>[...n[0]||(n[0]=[s("流程控制",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),t(p,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/06-%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84.html"},{default:e(()=>[...n[1]||(n[1]=[s("列表与元组",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const v=l(r,[["render",d]]),h=JSON.parse('{"path":"/tutorials/python-ai/python/di01zhang-jichubiancheng/05-zifuchuancaozuo.html","title":"字符串操作","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、字符串的定义","slug":"一、字符串的定义","link":"#一、字符串的定义","children":[{"level":3,"title":"1. 三种定义方式","slug":"_1-三种定义方式","link":"#_1-三种定义方式","children":[]},{"level":3,"title":"2. 引号的嵌套","slug":"_2-引号的嵌套","link":"#_2-引号的嵌套","children":[]},{"level":3,"title":"3. 转义字符","slug":"_3-转义字符","link":"#_3-转义字符","children":[]}]},{"level":2,"title":"二、字符串的拼接","slug":"二、字符串的拼接","link":"#二、字符串的拼接","children":[{"level":3,"title":"1. 使用+号拼接","slug":"_1-使用-号拼接","link":"#_1-使用-号拼接","children":[]}]},{"level":2,"title":"三、字符串格式化","slug":"三、字符串格式化","link":"#三、字符串格式化","children":[{"level":3,"title":"1. %格式化","slug":"_1-格式化","link":"#_1-格式化","children":[]},{"level":3,"title":"2. f-string格式化（推荐）","slug":"_2-f-string格式化-推荐","link":"#_2-f-string格式化-推荐","children":[]},{"level":3,"title":"3. format()方法","slug":"_3-format-方法","link":"#_3-format-方法","children":[]}]},{"level":2,"title":"四、字符串的索引","slug":"四、字符串的索引","link":"#四、字符串的索引","children":[{"level":3,"title":"1. 下标访问","slug":"_1-下标访问","link":"#_1-下标访问","children":[]}]},{"level":2,"title":"五、字符串的常用方法","slug":"五、字符串的常用方法","link":"#五、字符串的常用方法","children":[{"level":3,"title":"1. 查找方法","slug":"_1-查找方法","link":"#_1-查找方法","children":[]},{"level":3,"title":"2. 替换方法","slug":"_2-替换方法","link":"#_2-替换方法","children":[]},{"level":3,"title":"3. 分割方法","slug":"_3-分割方法","link":"#_3-分割方法","children":[]},{"level":3,"title":"4. 去除空白","slug":"_4-去除空白","link":"#_4-去除空白","children":[]},{"level":3,"title":"5. 大小写转换","slug":"_5-大小写转换","link":"#_5-大小写转换","children":[]},{"level":3,"title":"6. 判断方法","slug":"_6-判断方法","link":"#_6-判断方法","children":[]},{"level":3,"title":"7. 连接方法","slug":"_7-连接方法","link":"#_7-连接方法","children":[]}]},{"level":2,"title":"六、字符串切片","slug":"六、字符串切片","link":"#六、字符串切片","children":[{"level":3,"title":"1. 切片语法","slug":"_1-切片语法","link":"#_1-切片语法","children":[]},{"level":3,"title":"2. 切片示例","slug":"_2-切片示例","link":"#_2-切片示例","children":[]}]},{"level":2,"title":"七、实战练习","slug":"七、实战练习","link":"#七、实战练习","children":[{"level":3,"title":"练习1：字符串处理","slug":"练习1-字符串处理","link":"#练习1-字符串处理","children":[]},{"level":3,"title":"练习2：统计字符","slug":"练习2-统计字符","link":"#练习2-统计字符","children":[]},{"level":3,"title":"练习3：提取信息","slug":"练习3-提取信息","link":"#练习3-提取信息","children":[]}]},{"level":2,"title":"八、字符串的特点","slug":"八、字符串的特点","link":"#八、字符串的特点","children":[]},{"level":2,"title":"九、知识点总结","slug":"九、知识点总结","link":"#九、知识点总结","children":[{"level":3,"title":"✅ 核心要点","slug":"✅-核心要点","link":"#✅-核心要点","children":[]},{"level":3,"title":"📝 面试重点","slug":"📝-面试重点","link":"#📝-面试重点","children":[]}]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第01章-基础编程/05-字符串操作.md"}');export{v as comp,h as data};
