import{_ as n,c as a,d as t,o as e}from"./app-B7flraU3.js";const p={};function l(c,s){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="mybatis-plus面试题集" tabindex="-1"><a class="header-anchor" href="#mybatis-plus面试题集"><span>MyBatis-Plus面试题集</span></a></h1><h2 id="一、基础概念" tabindex="-1"><a class="header-anchor" href="#一、基础概念"><span>一、基础概念</span></a></h2><h3 id="_1-什么是mybatis-plus" tabindex="-1"><a class="header-anchor" href="#_1-什么是mybatis-plus"><span>1. 什么是MyBatis-Plus？</span></a></h3><p><strong>答：</strong></p><p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><p><strong>核心特性：</strong></p><ul><li>无侵入：只做增强不做改变</li><li>损耗小：启动即会自动注入基本 CRUD</li><li>强大的 CRUD 操作</li><li>支持 Lambda 形式调用</li><li>内置代码生成器</li><li>内置分页插件</li><li>支持多种数据库</li></ul><p><strong>官网：</strong> https://baomidou.com/</p><hr><h3 id="_2-mybatis-plus和mybatis的区别" tabindex="-1"><a class="header-anchor" href="#_2-mybatis-plus和mybatis的区别"><span>2. MyBatis-Plus和MyBatis的区别？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>特性</th><th>MyBatis</th><th>MyBatis-Plus</th></tr></thead><tbody><tr><td><strong>XML文件</strong></td><td>必需</td><td>可选</td></tr><tr><td><strong>CRUD方法</strong></td><td>需手写</td><td>自动提供</td></tr><tr><td><strong>代码量</strong></td><td>多</td><td>少</td></tr><tr><td><strong>开发效率</strong></td><td>中</td><td>高</td></tr><tr><td><strong>分页</strong></td><td>需插件</td><td>内置插件</td></tr><tr><td><strong>代码生成</strong></td><td>需配置</td><td>一键生成</td></tr></tbody></table><p><strong>核心优势：</strong></p><ul><li>减少 80% 的代码量</li><li>保留 MyBatis 的灵活性</li><li>提供强大的条件构造器</li></ul><hr><h3 id="_3-mybatis-plus会侵入mybatis吗" tabindex="-1"><a class="header-anchor" href="#_3-mybatis-plus会侵入mybatis吗"><span>3. MyBatis-Plus会侵入MyBatis吗？</span></a></h3><p><strong>答：</strong></p><p><strong>不会。</strong> MyBatis-Plus 只是增强工具，不修改 MyBatis 核心功能。</p><p><strong>原因：</strong></p><ul><li>通过 BaseMapper 提供通用方法</li><li>通过 SQL 注入器注入方法</li><li>不影响原有 MyBatis 功能</li><li>可以和 MyBatis 混用</li></ul><hr><h2 id="二、crud接口" tabindex="-1"><a class="header-anchor" href="#二、crud接口"><span>二、CRUD接口</span></a></h2><h3 id="_4-basemapper提供了哪些方法" tabindex="-1"><a class="header-anchor" href="#_4-basemapper提供了哪些方法"><span>4. BaseMapper提供了哪些方法？</span></a></h3><p><strong>答：</strong></p><p><strong>Insert：</strong></p><ul><li><code>int insert(T entity)</code></li></ul><p><strong>Delete：</strong></p><ul><li><code>int deleteById(Serializable id)</code></li><li><code>int deleteBatchIds(Collection&lt;? extends Serializable&gt; idList)</code></li><li><code>int delete(Wrapper&lt;T&gt; wrapper)</code></li><li><code>int deleteByMap(Map&lt;String, Object&gt; columnMap)</code></li></ul><p><strong>Update：</strong></p><ul><li><code>int updateById(T entity)</code></li><li><code>int update(T entity, Wrapper&lt;T&gt; updateWrapper)</code></li></ul><p><strong>Select：</strong></p><ul><li><code>T selectById(Serializable id)</code></li><li><code>List&lt;T&gt; selectBatchIds(Collection&lt;? extends Serializable&gt; idList)</code></li><li><code>List&lt;T&gt; selectList(Wrapper&lt;T&gt; queryWrapper)</code></li><li><code>Long selectCount(Wrapper&lt;T&gt; queryWrapper)</code></li><li><code>IPage&lt;T&gt; selectPage(IPage&lt;T&gt; page, Wrapper&lt;T&gt; queryWrapper)</code></li></ul><hr><h3 id="_5-service层和mapper层有什么区别" tabindex="-1"><a class="header-anchor" href="#_5-service层和mapper层有什么区别"><span>5. Service层和Mapper层有什么区别？</span></a></h3><p><strong>答：</strong></p><p><strong>Mapper层（BaseMapper）：</strong></p><ul><li>基础 CRUD 方法</li><li>单表操作</li><li>方法少</li></ul><p><strong>Service层（IService）：</strong></p><ul><li>更多 CRUD 方法</li><li>批量操作</li><li>链式调用</li><li>更高级的功能</li></ul><p><strong>示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// Mapper层</span></span>
<span class="line">userMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Service层</span></span>
<span class="line">userService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// 保存</span></span>
<span class="line">userService<span class="token punctuation">.</span><span class="token function">saveBatch</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 批量保存</span></span>
<span class="line">userService<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 保存或更新</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、条件构造器" tabindex="-1"><a class="header-anchor" href="#三、条件构造器"><span>三、条件构造器</span></a></h2><h3 id="_6-wrapper有哪几种" tabindex="-1"><a class="header-anchor" href="#_6-wrapper有哪几种"><span>6. Wrapper有哪几种？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>类型</th><th>说明</th><th>推荐度</th></tr></thead><tbody><tr><td>QueryWrapper</td><td>普通查询</td><td>★★★</td></tr><tr><td>UpdateWrapper</td><td>普通更新</td><td>★★★</td></tr><tr><td>LambdaQueryWrapper</td><td>Lambda查询</td><td>★★★★★</td></tr><tr><td>LambdaUpdateWrapper</td><td>Lambda更新</td><td>★★★★★</td></tr></tbody></table><p><strong>推荐使用 Lambda 方式：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 普通方式</span></span>
<span class="line"><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Lambda方式（推荐）</span></span>
<span class="line"><span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Lambda 优点：</strong></p><ul><li>类型安全</li><li>编译期检查</li><li>重构友好</li></ul><hr><h3 id="_7-如何实现动态条件查询" tabindex="-1"><a class="header-anchor" href="#_7-如何实现动态条件查询"><span>7. 如何实现动态条件查询？</span></a></h3><p><strong>答：</strong></p><p><strong>使用 condition 参数：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Integer</span> minAge <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Integer</span> maxAge <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>username <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span></span>
<span class="line">       <span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>minAge <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> minAge<span class="token punctuation">)</span></span>
<span class="line">       <span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span>maxAge <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> maxAge<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 只会添加非null的条件</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实战案例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">Integer</span> minAge<span class="token punctuation">,</span> <span class="token class-name">Integer</span> maxAge<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    wrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span></span>
<span class="line">           <span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>minAge <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> minAge<span class="token punctuation">)</span></span>
<span class="line">           <span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span>maxAge <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> maxAge<span class="token punctuation">)</span></span>
<span class="line">           <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、分页插件" tabindex="-1"><a class="header-anchor" href="#四、分页插件"><span>四、分页插件</span></a></h2><h3 id="_8-如何使用分页插件" tabindex="-1"><a class="header-anchor" href="#_8-如何使用分页插件"><span>8. 如何使用分页插件？</span></a></h3><p><strong>答：</strong></p><p><strong>1. 配置插件</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span><span class="token constant">MYSQL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 使用分页</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 第1页，每页10条</span></span>
<span class="line">userMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> records <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 当前页数据</span></span>
<span class="line"><span class="token keyword">long</span> total <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 总记录数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_9-如何优化分页性能" tabindex="-1"><a class="header-anchor" href="#_9-如何优化分页性能"><span>9. 如何优化分页性能？</span></a></h3><p><strong>答：</strong></p><p><strong>1. 优化 COUNT 查询</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">page<span class="token punctuation">.</span><span class="token function">setOptimizeCountSql</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 移除 ORDER BY</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 不查询总数</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">page<span class="token punctuation">.</span><span class="token function">setSearchCount</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不查询总数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 手动设置总数</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 第一次查询总数</span></span>
<span class="line"><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">userMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">long</span> total <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 后续翻页不再查询总数</span></span>
<span class="line"><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">page2<span class="token punctuation">.</span><span class="token function">setSearchCount</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">page2<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、高级功能" tabindex="-1"><a class="header-anchor" href="#五、高级功能"><span>五、高级功能</span></a></h2><h3 id="_10-什么是逻辑删除-如何配置" tabindex="-1"><a class="header-anchor" href="#_10-什么是逻辑删除-如何配置"><span>10. 什么是逻辑删除？如何配置？</span></a></h3><p><strong>答：</strong></p><p><strong>逻辑删除：</strong> 删除数据时不真正删除，而是标记为已删除。</p><p><strong>配置：</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">global-config</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">db-config</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">logic-delete-field</span><span class="token punctuation">:</span> deleted</span>
<span class="line">      <span class="token key atrule">logic-delete-value</span><span class="token punctuation">:</span> <span class="token number">1</span></span>
<span class="line">      <span class="token key atrule">logic-not-delete-value</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实体类：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@TableLogic</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Integer</span> deleted<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行删除：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">userMapper<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 实际SQL：UPDATE user SET deleted=1 WHERE id=1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_11-什么是乐观锁-如何使用" tabindex="-1"><a class="header-anchor" href="#_11-什么是乐观锁-如何使用"><span>11. 什么是乐观锁？如何使用？</span></a></h3><p><strong>答：</strong></p><p><strong>乐观锁：</strong> 通过版本号机制，解决并发更新问题。</p><p><strong>配置插件：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OptimisticLockerInnerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实体类：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Version</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Integer</span> version<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 查询</span></span>
<span class="line"><span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// version=1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 更新</span></span>
<span class="line">user<span class="token punctuation">.</span><span class="token function">setStock</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">userMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// SQL: UPDATE user SET stock=90, version=2 WHERE id=1 AND version=1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_12-如何实现自动填充" tabindex="-1"><a class="header-anchor" href="#_12-如何实现自动填充"><span>12. 如何实现自动填充？</span></a></h3><p><strong>答：</strong></p><p><strong>1. 实体类配置</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Date</span> updateTime<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 创建处理器</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMetaObjectHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictInsertFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">&quot;createTime&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictInsertFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">&quot;updateTime&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictUpdateFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">&quot;updateTime&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、代码生成器" tabindex="-1"><a class="header-anchor" href="#六、代码生成器"><span>六、代码生成器</span></a></h2><h3 id="_13-如何使用代码生成器" tabindex="-1"><a class="header-anchor" href="#_13-如何使用代码生成器"><span>13. 如何使用代码生成器？</span></a></h3><p><strong>答：</strong></p><p><strong>添加依赖：</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置和执行：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">DataSourceConfig</span> dataSourceConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;jdbc:mysql://localhost:3306/mybatis_plus&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;123456&quot;</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">GlobalConfig</span> globalConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">outputDir</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/src/main/java&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">author</span><span class="token punctuation">(</span><span class="token string">&quot;作者&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">enableSwagger</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AutoGenerator</span> generator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span>dataSourceConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">generator<span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span>globalConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">generator<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、实战经验" tabindex="-1"><a class="header-anchor" href="#七、实战经验"><span>七、实战经验</span></a></h2><h3 id="_14-mybatis-plus如何防止sql注入" tabindex="-1"><a class="header-anchor" href="#_14-mybatis-plus如何防止sql注入"><span>14. MyBatis-Plus如何防止SQL注入？</span></a></h3><p><strong>答：</strong></p><p><strong>MyBatis-Plus 使用预编译：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// Wrapper 自动使用预编译</span></span>
<span class="line"><span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> userInput<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自动预编译</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意事项：</strong></p><ul><li>Wrapper 默认安全</li><li>避免使用字符串拼接</li><li>动态列名需要白名单校验</li></ul><hr><h3 id="_15-mybatis-plus和jpa的区别" tabindex="-1"><a class="header-anchor" href="#_15-mybatis-plus和jpa的区别"><span>15. MyBatis-Plus和JPA的区别？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>特性</th><th>MyBatis-Plus</th><th>JPA</th></tr></thead><tbody><tr><td><strong>类型</strong></td><td>半自动ORM</td><td>全自动ORM</td></tr><tr><td><strong>SQL控制</strong></td><td>完全控制</td><td>自动生成</td></tr><tr><td><strong>学习曲线</strong></td><td>平缓</td><td>陡峭</td></tr><tr><td><strong>性能优化</strong></td><td>容易</td><td>困难</td></tr><tr><td><strong>复杂查询</strong></td><td>擅长</td><td>较弱</td></tr></tbody></table><p><strong>选择建议：</strong></p><ul><li>需要 SQL 优化 → MyBatis-Plus</li><li>简单 CRUD → JPA</li></ul><hr><h2 id="八、总结" tabindex="-1"><a class="header-anchor" href="#八、总结"><span>八、总结</span></a></h2><h3 id="高频考点" tabindex="-1"><a class="header-anchor" href="#高频考点"><span>高频考点</span></a></h3><p>✅ <strong>必须掌握：</strong></p><ul><li>MyBatis-Plus 核心特性</li><li>BaseMapper 和 IService</li><li>条件构造器（Lambda 方式）</li><li>分页插件使用</li><li>逻辑删除</li><li>乐观锁</li></ul><p>✅ <strong>加分项：</strong></p><ul><li>代码生成器</li><li>性能优化</li><li>自定义通用方法</li><li>多租户</li></ul><h3 id="面试技巧" tabindex="-1"><a class="header-anchor" href="#面试技巧"><span>面试技巧</span></a></h3><ol><li><strong>对比说明</strong> - MyBatis-Plus vs MyBatis</li><li><strong>举例说明</strong> - 代码示例</li><li><strong>性能优化</strong> - 分页优化</li><li><strong>项目经验</strong> - 实际使用场景</li></ol><hr><p><strong>恭喜你完成 MyBatis-Plus 学习！🎉</strong></p>`,135)])])}const o=n(p,[["render",l]]),u=JSON.parse('{"path":"/tutorials/java-backend/mybatisPlus/7.MyBatis-Plusmianshitiji.html","title":"MyBatis-Plus面试题集","lang":"zh-CN","frontmatter":{"title":"MyBatis-Plus面试题集"},"headers":[{"level":2,"title":"一、基础概念","slug":"一、基础概念","link":"#一、基础概念","children":[{"level":3,"title":"1. 什么是MyBatis-Plus？","slug":"_1-什么是mybatis-plus","link":"#_1-什么是mybatis-plus","children":[]},{"level":3,"title":"2. MyBatis-Plus和MyBatis的区别？","slug":"_2-mybatis-plus和mybatis的区别","link":"#_2-mybatis-plus和mybatis的区别","children":[]},{"level":3,"title":"3. MyBatis-Plus会侵入MyBatis吗？","slug":"_3-mybatis-plus会侵入mybatis吗","link":"#_3-mybatis-plus会侵入mybatis吗","children":[]}]},{"level":2,"title":"二、CRUD接口","slug":"二、crud接口","link":"#二、crud接口","children":[{"level":3,"title":"4. BaseMapper提供了哪些方法？","slug":"_4-basemapper提供了哪些方法","link":"#_4-basemapper提供了哪些方法","children":[]},{"level":3,"title":"5. Service层和Mapper层有什么区别？","slug":"_5-service层和mapper层有什么区别","link":"#_5-service层和mapper层有什么区别","children":[]}]},{"level":2,"title":"三、条件构造器","slug":"三、条件构造器","link":"#三、条件构造器","children":[{"level":3,"title":"6. Wrapper有哪几种？","slug":"_6-wrapper有哪几种","link":"#_6-wrapper有哪几种","children":[]},{"level":3,"title":"7. 如何实现动态条件查询？","slug":"_7-如何实现动态条件查询","link":"#_7-如何实现动态条件查询","children":[]}]},{"level":2,"title":"四、分页插件","slug":"四、分页插件","link":"#四、分页插件","children":[{"level":3,"title":"8. 如何使用分页插件？","slug":"_8-如何使用分页插件","link":"#_8-如何使用分页插件","children":[]},{"level":3,"title":"9. 如何优化分页性能？","slug":"_9-如何优化分页性能","link":"#_9-如何优化分页性能","children":[]}]},{"level":2,"title":"五、高级功能","slug":"五、高级功能","link":"#五、高级功能","children":[{"level":3,"title":"10. 什么是逻辑删除？如何配置？","slug":"_10-什么是逻辑删除-如何配置","link":"#_10-什么是逻辑删除-如何配置","children":[]},{"level":3,"title":"11. 什么是乐观锁？如何使用？","slug":"_11-什么是乐观锁-如何使用","link":"#_11-什么是乐观锁-如何使用","children":[]},{"level":3,"title":"12. 如何实现自动填充？","slug":"_12-如何实现自动填充","link":"#_12-如何实现自动填充","children":[]}]},{"level":2,"title":"六、代码生成器","slug":"六、代码生成器","link":"#六、代码生成器","children":[{"level":3,"title":"13. 如何使用代码生成器？","slug":"_13-如何使用代码生成器","link":"#_13-如何使用代码生成器","children":[]}]},{"level":2,"title":"七、实战经验","slug":"七、实战经验","link":"#七、实战经验","children":[{"level":3,"title":"14. MyBatis-Plus如何防止SQL注入？","slug":"_14-mybatis-plus如何防止sql注入","link":"#_14-mybatis-plus如何防止sql注入","children":[]},{"level":3,"title":"15. MyBatis-Plus和JPA的区别？","slug":"_15-mybatis-plus和jpa的区别","link":"#_15-mybatis-plus和jpa的区别","children":[]}]},{"level":2,"title":"八、总结","slug":"八、总结","link":"#八、总结","children":[{"level":3,"title":"高频考点","slug":"高频考点","link":"#高频考点","children":[]},{"level":3,"title":"面试技巧","slug":"面试技巧","link":"#面试技巧","children":[]}]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/mybatisPlus/7.MyBatis-Plus面试题集.md"}');export{o as comp,u as data};
