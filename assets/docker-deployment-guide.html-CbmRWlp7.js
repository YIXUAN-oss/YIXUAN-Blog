import{_ as n,c as a,d as e,o as l}from"./app-CJnNnfV_.js";const i={};function p(c,s){return l(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="docker-容器化部署实战" tabindex="-1"><a class="header-anchor" href="#docker-容器化部署实战"><span>Docker 容器化部署实战</span></a></h1><p>Docker 已经成为现代应用部署的标准工具。本文介绍如何使用 Docker 容器化部署应用。</p><h2 id="🐳-docker-基础" tabindex="-1"><a class="header-anchor" href="#🐳-docker-基础"><span>🐳 Docker 基础</span></a></h2><h3 id="什么是-docker" tabindex="-1"><a class="header-anchor" href="#什么是-docker"><span>什么是 Docker</span></a></h3><p>Docker 是一个开源的容器化平台，可以将应用及其依赖打包到一个可移植的容器中。</p><h3 id="核心概念" tabindex="-1"><a class="header-anchor" href="#核心概念"><span>核心概念</span></a></h3><ul><li><strong>镜像（Image）</strong>: 应用的只读模板</li><li><strong>容器（Container）</strong>: 镜像的运行实例</li><li><strong>仓库（Registry）</strong>: 存储镜像的地方</li></ul><h2 id="📝-dockerfile-编写" tabindex="-1"><a class="header-anchor" href="#📝-dockerfile-编写"><span>📝 Dockerfile 编写</span></a></h2><h3 id="node-js-应用示例" tabindex="-1"><a class="header-anchor" href="#node-js-应用示例"><span>Node.js 应用示例</span></a></h3><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">FROM</span> node:18-alpine</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> package*.json ./</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> npm ci --only=production</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> . .</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 3000</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;node&quot;</span>, <span class="token string">&quot;server.js&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多阶段构建" tabindex="-1"><a class="header-anchor" href="#多阶段构建"><span>多阶段构建</span></a></h3><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token comment"># 构建阶段</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">FROM</span> node:18-alpine <span class="token keyword">AS</span> builder</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> package*.json ./</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> npm ci</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> . .</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> npm run build</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生产阶段</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /app/dist /usr/share/nginx/html</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;nginx&quot;</span>, <span class="token string">&quot;-g&quot;</span>, <span class="token string">&quot;daemon off;&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚀-docker-compose" tabindex="-1"><a class="header-anchor" href="#🚀-docker-compose"><span>🚀 Docker Compose</span></a></h2><h3 id="定义多容器应用" tabindex="-1"><a class="header-anchor" href="#定义多容器应用"><span>定义多容器应用</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.8&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">app</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">build</span><span class="token punctuation">:</span> .</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;3000:3000&quot;</span></span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> NODE_ENV=production</span>
<span class="line">      <span class="token punctuation">-</span> DB_HOST=db</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> db</span>
<span class="line">      <span class="token punctuation">-</span> redis</span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">db</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>15<span class="token punctuation">-</span>alpine</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> POSTGRES_PASSWORD=secret</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> postgres_data<span class="token punctuation">:</span>/var/lib/postgresql/data</span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">redis</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> redis<span class="token punctuation">:</span>alpine</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;6379:6379&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">postgres_data</span><span class="token punctuation">:</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="优化镜像大小" tabindex="-1"><a class="header-anchor" href="#优化镜像大小"><span>优化镜像大小</span></a></h3><ul><li>使用 Alpine 基础镜像</li><li>多阶段构建</li><li>.dockerignore 文件</li><li>合并 RUN 指令</li></ul><h3 id="安全考虑" tabindex="-1"><a class="header-anchor" href="#安全考虑"><span>安全考虑</span></a></h3><ul><li>不要以 root 运行</li><li>扫描镜像漏洞</li><li>使用官方镜像</li><li>定期更新基础镜像</li></ul><h2 id="🎯-总结" tabindex="-1"><a class="header-anchor" href="#🎯-总结"><span>🎯 总结</span></a></h2><p>Docker 容器化部署带来了：</p><ul><li>✅ 环境一致性</li><li>✅ 快速部署</li><li>✅ 资源隔离</li><li>✅ 易于扩展</li></ul><p>掌握 Docker 是现代开发者的必备技能！</p><hr><p><strong>标签</strong>: #Docker #容器化 #DevOps #部署</p>`,26)])])}const o=n(i,[["render",p]]),r=JSON.parse('{"path":"/blogs/docker-deployment-guide.html","title":"Docker 容器化部署实战","lang":"zh-CN","frontmatter":{"title":"Docker 容器化部署实战","date":"2025-10-13T00:00:00.000Z","categories":["DevOps"],"tags":["Docker","容器化","部署"],"author":"懿轩"},"headers":[{"level":2,"title":"🐳 Docker 基础","slug":"🐳-docker-基础","link":"#🐳-docker-基础","children":[{"level":3,"title":"什么是 Docker","slug":"什么是-docker","link":"#什么是-docker","children":[]},{"level":3,"title":"核心概念","slug":"核心概念","link":"#核心概念","children":[]}]},{"level":2,"title":"📝 Dockerfile 编写","slug":"📝-dockerfile-编写","link":"#📝-dockerfile-编写","children":[{"level":3,"title":"Node.js 应用示例","slug":"node-js-应用示例","link":"#node-js-应用示例","children":[]},{"level":3,"title":"多阶段构建","slug":"多阶段构建","link":"#多阶段构建","children":[]}]},{"level":2,"title":"🚀 Docker Compose","slug":"🚀-docker-compose","link":"#🚀-docker-compose","children":[{"level":3,"title":"定义多容器应用","slug":"定义多容器应用","link":"#定义多容器应用","children":[]}]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"优化镜像大小","slug":"优化镜像大小","link":"#优化镜像大小","children":[]},{"level":3,"title":"安全考虑","slug":"安全考虑","link":"#安全考虑","children":[]}]},{"level":2,"title":"🎯 总结","slug":"🎯-总结","link":"#🎯-总结","children":[]}],"git":{"createdTime":1760688349000,"updatedTime":1760688349000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"blogs/docker-deployment-guide.md"}');export{o as comp,r as data};
