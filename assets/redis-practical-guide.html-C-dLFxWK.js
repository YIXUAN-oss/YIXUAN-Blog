import{_ as t,c as l,d as i,e as s,f as a,b as p,r as c,o}from"./app-B7flraU3.js";const u={},r={href:"https://redis.io/documentation",target:"_blank",rel:"noopener noreferrer"},d={href:"http://redisbook.com/",target:"_blank",rel:"noopener noreferrer"};function k(v,n){const e=c("ExternalLinkIcon");return o(),l("div",null,[n[2]||(n[2]=i(`<h1 id="redis-实战应用指南" tabindex="-1"><a class="header-anchor" href="#redis-实战应用指南"><span>Redis 实战应用指南</span></a></h1><p>Redis 是一个高性能的内存数据存储系统。本文介绍 Redis 在实际项目中的常见应用场景。</p><h2 id="🎯-redis-简介" tabindex="-1"><a class="header-anchor" href="#🎯-redis-简介"><span>🎯 Redis 简介</span></a></h2><p>Redis 是一个开源的内存数据结构存储系统，可以用作：</p><ul><li><strong>数据库</strong></li><li><strong>缓存</strong></li><li><strong>消息队列</strong></li></ul><h2 id="📊-数据类型" tabindex="-1"><a class="header-anchor" href="#📊-数据类型"><span>📊 数据类型</span></a></h2><h3 id="字符串-string" tabindex="-1"><a class="header-anchor" href="#字符串-string"><span>字符串（String）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">SET user:1:name <span class="token string">&quot;张三&quot;</span></span>
<span class="line">GET user:1:name</span>
<span class="line">INCR counter</span>
<span class="line">EXPIRE session:abc <span class="token number">3600</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="哈希-hash" tabindex="-1"><a class="header-anchor" href="#哈希-hash"><span>哈希（Hash）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">HSET user:1 name <span class="token string">&quot;张三&quot;</span> age <span class="token number">25</span> email <span class="token string">&quot;zhang@example.com&quot;</span></span>
<span class="line">HGET user:1 name</span>
<span class="line">HGETALL user:1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表-list" tabindex="-1"><a class="header-anchor" href="#列表-list"><span>列表（List）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">LPUSH queue:tasks task1 task2</span>
<span class="line">RPOP queue:tasks</span>
<span class="line">LRANGE queue:tasks <span class="token number">0</span> <span class="token parameter variable">-1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="集合-set" tabindex="-1"><a class="header-anchor" href="#集合-set"><span>集合（Set）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">SADD tags:1 <span class="token function">java</span> spring redis</span>
<span class="line">SMEMBERS tags:1</span>
<span class="line">SISMEMBER tags:1 <span class="token function">java</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="有序集合-sorted-set" tabindex="-1"><a class="header-anchor" href="#有序集合-sorted-set"><span>有序集合（Sorted Set）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ZADD leaderboard <span class="token number">100</span> <span class="token string">&quot;player1&quot;</span> <span class="token number">200</span> <span class="token string">&quot;player2&quot;</span></span>
<span class="line">ZRANGE leaderboard <span class="token number">0</span> <span class="token parameter variable">-1</span> WITHSCORES</span>
<span class="line">ZRANK leaderboard <span class="token string">&quot;player1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🚀-实战场景" tabindex="-1"><a class="header-anchor" href="#🚀-实战场景"><span>🚀 实战场景</span></a></h2><h3 id="_1-缓存热点数据" tabindex="-1"><a class="header-anchor" href="#_1-缓存热点数据"><span>1. 缓存热点数据</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;user:&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">User</span> user <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            user <span class="token operator">=</span> userRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> user<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-分布式锁" tabindex="-1"><a class="header-anchor" href="#_2-分布式锁"><span>2. 分布式锁</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> lockKey<span class="token punctuation">,</span> <span class="token class-name">String</span> requestId<span class="token punctuation">,</span> <span class="token keyword">long</span> expireTime<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Boolean</span> success <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">setIfAbsent</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">,</span> requestId<span class="token punctuation">,</span> expireTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>success<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token class-name">String</span> lockKey<span class="token punctuation">,</span> <span class="token class-name">String</span> requestId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> script <span class="token operator">=</span> <span class="token string">&quot;if redis.call(&#39;get&#39;, KEYS[1]) == ARGV[1] then &quot;</span> <span class="token operator">+</span></span>
<span class="line">                   <span class="token string">&quot;return redis.call(&#39;del&#39;, KEYS[1]) else return 0 end&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultRedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>script<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                         <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">,</span> requestId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-限流器" tabindex="-1"><a class="header-anchor" href="#_3-限流器"><span>3. 限流器</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAllowed</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> maxRequests<span class="token punctuation">,</span> <span class="token keyword">int</span> seconds<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> currentTime <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 移除过期的请求</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRangeByScore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> </span>
<span class="line">        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> seconds <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 获取当前请求数</span></span>
<span class="line">    <span class="token class-name">Long</span> count <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zCard</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> maxRequests<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> currentTime<span class="token punctuation">,</span> </span>
<span class="line">            <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> seconds<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-排行榜" tabindex="-1"><a class="header-anchor" href="#_4-排行榜"><span>4. 排行榜</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateScore</span><span class="token punctuation">(</span><span class="token class-name">String</span> leaderboard<span class="token punctuation">,</span> <span class="token class-name">String</span> player<span class="token punctuation">,</span> <span class="token keyword">double</span> score<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>leaderboard<span class="token punctuation">,</span> player<span class="token punctuation">,</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTopPlayers</span><span class="token punctuation">(</span><span class="token class-name">String</span> leaderboard<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> players <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">reverseRange</span><span class="token punctuation">(</span>leaderboard<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>players<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="键命名规范" tabindex="-1"><a class="header-anchor" href="#键命名规范"><span>键命名规范</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">user:{id}</span>
<span class="line">session:{token}</span>
<span class="line">cache:{type}:{id}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置过期时间" tabindex="-1"><a class="header-anchor" href="#设置过期时间"><span>设置过期时间</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 避免内存泄漏</span></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用连接池" tabindex="-1"><a class="header-anchor" href="#使用连接池"><span>使用连接池</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">JedisPoolConfig</span> <span class="token function">jedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">JedisPoolConfig</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        config<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        config<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        config<span class="token punctuation">.</span><span class="token function">setMinIdle</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> config<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎓-性能优化" tabindex="-1"><a class="header-anchor" href="#🎓-性能优化"><span>🎓 性能优化</span></a></h2><ul><li>使用管道（Pipeline）批量操作</li><li>避免大键值</li><li>合理设置过期时间</li><li>使用 Redis Cluster 分片</li></ul><h2 id="📋-监控指标" tabindex="-1"><a class="header-anchor" href="#📋-监控指标"><span>📋 监控指标</span></a></h2><ul><li>内存使用率</li><li>命中率</li><li>连接数</li><li>慢查询</li></ul><h2 id="💡-总结" tabindex="-1"><a class="header-anchor" href="#💡-总结"><span>💡 总结</span></a></h2><p>Redis 是现代应用架构中不可或缺的组件：</p><ul><li>✅ 高性能缓存</li><li>✅ 分布式锁</li><li>✅ 消息队列</li><li>✅ 实时排行榜</li></ul><p>合理使用 Redis 可以大幅提升应用性能！</p><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,41)),s("ul",null,[s("li",null,[s("a",r,[n[0]||(n[0]=a("Redis 官方文档",-1)),p(e)])]),s("li",null,[s("a",d,[n[1]||(n[1]=a("Redis 设计与实现",-1)),p(e)])])]),n[3]||(n[3]=s("hr",null,null,-1)),n[4]||(n[4]=s("p",null,[s("strong",null,"标签"),a(": #Redis #缓存 #NoSQL #数据库")],-1))])}const h=t(u,[["render",k]]),b=JSON.parse('{"path":"/blogs/redis-practical-guide.html","title":"Redis 实战应用指南","lang":"zh-CN","frontmatter":{"title":"Redis 实战应用指南","date":"2025-10-11T00:00:00.000Z","categories":["数据库"],"tags":["Redis","缓存","NoSQL"],"author":"懿轩"},"headers":[{"level":2,"title":"🎯 Redis 简介","slug":"🎯-redis-简介","link":"#🎯-redis-简介","children":[]},{"level":2,"title":"📊 数据类型","slug":"📊-数据类型","link":"#📊-数据类型","children":[{"level":3,"title":"字符串（String）","slug":"字符串-string","link":"#字符串-string","children":[]},{"level":3,"title":"哈希（Hash）","slug":"哈希-hash","link":"#哈希-hash","children":[]},{"level":3,"title":"列表（List）","slug":"列表-list","link":"#列表-list","children":[]},{"level":3,"title":"集合（Set）","slug":"集合-set","link":"#集合-set","children":[]},{"level":3,"title":"有序集合（Sorted Set）","slug":"有序集合-sorted-set","link":"#有序集合-sorted-set","children":[]}]},{"level":2,"title":"🚀 实战场景","slug":"🚀-实战场景","link":"#🚀-实战场景","children":[{"level":3,"title":"1. 缓存热点数据","slug":"_1-缓存热点数据","link":"#_1-缓存热点数据","children":[]},{"level":3,"title":"2. 分布式锁","slug":"_2-分布式锁","link":"#_2-分布式锁","children":[]},{"level":3,"title":"3. 限流器","slug":"_3-限流器","link":"#_3-限流器","children":[]},{"level":3,"title":"4. 排行榜","slug":"_4-排行榜","link":"#_4-排行榜","children":[]}]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"键命名规范","slug":"键命名规范","link":"#键命名规范","children":[]},{"level":3,"title":"设置过期时间","slug":"设置过期时间","link":"#设置过期时间","children":[]},{"level":3,"title":"使用连接池","slug":"使用连接池","link":"#使用连接池","children":[]}]},{"level":2,"title":"🎓 性能优化","slug":"🎓-性能优化","link":"#🎓-性能优化","children":[]},{"level":2,"title":"📋 监控指标","slug":"📋-监控指标","link":"#📋-监控指标","children":[]},{"level":2,"title":"💡 总结","slug":"💡-总结","link":"#💡-总结","children":[]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1760688349000,"updatedTime":1760688349000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"blogs/redis-practical-guide.md"}');export{h as comp,b as data};
