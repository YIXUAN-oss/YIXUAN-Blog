import{_ as e,c as t,d as l,e as s,f as a,b as i,w as c,r as o,o as u}from"./app-BVgOaNeG.js";const r={};function k(d,n){const p=o("RouteLink");return u(),t("div",null,[n[3]||(n[3]=l(`<h1 id="上下文管理器" tabindex="-1"><a class="header-anchor" href="#上下文管理器"><span>上下文管理器</span></a></h1><blockquote><p>掌握Python上下文管理器，优雅地管理资源</p></blockquote><h2 id="📚-学习目标" tabindex="-1"><a class="header-anchor" href="#📚-学习目标"><span>📚 学习目标</span></a></h2><ul><li>理解上下文管理器的概念</li><li>掌握 with 语句的使用</li><li>学会创建自定义上下文管理器</li><li>掌握 contextlib 模块</li></ul><h2 id="_1-上下文管理器基础" tabindex="-1"><a class="header-anchor" href="#_1-上下文管理器基础"><span>1. 上下文管理器基础</span></a></h2><h3 id="_1-1-with-语句" tabindex="-1"><a class="header-anchor" href="#_1-1-with-语句"><span>1.1 with 语句</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 不使用 with</span></span>
<span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用 with（推荐）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 自动关闭文件</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-工作原理" tabindex="-1"><a class="header-anchor" href="#_1-2-工作原理"><span>1.2 工作原理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># with 语句会自动调用：</span></span>
<span class="line"><span class="token comment"># 1. __enter__() - 进入时</span></span>
<span class="line"><span class="token comment"># 2. __exit__()  - 退出时</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyContext</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;进入上下文&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> self</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;退出上下文&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span>  <span class="token comment"># 不抑制异常</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> MyContext<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> ctx<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;执行代码&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-自定义上下文管理器" tabindex="-1"><a class="header-anchor" href="#_2-自定义上下文管理器"><span>2. 自定义上下文管理器</span></a></h2><h3 id="_2-1-类方式实现" tabindex="-1"><a class="header-anchor" href="#_2-1-类方式实现"><span>2.1 类方式实现</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;数据库连接管理器&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>host <span class="token operator">=</span> host</span>
<span class="line">        self<span class="token punctuation">.</span>port <span class="token operator">=</span> port</span>
<span class="line">        self<span class="token punctuation">.</span>connection <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;连接数据库: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>host<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>port<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>connection <span class="token operator">=</span> self<span class="token punctuation">.</span>_connect<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>connection</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span>connection<span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>connection<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;关闭数据库连接&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> exc_type <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;发生异常: </span><span class="token interpolation"><span class="token punctuation">{</span>exc_type<span class="token punctuation">.</span>__name__<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>exc_val<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span>  <span class="token comment"># 不抑制异常</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">_connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 模拟连接</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&#39;connected&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> DatabaseConnection<span class="token punctuation">(</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token number">3306</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;使用连接: </span><span class="token interpolation"><span class="token punctuation">{</span>conn<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-文件写入管理器" tabindex="-1"><a class="header-anchor" href="#_2-2-文件写入管理器"><span>2.2 文件写入管理器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">FileWriter</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;文件写入管理器&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>filename <span class="token operator">=</span> filename</span>
<span class="line">        self<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span><span class="token builtin">file</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> FileWriter<span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-contextlib-模块" tabindex="-1"><a class="header-anchor" href="#_3-contextlib-模块"><span>3. contextlib 模块</span></a></h2><h3 id="_3-1-contextmanager-装饰器" tabindex="-1"><a class="header-anchor" href="#_3-1-contextmanager-装饰器"><span>3.1 contextmanager 装饰器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">file_manager</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;文件管理器&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">yield</span> <span class="token builtin">file</span>  <span class="token comment"># yield 前面是 __enter__</span></span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># finally 是 __exit__</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> file_manager<span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;使用 contextmanager&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-数据库事务管理" tabindex="-1"><a class="header-anchor" href="#_3-2-数据库事务管理"><span>3.2 数据库事务管理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">transaction</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;数据库事务管理器&quot;&quot;&quot;</span></span>
<span class="line">    cursor <span class="token operator">=</span> connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">yield</span> cursor</span>
<span class="line">        connection<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 提交事务</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;事务提交成功&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">        connection<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 回滚事务</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;事务回滚: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">raise</span></span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> transaction<span class="token punctuation">(</span>db_connection<span class="token punctuation">)</span> <span class="token keyword">as</span> cursor<span class="token punctuation">:</span></span>
<span class="line">    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&#39;INSERT INTO users VALUES (...)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&#39;UPDATE accounts SET ...&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-计时器" tabindex="-1"><a class="header-anchor" href="#_3-3-计时器"><span>3.3 计时器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">timer</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;计时上下文管理器&quot;&quot;&quot;</span></span>
<span class="line">    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">yield</span></span>
<span class="line">    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string"> 耗时: </span><span class="token interpolation"><span class="token punctuation">{</span>end <span class="token operator">-</span> start<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">秒&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> timer<span class="token punctuation">(</span><span class="token string">&#39;数据处理&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 执行耗时操作</span></span>
<span class="line">    <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-嵌套上下文管理器" tabindex="-1"><a class="header-anchor" href="#_4-嵌套上下文管理器"><span>4. 嵌套上下文管理器</span></a></h2><h3 id="_4-1-多个-with-语句" tabindex="-1"><a class="header-anchor" href="#_4-1-多个-with-语句"><span>4.1 多个 with 语句</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 方式1：嵌套</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;input.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> in_file<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> out_file<span class="token punctuation">:</span></span>
<span class="line">        out_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>in_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 方式2：一行（Python 3.1+）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;input.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> in_file<span class="token punctuation">,</span> \\</span>
<span class="line">     <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> out_file<span class="token punctuation">:</span></span>
<span class="line">    out_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>in_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-exitstack" tabindex="-1"><a class="header-anchor" href="#_4-2-exitstack"><span>4.2 ExitStack</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> ExitStack</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">process_files</span><span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;同时处理多个文件&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">with</span> ExitStack<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> stack<span class="token punctuation">:</span></span>
<span class="line">        files <span class="token operator">=</span> <span class="token punctuation">[</span>stack<span class="token punctuation">.</span>enter_context<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>fname<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">                 <span class="token keyword">for</span> fname <span class="token keyword">in</span> filenames<span class="token punctuation">]</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">for</span> f <span class="token keyword">in</span> files<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">process_files<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;file1.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file2.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file3.txt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-实战案例" tabindex="-1"><a class="header-anchor" href="#_5-实战案例"><span>5. 实战案例</span></a></h2><h3 id="案例1-临时目录" tabindex="-1"><a class="header-anchor" href="#案例1-临时目录"><span>案例1：临时目录</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> tempfile</span>
<span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">temporary_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;临时目录管理器&quot;&quot;&quot;</span></span>
<span class="line">    temp_dir <span class="token operator">=</span> tempfile<span class="token punctuation">.</span>mkdtemp<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;创建临时目录: </span><span class="token interpolation"><span class="token punctuation">{</span>temp_dir<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">yield</span> temp_dir</span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">import</span> shutil</span>
<span class="line">        shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>temp_dir<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;删除临时目录: </span><span class="token interpolation"><span class="token punctuation">{</span>temp_dir<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> temporary_directory<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> temp_dir<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 在临时目录中工作</span></span>
<span class="line">    file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>temp_dir<span class="token punctuation">,</span> <span class="token string">&#39;temp.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;临时数据&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-状态切换" tabindex="-1"><a class="header-anchor" href="#案例2-状态切换"><span>案例2：状态切换</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">change_dir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;临时切换目录&quot;&quot;&quot;</span></span>
<span class="line">    old_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">yield</span></span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>old_dir<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;当前目录: </span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">with</span> change_dir<span class="token punctuation">(</span><span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;临时目录: </span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;恢复目录: </span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例3-资源锁" tabindex="-1"><a class="header-anchor" href="#案例3-资源锁"><span>案例3：资源锁</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> threading</span>
<span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">acquire_lock</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;锁管理器&quot;&quot;&quot;</span></span>
<span class="line">    lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;获取锁&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">yield</span></span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;释放锁&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line">lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">with</span> acquire_lock<span class="token punctuation">(</span>lock<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 执行需要同步的代码</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;执行同步操作&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-异常处理" tabindex="-1"><a class="header-anchor" href="#_6-异常处理"><span>6. 异常处理</span></a></h2><h3 id="_6-1-抑制异常" tabindex="-1"><a class="header-anchor" href="#_6-1-抑制异常"><span>6.1 抑制异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">SuppressError</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;抑制特定异常&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>exceptions<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>exceptions <span class="token operator">=</span> exceptions</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> self</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> exc_type <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token builtin">issubclass</span><span class="token punctuation">(</span>exc_type<span class="token punctuation">,</span> self<span class="token punctuation">.</span>exceptions<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;抑制异常: </span><span class="token interpolation"><span class="token punctuation">{</span>exc_type<span class="token punctuation">.</span>__name__<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token boolean">True</span>  <span class="token comment"># 抑制异常</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> SuppressError<span class="token punctuation">(</span>ValueError<span class="token punctuation">,</span> TypeError<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 异常被抑制</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;继续执行&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-suppress-上下文管理器" tabindex="-1"><a class="header-anchor" href="#_6-2-suppress-上下文管理器"><span>6.2 suppress 上下文管理器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> suppress</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 忽略特定异常</span></span>
<span class="line"><span class="token keyword">with</span> suppress<span class="token punctuation">(</span>FileNotFoundError<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;nonexistent_file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 等价于</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;nonexistent_file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-最佳实践" tabindex="-1"><a class="header-anchor" href="#_7-最佳实践"><span>7. 最佳实践</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ✅ 使用 with 管理资源</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 使用 contextmanager 简化代码</span></span>
<span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">managed_resource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    resource <span class="token operator">=</span> acquire_resource<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">yield</span> resource</span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        release_resource<span class="token punctuation">(</span>resource<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 异常处理</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;读取失败: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📝-练习题" tabindex="-1"><a class="header-anchor" href="#📝-练习题"><span>📝 练习题</span></a></h2><ol><li>创建一个计时上下文管理器</li><li>实现一个数据库连接池管理器</li><li>编写一个临时环境变量管理器</li></ol><hr>`,43)),s("p",null,[n[1]||(n[1]=s("strong",null,"下一节：",-1)),n[2]||(n[2]=a()),i(p,{to:"/tutorials/python-ai/python/%E7%AC%AC03%E7%AB%A0-%E8%BF%9B%E9%98%B6%E7%BC%96%E7%A8%8B/05-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"},{default:c(()=>[...n[0]||(n[0]=[a("正则表达式",-1)])]),_:1})])])}const m=e(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di03zhang-jinjiebiancheng/04-shangxiawenguanliqi.html","title":"上下文管理器","lang":"zh-CN","frontmatter":{"title":"上下文管理器"},"headers":[{"level":2,"title":"📚 学习目标","slug":"📚-学习目标","link":"#📚-学习目标","children":[]},{"level":2,"title":"1. 上下文管理器基础","slug":"_1-上下文管理器基础","link":"#_1-上下文管理器基础","children":[{"level":3,"title":"1.1 with 语句","slug":"_1-1-with-语句","link":"#_1-1-with-语句","children":[]},{"level":3,"title":"1.2 工作原理","slug":"_1-2-工作原理","link":"#_1-2-工作原理","children":[]}]},{"level":2,"title":"2. 自定义上下文管理器","slug":"_2-自定义上下文管理器","link":"#_2-自定义上下文管理器","children":[{"level":3,"title":"2.1 类方式实现","slug":"_2-1-类方式实现","link":"#_2-1-类方式实现","children":[]},{"level":3,"title":"2.2 文件写入管理器","slug":"_2-2-文件写入管理器","link":"#_2-2-文件写入管理器","children":[]}]},{"level":2,"title":"3. contextlib 模块","slug":"_3-contextlib-模块","link":"#_3-contextlib-模块","children":[{"level":3,"title":"3.1 contextmanager 装饰器","slug":"_3-1-contextmanager-装饰器","link":"#_3-1-contextmanager-装饰器","children":[]},{"level":3,"title":"3.2 数据库事务管理","slug":"_3-2-数据库事务管理","link":"#_3-2-数据库事务管理","children":[]},{"level":3,"title":"3.3 计时器","slug":"_3-3-计时器","link":"#_3-3-计时器","children":[]}]},{"level":2,"title":"4. 嵌套上下文管理器","slug":"_4-嵌套上下文管理器","link":"#_4-嵌套上下文管理器","children":[{"level":3,"title":"4.1 多个 with 语句","slug":"_4-1-多个-with-语句","link":"#_4-1-多个-with-语句","children":[]},{"level":3,"title":"4.2 ExitStack","slug":"_4-2-exitstack","link":"#_4-2-exitstack","children":[]}]},{"level":2,"title":"5. 实战案例","slug":"_5-实战案例","link":"#_5-实战案例","children":[{"level":3,"title":"案例1：临时目录","slug":"案例1-临时目录","link":"#案例1-临时目录","children":[]},{"level":3,"title":"案例2：状态切换","slug":"案例2-状态切换","link":"#案例2-状态切换","children":[]},{"level":3,"title":"案例3：资源锁","slug":"案例3-资源锁","link":"#案例3-资源锁","children":[]}]},{"level":2,"title":"6. 异常处理","slug":"_6-异常处理","link":"#_6-异常处理","children":[{"level":3,"title":"6.1 抑制异常","slug":"_6-1-抑制异常","link":"#_6-1-抑制异常","children":[]},{"level":3,"title":"6.2 suppress 上下文管理器","slug":"_6-2-suppress-上下文管理器","link":"#_6-2-suppress-上下文管理器","children":[]}]},{"level":2,"title":"7. 最佳实践","slug":"_7-最佳实践","link":"#_7-最佳实践","children":[]},{"level":2,"title":"📝 练习题","slug":"📝-练习题","link":"#📝-练习题","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第03章-进阶编程/04-上下文管理器.md"}');export{m as comp,b as data};
