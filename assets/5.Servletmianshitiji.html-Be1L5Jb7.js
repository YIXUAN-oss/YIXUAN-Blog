import{_ as e,c as s,d as n,o as l}from"./app-B7flraU3.js";const r={};function a(i,t){return l(),s("div",null,[...t[0]||(t[0]=[n(`<h1 id="servlet面试题集" tabindex="-1"><a class="header-anchor" href="#servlet面试题集"><span>Servlet面试题集</span></a></h1><h2 id="一、基础概念" tabindex="-1"><a class="header-anchor" href="#一、基础概念"><span>一、基础概念</span></a></h2><h3 id="_1-什么是servlet" tabindex="-1"><a class="header-anchor" href="#_1-什么是servlet"><span>1. 什么是Servlet？</span></a></h3><p><strong>答：</strong></p><p>Servlet 是运行在服务器端的 Java 程序，用于处理客户端请求并生成动态响应。</p><p><strong>核心特点：</strong></p><ul><li>运行在服务器端</li><li>由容器管理生命周期</li><li>处理 HTTP 请求</li><li>生成动态内容</li></ul><hr><h3 id="_2-servlet的生命周期" tabindex="-1"><a class="header-anchor" href="#_2-servlet的生命周期"><span>2. Servlet的生命周期？</span></a></h3><p><strong>答：</strong></p><p><strong>生命周期阶段：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 加载类：Tomcat启动时或首次访问时</span>
<span class="line">2. 实例化：调用无参构造器</span>
<span class="line">3. 初始化：调用 init() 方法（只一次）</span>
<span class="line">4. 服务：每次请求调用 service() 方法</span>
<span class="line">5. 销毁：Tomcat关闭时调用 destroy() 方法（只一次）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>生命周期方法：</strong></p><ul><li><code>init()</code>：初始化，执行一次</li><li><code>service()</code>：处理请求，每次请求都执行</li><li><code>destroy()</code>：销毁，执行一次</li></ul><hr><h3 id="_3-servlet是单例还是多例" tabindex="-1"><a class="header-anchor" href="#_3-servlet是单例还是多例"><span>3. Servlet是单例还是多例？</span></a></h3><p><strong>答：</strong></p><p><strong>Servlet 是单例的。</strong></p><p><strong>说明：</strong></p><ul><li>Tomcat 为每个 Servlet 只创建一个实例</li><li>多个请求共享同一个实例</li><li>多线程访问，线程不安全</li><li><strong>避免使用成员变量</strong></li></ul><hr><h2 id="二、请求响应" tabindex="-1"><a class="header-anchor" href="#二、请求响应"><span>二、请求响应</span></a></h2><h3 id="_4-请求转发和重定向的区别" tabindex="-1"><a class="header-anchor" href="#_4-请求转发和重定向的区别"><span>4. 请求转发和重定向的区别？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>特性</th><th>请求转发</th><th>重定向</th></tr></thead><tbody><tr><td>地址栏</td><td>不变</td><td>改变</td></tr><tr><td>请求次数</td><td>1次</td><td>2次</td></tr><tr><td>数据共享</td><td>可以（request）</td><td>不可以</td></tr><tr><td>跳转范围</td><td>内部资源</td><td>任何资源</td></tr><tr><td>方法</td><td><code>request.getRequestDispatcher().forward()</code></td><td><code>response.sendRedirect()</code></td></tr></tbody></table><hr><h3 id="_5-如何解决中文乱码" tabindex="-1"><a class="header-anchor" href="#_5-如何解决中文乱码"><span>5. 如何解决中文乱码？</span></a></h3><p><strong>答：</strong></p><p><strong>POST 请求乱码：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">req<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>响应乱码：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="三、session和cookie" tabindex="-1"><a class="header-anchor" href="#三、session和cookie"><span>三、Session和Cookie</span></a></h2><h3 id="_6-session和cookie的区别" tabindex="-1"><a class="header-anchor" href="#_6-session和cookie的区别"><span>6. Session和Cookie的区别？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>特性</th><th>Cookie</th><th>Session</th></tr></thead><tbody><tr><td>存储位置</td><td>客户端</td><td>服务器</td></tr><tr><td>安全性</td><td>低</td><td>高</td></tr><tr><td>存储大小</td><td>4KB</td><td>无限制</td></tr><tr><td>数据类型</td><td>字符串</td><td>任意类型</td></tr><tr><td>生命周期</td><td>可长期</td><td>默认关闭浏览器失效</td></tr></tbody></table><hr><h3 id="_7-session的工作原理" tabindex="-1"><a class="header-anchor" href="#_7-session的工作原理"><span>7. Session的工作原理？</span></a></h3><p><strong>答：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 客户端第一次请求</span>
<span class="line">2. 服务器创建 Session，生成唯一 ID</span>
<span class="line">3. 服务器通过 Cookie 发送 Session ID 给客户端</span>
<span class="line">4. 客户端保存 Session ID</span>
<span class="line">5. 后续请求携带 Session ID</span>
<span class="line">6. 服务器根据 ID 找到 Session</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Session 依赖 Cookie：</strong> 通过名为 <code>JSESSIONID</code> 的 Cookie 传递 Session ID。</p><hr><h3 id="_8-如何实现分布式session" tabindex="-1"><a class="header-anchor" href="#_8-如何实现分布式session"><span>8. 如何实现分布式Session？</span></a></h3><p><strong>答：</strong></p><p><strong>问题：</strong> 多台服务器 Session 不共享。</p><p><strong>解决方案：</strong></p><ol><li><strong>Session 复制</strong>：服务器间同步</li><li><strong>Session 粘滞</strong>：同一用户访问同一服务器</li><li><strong>统一存储（推荐）</strong>：使用 Redis 等存储 Session</li></ol><hr><h2 id="四、三大组件" tabindex="-1"><a class="header-anchor" href="#四、三大组件"><span>四、三大组件</span></a></h2><h3 id="_9-servlet三大组件是什么" tabindex="-1"><a class="header-anchor" href="#_9-servlet三大组件是什么"><span>9. Servlet三大组件是什么？</span></a></h3><p><strong>答：</strong></p><ol><li><strong>Servlet</strong>：处理请求</li><li><strong>Filter</strong>：过滤器，拦截请求</li><li><strong>Listener</strong>：监听器，监听事件</li></ol><hr><h3 id="_10-filter的执行顺序" tabindex="-1"><a class="header-anchor" href="#_10-filter的执行顺序"><span>10. Filter的执行顺序？</span></a></h3><p><strong>答：</strong></p><p><strong>Filter 链执行顺序：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Filter1 前置 → Filter2 前置 → Servlet → Filter2 后置 → Filter1 后置</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>顺序规则：</strong></p><ul><li>按照 @WebFilter 注解顺序</li><li>或 web.xml 配置顺序</li></ul><hr><h2 id="五、jsp" tabindex="-1"><a class="header-anchor" href="#五、jsp"><span>五、JSP</span></a></h2><h3 id="_11-jsp的本质是什么" tabindex="-1"><a class="header-anchor" href="#_11-jsp的本质是什么"><span>11. JSP的本质是什么？</span></a></h3><p><strong>答：</strong></p><p><strong>JSP 本质是 Servlet。</strong></p><p><strong>执行过程：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">JSP → 翻译成 Servlet.java → 编译成 .class → 执行</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="_12-jsp九大内置对象" tabindex="-1"><a class="header-anchor" href="#_12-jsp九大内置对象"><span>12. JSP九大内置对象？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>对象</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>request</td><td>HttpServletRequest</td><td>请求对象</td></tr><tr><td>response</td><td>HttpServletResponse</td><td>响应对象</td></tr><tr><td>session</td><td>HttpSession</td><td>会话对象</td></tr><tr><td>application</td><td>ServletContext</td><td>应用对象</td></tr><tr><td>out</td><td>JspWriter</td><td>输出对象</td></tr><tr><td>pageContext</td><td>PageContext</td><td>页面上下文</td></tr><tr><td>config</td><td>ServletConfig</td><td>配置对象</td></tr><tr><td>page</td><td>Object</td><td>当前页面</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象</td></tr></tbody></table><hr><h3 id="_13-jsp四大域对象" tabindex="-1"><a class="header-anchor" href="#_13-jsp四大域对象"><span>13. JSP四大域对象？</span></a></h3><p><strong>答：</strong></p><p><strong>范围从小到大：</strong></p><ol><li><strong>pageContext</strong>：当前页面</li><li><strong>request</strong>：一次请求</li><li><strong>session</strong>：一次会话</li><li><strong>application</strong>：整个应用</li></ol><p><strong>使用原则：</strong> 能用小的就不用大的。</p><hr><h2 id="六、综合题" tabindex="-1"><a class="header-anchor" href="#六、综合题"><span>六、综合题</span></a></h2><h3 id="_14-servletconfig和servletcontext的区别" tabindex="-1"><a class="header-anchor" href="#_14-servletconfig和servletcontext的区别"><span>14. ServletConfig和ServletContext的区别？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>特性</th><th>ServletConfig</th><th>ServletContext</th></tr></thead><tbody><tr><td>作用范围</td><td>单个 Servlet</td><td>整个应用</td></tr><tr><td>获取参数</td><td>Servlet 初始化参数</td><td>全局初始化参数</td></tr><tr><td>生命周期</td><td>与 Servlet 相同</td><td>与应用相同</td></tr></tbody></table><hr><h3 id="_15-forward和include的区别" tabindex="-1"><a class="header-anchor" href="#_15-forward和include的区别"><span>15. forward和include的区别？</span></a></h3><p><strong>答：</strong></p><table><thead><tr><th>特性</th><th>forward</th><th>include</th></tr></thead><tbody><tr><td>跳转</td><td>完全跳转</td><td>包含其他资源</td></tr><tr><td>响应</td><td>目标资源生成</td><td>当前和目标共同生成</td></tr><tr><td>继续执行</td><td>否</td><td>是</td></tr></tbody></table><hr><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结"><span>七、总结</span></a></h2><h3 id="高频考点" tabindex="-1"><a class="header-anchor" href="#高频考点"><span>高频考点</span></a></h3><p>✅ <strong>必须掌握：</strong></p><ul><li>Servlet 生命周期</li><li>请求转发 vs 重定向</li><li>Session vs Cookie</li><li>Filter 和 Listener</li><li>JSP 九大内置对象</li><li>中文乱码解决</li></ul><p>✅ <strong>加分项：</strong></p><ul><li>Servlet 线程安全</li><li>分布式 Session</li><li>MVC 模式</li></ul><h3 id="面试技巧" tabindex="-1"><a class="header-anchor" href="#面试技巧"><span>面试技巧</span></a></h3><ol><li><strong>先说核心，再展开</strong></li><li><strong>对比说明</strong>（如转发vs重定向）</li><li><strong>结合项目经验</strong></li><li><strong>说明使用场景</strong></li></ol>`,95)])])}const o=e(r,[["render",a]]),p=JSON.parse('{"path":"/tutorials/java-backend/servlet/5.Servletmianshitiji.html","title":"Servlet面试题集","lang":"zh-CN","frontmatter":{"title":"Servlet面试题集"},"headers":[{"level":2,"title":"一、基础概念","slug":"一、基础概念","link":"#一、基础概念","children":[{"level":3,"title":"1. 什么是Servlet？","slug":"_1-什么是servlet","link":"#_1-什么是servlet","children":[]},{"level":3,"title":"2. Servlet的生命周期？","slug":"_2-servlet的生命周期","link":"#_2-servlet的生命周期","children":[]},{"level":3,"title":"3. Servlet是单例还是多例？","slug":"_3-servlet是单例还是多例","link":"#_3-servlet是单例还是多例","children":[]}]},{"level":2,"title":"二、请求响应","slug":"二、请求响应","link":"#二、请求响应","children":[{"level":3,"title":"4. 请求转发和重定向的区别？","slug":"_4-请求转发和重定向的区别","link":"#_4-请求转发和重定向的区别","children":[]},{"level":3,"title":"5. 如何解决中文乱码？","slug":"_5-如何解决中文乱码","link":"#_5-如何解决中文乱码","children":[]}]},{"level":2,"title":"三、Session和Cookie","slug":"三、session和cookie","link":"#三、session和cookie","children":[{"level":3,"title":"6. Session和Cookie的区别？","slug":"_6-session和cookie的区别","link":"#_6-session和cookie的区别","children":[]},{"level":3,"title":"7. Session的工作原理？","slug":"_7-session的工作原理","link":"#_7-session的工作原理","children":[]},{"level":3,"title":"8. 如何实现分布式Session？","slug":"_8-如何实现分布式session","link":"#_8-如何实现分布式session","children":[]}]},{"level":2,"title":"四、三大组件","slug":"四、三大组件","link":"#四、三大组件","children":[{"level":3,"title":"9. Servlet三大组件是什么？","slug":"_9-servlet三大组件是什么","link":"#_9-servlet三大组件是什么","children":[]},{"level":3,"title":"10. Filter的执行顺序？","slug":"_10-filter的执行顺序","link":"#_10-filter的执行顺序","children":[]}]},{"level":2,"title":"五、JSP","slug":"五、jsp","link":"#五、jsp","children":[{"level":3,"title":"11. JSP的本质是什么？","slug":"_11-jsp的本质是什么","link":"#_11-jsp的本质是什么","children":[]},{"level":3,"title":"12. JSP九大内置对象？","slug":"_12-jsp九大内置对象","link":"#_12-jsp九大内置对象","children":[]},{"level":3,"title":"13. JSP四大域对象？","slug":"_13-jsp四大域对象","link":"#_13-jsp四大域对象","children":[]}]},{"level":2,"title":"六、综合题","slug":"六、综合题","link":"#六、综合题","children":[{"level":3,"title":"14. ServletConfig和ServletContext的区别？","slug":"_14-servletconfig和servletcontext的区别","link":"#_14-servletconfig和servletcontext的区别","children":[]},{"level":3,"title":"15. forward和include的区别？","slug":"_15-forward和include的区别","link":"#_15-forward和include的区别","children":[]}]},{"level":2,"title":"七、总结","slug":"七、总结","link":"#七、总结","children":[{"level":3,"title":"高频考点","slug":"高频考点","link":"#高频考点","children":[]},{"level":3,"title":"面试技巧","slug":"面试技巧","link":"#面试技巧","children":[]}]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/servlet/5.Servlet面试题集.md"}');export{o as comp,p as data};
