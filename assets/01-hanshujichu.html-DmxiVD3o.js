import{_ as l,c as i,d as o,e as a,f as s,b as e,w as t,r as c,o as u}from"./app-CJnNnfV_.js";const r={};function k(d,n){const p=c("RouteLink");return u(),i("div",null,[n[8]||(n[8]=o(`<h1 id="函数基础" tabindex="-1"><a class="header-anchor" href="#函数基础"><span>函数基础</span></a></h1><h2 id="一、函数的定义" tabindex="-1"><a class="header-anchor" href="#一、函数的定义"><span>一、函数的定义</span></a></h2><h3 id="_1-什么是函数" tabindex="-1"><a class="header-anchor" href="#_1-什么是函数"><span>1. 什么是函数？</span></a></h3><p>函数是组织好的、可重复使用的、用来实现特定功能的代码块。</p><p><strong>优点：</strong></p><ul><li>提高代码复用性</li><li>提高代码可维护性</li><li>提高代码可读性</li><li>降低代码耦合度</li></ul><h3 id="_2-函数的定义语法" tabindex="-1"><a class="header-anchor" href="#_2-函数的定义语法"><span>2. 函数的定义语法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> 函数名<span class="token punctuation">(</span>传入参数<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    函数体</span>
<span class="line">    <span class="token keyword">return</span> 返回值</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意事项：</strong></p><ul><li>参数不需要，可以省略</li><li>返回值不需要，可以省略</li><li>函数名要符合标识符命名规则</li></ul><p><strong>示例：</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 无参数无返回值</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 调用函数</span></span>
<span class="line">say_hello<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 输出：Hello, Python!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、函数的参数" tabindex="-1"><a class="header-anchor" href="#二、函数的参数"><span>二、函数的参数</span></a></h2><h3 id="_1-位置参数" tabindex="-1"><a class="header-anchor" href="#_1-位置参数"><span>1. 位置参数</span></a></h3><p>按照参数定义的顺序传递参数。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">greet</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;你好，我是</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，今年</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">岁&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">greet<span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>  <span class="token comment"># 你好，我是张三，今年18岁</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-关键字参数" tabindex="-1"><a class="header-anchor" href="#_2-关键字参数"><span>2. 关键字参数</span></a></h3><p>通过 &quot;键=值&quot; 形式传递参数，可以不按照顺序。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;姓名：</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，年龄：</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">，性别：</span><span class="token interpolation"><span class="token punctuation">{</span>gender<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 关键字传参（可以不按照固定顺序）</span></span>
<span class="line">user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span></span>
<span class="line">user_info<span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 可以和位置参数混用，位置参数必须在前</span></span>
<span class="line">user_info<span class="token punctuation">(</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 位置参数必须在关键字参数的前面！</p><h3 id="_3-默认参数-缺省参数" tabindex="-1"><a class="header-anchor" href="#_3-默认参数-缺省参数"><span>3. 默认参数（缺省参数）</span></a></h3><p>为参数提供默认值，调用时可不传该参数。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;姓名：</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，年龄：</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">，性别：</span><span class="token interpolation"><span class="token punctuation">{</span>gender<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">user_info<span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token comment"># 使用默认值：男</span></span>
<span class="line">user_info<span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 指定值：女</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 默认参数必须在所有位置参数之后！</p><h3 id="_4-不定长参数" tabindex="-1"><a class="header-anchor" href="#_4-不定长参数"><span>4. 不定长参数</span></a></h3><h4 id="位置传递-args" tabindex="-1"><a class="header-anchor" href="#位置传递-args"><span>位置传递（*args）</span></a></h4><p>传进的所有参数都会被args变量收集，合并为一个元组。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;tuple&#39;&gt;</span></span>
<span class="line"></span>
<span class="line">user_info<span class="token punctuation">(</span><span class="token string">&#39;TOM&#39;</span><span class="token punctuation">)</span>              <span class="token comment"># (&#39;TOM&#39;,)</span></span>
<span class="line">user_info<span class="token punctuation">(</span><span class="token string">&#39;TOM&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>          <span class="token comment"># (&#39;TOM&#39;, 18)</span></span>
<span class="line">user_info<span class="token punctuation">(</span><span class="token string">&#39;TOM&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># (&#39;TOM&#39;, 18, &#39;男&#39;)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字传递-kwargs" tabindex="-1"><a class="header-anchor" href="#关键字传递-kwargs"><span>关键字传递（**kwargs）</span></a></h4><p>所有的 &quot;键=值&quot; 会被kwargs接受，组成字典。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;dict&#39;&gt;</span></span>
<span class="line"></span>
<span class="line">user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;TOM&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">110</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># {&#39;name&#39;: &#39;TOM&#39;, &#39;age&#39;: 18, &#39;id&#39;: 110}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="混合使用" tabindex="-1"><a class="header-anchor" href="#混合使用"><span>混合使用</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;a=</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">, b=</span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;args=</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;kwargs=</span><span class="token interpolation"><span class="token punctuation">{</span>kwargs<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># a=1, b=2</span></span>
<span class="line"><span class="token comment"># args=(3, 4, 5)</span></span>
<span class="line"><span class="token comment"># kwargs={&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 18}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、函数的返回值" tabindex="-1"><a class="header-anchor" href="#三、函数的返回值"><span>三、函数的返回值</span></a></h2><h3 id="_1-return语句" tabindex="-1"><a class="header-anchor" href="#_1-return语句"><span>1. return语句</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> x <span class="token operator">+</span> y</span>
<span class="line">    <span class="token keyword">return</span> result</span>
<span class="line"></span>
<span class="line">r <span class="token operator">=</span> add<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>  <span class="token comment"># 8</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-多个返回值" tabindex="-1"><a class="header-anchor" href="#_2-多个返回值"><span>2. 多个返回值</span></a></h3><p>Python函数可以返回多个值，实际上是返回一个元组。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">calculate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    add_result <span class="token operator">=</span> x <span class="token operator">+</span> y</span>
<span class="line">    sub_result <span class="token operator">=</span> x <span class="token operator">-</span> y</span>
<span class="line">    mul_result <span class="token operator">=</span> x <span class="token operator">*</span> y</span>
<span class="line">    <span class="token keyword">return</span> add_result<span class="token punctuation">,</span> sub_result<span class="token punctuation">,</span> mul_result</span>
<span class="line"></span>
<span class="line">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> calculate<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;加法：</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 15</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;减法：</span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 5</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;乘法：</span><span class="token interpolation"><span class="token punctuation">{</span>c<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 50</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-none类型" tabindex="-1"><a class="header-anchor" href="#_3-none类型"><span>3. None类型</span></a></h3><p>如果函数没有return语句，实际上返回的是None。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">say_hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">result <span class="token operator">=</span> say_hi<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;返回值：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>        <span class="token comment"># None</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;类型：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>    <span class="token comment"># &lt;class &#39;NoneType&#39;&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>None的应用：</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">check_age</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;SUCCESS&quot;</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line">result <span class="token operator">=</span> check_age<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># not None 表示如果不是None（即有值）</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token keyword">not</span> result<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;未成年，不可以进入&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、函数的说明文档" tabindex="-1"><a class="header-anchor" href="#四、函数的说明文档"><span>四、函数的说明文档</span></a></h2><p>通过多行注释的形式对函数进行说明解释，内容写在函数体之前。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">    add函数可以接收2个参数，进行2数相加的功能</span>
<span class="line">    :param x: 形参x表示相加的其中一个数字</span>
<span class="line">    :param y: 形参y表示相加的另一个数字</span>
<span class="line">    :return: 返回值是2数相加的结果</span>
<span class="line">    &quot;&quot;&quot;</span></span>
<span class="line">    result <span class="token operator">=</span> x <span class="token operator">+</span> y</span>
<span class="line">    <span class="token keyword">return</span> result</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看函数说明文档</span></span>
<span class="line"><span class="token builtin">help</span><span class="token punctuation">(</span>add<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>add<span class="token punctuation">.</span>__doc__<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、变量作用域" tabindex="-1"><a class="header-anchor" href="#五、变量作用域"><span>五、变量作用域</span></a></h2><h3 id="_1-局部变量" tabindex="-1"><a class="header-anchor" href="#_1-局部变量"><span>1. 局部变量</span></a></h3><p>在函数内部定义的变量，只能在函数内部使用。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment"># 局部变量</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">test<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 100</span></span>
<span class="line"><span class="token comment"># print(num)  # NameError: name &#39;num&#39; is not defined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-全局变量" tabindex="-1"><a class="header-anchor" href="#_2-全局变量"><span>2. 全局变量</span></a></h3><p>在函数外部定义的变量，可以在函数内部访问。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">num <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment"># 全局变量</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># 可以访问全局变量</span></span>
<span class="line"></span>
<span class="line">test<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 100</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># 100</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-global关键字" tabindex="-1"><a class="header-anchor" href="#_3-global关键字"><span>3. global关键字</span></a></h3><p>在函数内部修改全局变量，需要使用global关键字声明。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">num <span class="token operator">=</span> <span class="token number">200</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test_a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;num的值是</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 可以访问</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test_b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">global</span> num  <span class="token comment"># 声明为全局变量</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token number">300</span>   <span class="token comment"># 修改全局变量</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;num的值是</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">test_a<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 200</span></span>
<span class="line">test_b<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 300</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;num的值是</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 300（全局变量被修改）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、实战案例-atm系统" tabindex="-1"><a class="header-anchor" href="#六、实战案例-atm系统"><span>六、实战案例：ATM系统</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 定义全局变量</span></span>
<span class="line">money <span class="token operator">=</span> <span class="token number">5000000</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 要求客户输入姓名</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的姓名：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义查询函数</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">query</span><span class="token punctuation">(</span>show_header<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> show_header<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;----------查询余额----------&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">您好，您的余额是</span><span class="token interpolation"><span class="token punctuation">{</span>money<span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义存款函数</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">saving</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">global</span> money</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;----------存款----------&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    money <span class="token operator">+=</span> num</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">您好，您存款</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">元成功&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    query<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义取款函数</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">withdrawal</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">global</span> money</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;----------取款----------&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    money <span class="token operator">-=</span> num</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">您好，您取款</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">元成功&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    query<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义主菜单函数</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;---------主菜单---------&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，您好，欢迎来到银行，请选择操作：&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;1.查询余额&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;2.存款&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;3.取款&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;4.退出&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的选择：&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            query<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入存款金额：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            saving<span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入取款金额：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            withdrawal<span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;欢迎下次再来！&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入有误，请重新输入&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动程序</span></span>
<span class="line">main<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、函数的嵌套调用" tabindex="-1"><a class="header-anchor" href="#七、函数的嵌套调用"><span>七、函数的嵌套调用</span></a></h2><p>函数内部可以调用其他函数。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">func_a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;这是函数A&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">func_b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;这是函数B&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    func_a<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 调用函数A</span></span>
<span class="line"></span>
<span class="line">func_b<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 输出：</span></span>
<span class="line"><span class="token comment"># 这是函数B</span></span>
<span class="line"><span class="token comment"># 这是函数A</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、实战练习" tabindex="-1"><a class="header-anchor" href="#八、实战练习"><span>八、实战练习</span></a></h2><h3 id="练习1-计算器" tabindex="-1"><a class="header-anchor" href="#练习1-计算器"><span>练习1：计算器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">calculator</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">,</span> operator<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">    简易计算器</span>
<span class="line">    :param num1: 第一个数字</span>
<span class="line">    :param num2: 第二个数字</span>
<span class="line">    :param operator: 运算符</span>
<span class="line">    :return: 计算结果</span>
<span class="line">    &quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">if</span> operator <span class="token operator">==</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> num1 <span class="token operator">+</span> num2</span>
<span class="line">    <span class="token keyword">elif</span> operator <span class="token operator">==</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> num1 <span class="token operator">-</span> num2</span>
<span class="line">    <span class="token keyword">elif</span> operator <span class="token operator">==</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> num1 <span class="token operator">*</span> num2</span>
<span class="line">    <span class="token keyword">elif</span> operator <span class="token operator">==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> num2 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> num1 <span class="token operator">/</span> num2</span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;除数不能为0&quot;</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;无效运算符&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>calculator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 15</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>calculator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 5</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>calculator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 50</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>calculator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-温度转换" tabindex="-1"><a class="header-anchor" href="#练习2-温度转换"><span>练习2：温度转换</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">celsius_to_fahrenheit</span><span class="token punctuation">(</span>celsius<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;摄氏度转华氏度&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">return</span> celsius <span class="token operator">*</span> <span class="token number">9</span> <span class="token operator">/</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">32</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">fahrenheit_to_celsius</span><span class="token punctuation">(</span>fahrenheit<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;华氏度转摄氏度&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>fahrenheit <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">/</span> <span class="token number">9</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;0°C = </span><span class="token interpolation"><span class="token punctuation">{</span>celsius_to_fahrenheit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">°F&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;100°C = </span><span class="token interpolation"><span class="token punctuation">{</span>celsius_to_fahrenheit<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">°F&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;32°F = </span><span class="token interpolation"><span class="token punctuation">{</span>fahrenheit_to_celsius<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">°C&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习3-判断质数" tabindex="-1"><a class="header-anchor" href="#练习3-判断质数"><span>练习3：判断质数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">is_prime</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">    判断一个数是否为质数</span>
<span class="line">    :param n: 待判断的数字</span>
<span class="line">    :return: True表示是质数，False表示不是</span>
<span class="line">    &quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>n <span class="token operator">**</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line"><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> is_prime<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">是质数&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="九、知识点总结" tabindex="-1"><a class="header-anchor" href="#九、知识点总结"><span>九、知识点总结</span></a></h2><h3 id="✅-核心要点" tabindex="-1"><a class="header-anchor" href="#✅-核心要点"><span>✅ 核心要点</span></a></h3><ol><li><strong>函数定义</strong>：def关键字定义函数</li><li><strong>参数类型</strong>：位置参数、关键字参数、默认参数、不定长参数</li><li><strong>返回值</strong>：return语句，可以返回多个值</li><li><strong>变量作用域</strong>：局部变量、全局变量、global关键字</li><li><strong>函数文档</strong>：使用三引号编写说明文档</li></ol><h3 id="📝-面试重点" tabindex="-1"><a class="header-anchor" href="#📝-面试重点"><span>📝 面试重点</span></a></h3><ul><li>位置参数和关键字参数的区别</li><li>*args和**kwargs的使用</li><li>函数可以返回多个值（实际是元组）</li><li>局部变量和全局变量的区别</li><li>global关键字的作用</li></ul><hr>`,83)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),e(p,{to:"/tutorials/python-ai/python/%E7%AC%AC01%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/07-%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88.html"},{default:t(()=>[...n[0]||(n[0]=[s("第01章-字典与集合",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),e(p,{to:"/tutorials/python-ai/python/%E7%AC%AC02%E7%AB%A0-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/02-%E5%87%BD%E6%95%B0%E8%BF%9B%E9%98%B6.html"},{default:t(()=>[...n[1]||(n[1]=[s("函数进阶",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const v=l(r,[["render",k]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di02zhang-hexinbiancheng/01-hanshujichu.html","title":"函数基础","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、函数的定义","slug":"一、函数的定义","link":"#一、函数的定义","children":[{"level":3,"title":"1. 什么是函数？","slug":"_1-什么是函数","link":"#_1-什么是函数","children":[]},{"level":3,"title":"2. 函数的定义语法","slug":"_2-函数的定义语法","link":"#_2-函数的定义语法","children":[]}]},{"level":2,"title":"二、函数的参数","slug":"二、函数的参数","link":"#二、函数的参数","children":[{"level":3,"title":"1. 位置参数","slug":"_1-位置参数","link":"#_1-位置参数","children":[]},{"level":3,"title":"2. 关键字参数","slug":"_2-关键字参数","link":"#_2-关键字参数","children":[]},{"level":3,"title":"3. 默认参数（缺省参数）","slug":"_3-默认参数-缺省参数","link":"#_3-默认参数-缺省参数","children":[]},{"level":3,"title":"4. 不定长参数","slug":"_4-不定长参数","link":"#_4-不定长参数","children":[]}]},{"level":2,"title":"三、函数的返回值","slug":"三、函数的返回值","link":"#三、函数的返回值","children":[{"level":3,"title":"1. return语句","slug":"_1-return语句","link":"#_1-return语句","children":[]},{"level":3,"title":"2. 多个返回值","slug":"_2-多个返回值","link":"#_2-多个返回值","children":[]},{"level":3,"title":"3. None类型","slug":"_3-none类型","link":"#_3-none类型","children":[]}]},{"level":2,"title":"四、函数的说明文档","slug":"四、函数的说明文档","link":"#四、函数的说明文档","children":[]},{"level":2,"title":"五、变量作用域","slug":"五、变量作用域","link":"#五、变量作用域","children":[{"level":3,"title":"1. 局部变量","slug":"_1-局部变量","link":"#_1-局部变量","children":[]},{"level":3,"title":"2. 全局变量","slug":"_2-全局变量","link":"#_2-全局变量","children":[]},{"level":3,"title":"3. global关键字","slug":"_3-global关键字","link":"#_3-global关键字","children":[]}]},{"level":2,"title":"六、实战案例：ATM系统","slug":"六、实战案例-atm系统","link":"#六、实战案例-atm系统","children":[]},{"level":2,"title":"七、函数的嵌套调用","slug":"七、函数的嵌套调用","link":"#七、函数的嵌套调用","children":[]},{"level":2,"title":"八、实战练习","slug":"八、实战练习","link":"#八、实战练习","children":[{"level":3,"title":"练习1：计算器","slug":"练习1-计算器","link":"#练习1-计算器","children":[]},{"level":3,"title":"练习2：温度转换","slug":"练习2-温度转换","link":"#练习2-温度转换","children":[]},{"level":3,"title":"练习3：判断质数","slug":"练习3-判断质数","link":"#练习3-判断质数","children":[]}]},{"level":2,"title":"九、知识点总结","slug":"九、知识点总结","link":"#九、知识点总结","children":[{"level":3,"title":"✅ 核心要点","slug":"✅-核心要点","link":"#✅-核心要点","children":[]},{"level":3,"title":"📝 面试重点","slug":"📝-面试重点","link":"#📝-面试重点","children":[]}]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第02章-核心编程/01-函数基础.md"}');export{v as comp,b as data};
