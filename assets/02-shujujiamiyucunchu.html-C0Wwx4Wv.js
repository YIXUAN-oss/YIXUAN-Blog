import{_ as l,c as o,d as i,e as s,f as a,b as p,w as u,r as e,o as k}from"./app-DeqJ5waz.js";const r={},d={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/huks-guidelines-0000001821000685-V5",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/data-security-protection-0000001774121022-V5",target:"_blank",rel:"noopener noreferrer"};function m(b,n){const t=e("ExternalLinkIcon"),c=e("RouteLink");return k(),o("div",null,[n[5]||(n[5]=i(`<h1 id="数据加密与存储" tabindex="-1"><a class="header-anchor" href="#数据加密与存储"><span>数据加密与存储</span></a></h1><blockquote><p>保护敏感数据安全</p></blockquote><h2 id="🔐-数据加密" tabindex="-1"><a class="header-anchor" href="#🔐-数据加密"><span>🔐 数据加密</span></a></h2><h3 id="huks-密钥管理" tabindex="-1"><a class="header-anchor" href="#huks-密钥管理"><span>HUKS 密钥管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> huks <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@kit.UniversalKeystoreKit&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">EncryptionService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> keyAlias<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;user_data_key&#39;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 生成密钥</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> properties<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      properties<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_ALGORITHM</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyAlg<span class="token punctuation">.</span><span class="token constant">HUKS_ALG_AES</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_KEY_SIZE</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeySize<span class="token punctuation">.</span><span class="token constant">HUKS_AES_KEY_SIZE_256</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_PURPOSE</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyPurpose<span class="token punctuation">.</span><span class="token constant">HUKS_KEY_PURPOSE_ENCRYPT</span> <span class="token operator">|</span></span>
<span class="line">                 huks<span class="token punctuation">.</span>HuksKeyPurpose<span class="token punctuation">.</span><span class="token constant">HUKS_KEY_PURPOSE_DECRYPT</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">generateKeyItem</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyAlias<span class="token punctuation">,</span> properties<span class="token punctuation">)</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;密钥生成成功&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;密钥生成失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 加密数据</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>plainText<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> textEncoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">util</span><span class="token punctuation">.</span><span class="token function">TextEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> plainData <span class="token operator">=</span> textEncoder<span class="token punctuation">.</span><span class="token function">encodeInto</span><span class="token punctuation">(</span>plainText<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> encryptOptions<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      properties<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_ALGORITHM</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyAlg<span class="token punctuation">.</span><span class="token constant">HUKS_ALG_AES</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_PURPOSE</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyPurpose<span class="token punctuation">.</span><span class="token constant">HUKS_KEY_PURPOSE_ENCRYPT</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_BLOCK_MODE</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTagBlockMode<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_BLOCK_MODE_CBC</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_PADDING</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyPadding<span class="token punctuation">.</span><span class="token constant">HUKS_PADDING_PKCS7</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      inData<span class="token operator">:</span> plainData</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">initSession</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyAlias<span class="token punctuation">,</span> encryptOptions<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> encrypted <span class="token operator">=</span> <span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">finishSession</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> encryptOptions<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">arrayBufferToBase64</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">.</span>outData<span class="token operator">!</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;加密失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 解密数据</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>encryptedText<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> encryptedData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">base64ToArrayBuffer</span><span class="token punctuation">(</span>encryptedText<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> decryptOptions<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      properties<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_ALGORITHM</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyAlg<span class="token punctuation">.</span><span class="token constant">HUKS_ALG_AES</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_PURPOSE</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyPurpose<span class="token punctuation">.</span><span class="token constant">HUKS_KEY_PURPOSE_DECRYPT</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_BLOCK_MODE</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTagBlockMode<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_BLOCK_MODE_CBC</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          tag<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksTag<span class="token punctuation">.</span><span class="token constant">HUKS_TAG_PADDING</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> huks<span class="token punctuation">.</span>HuksKeyPadding<span class="token punctuation">.</span><span class="token constant">HUKS_PADDING_PKCS7</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      inData<span class="token operator">:</span> encryptedData</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">initSession</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyAlias<span class="token punctuation">,</span> decryptOptions<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> decrypted <span class="token operator">=</span> <span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">finishSession</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> decryptOptions<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">const</span> textDecoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">util</span><span class="token punctuation">.</span><span class="token function">TextDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> textDecoder<span class="token punctuation">.</span><span class="token function">decodeWithStream</span><span class="token punctuation">(</span>decrypted<span class="token punctuation">.</span>outData<span class="token operator">!</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;解密失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 删除密钥</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">deleteKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">deleteKeyItem</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyAlias<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;密钥删除成功&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;密钥删除失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">arrayBufferToBase64</span><span class="token punctuation">(</span>buffer<span class="token operator">:</span> ArrayBuffer<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> binary <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bytes<span class="token punctuation">.</span>byteLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      binary <span class="token operator">+=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>bytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">btoa</span><span class="token punctuation">(</span>binary<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">base64ToArrayBuffer</span><span class="token punctuation">(</span>base64<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> ArrayBuffer <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> binary <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>binary<span class="token punctuation">.</span>length<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> binary<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      bytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> binary<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> bytes<span class="token punctuation">.</span>buffer</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔒-安全存储" tabindex="-1"><a class="header-anchor" href="#🔒-安全存储"><span>🔒 安全存储</span></a></h2><h3 id="加密存储用户数据" tabindex="-1"><a class="header-anchor" href="#加密存储用户数据"><span>加密存储用户数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> preferences <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@kit.ArkData&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">SecureStorage</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> prefs<span class="token operator">:</span> preferences<span class="token punctuation">.</span>Preferences <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">  <span class="token keyword">private</span> encryptionService<span class="token operator">:</span> EncryptionService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EncryptionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>prefs <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;secure_storage&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>encryptionService<span class="token punctuation">.</span><span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 安全保存数据</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">secureSet</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 加密数据</span></span>
<span class="line">      <span class="token keyword">const</span> encrypted <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>encryptionService<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 存储</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> encrypted<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;数据安全保存成功&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;安全保存失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 安全读取数据</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">secureGet</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 读取加密数据</span></span>
<span class="line">      <span class="token keyword">const</span> encrypted <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>encrypted<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 解密</span></span>
<span class="line">      <span class="token keyword">const</span> decrypted <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>encryptionService<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> decrypted</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;安全读取失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 删除数据</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">secureDelete</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefs<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;删除失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎯-实战案例-用户凭证管理" tabindex="-1"><a class="header-anchor" href="#🎯-实战案例-用户凭证管理"><span>🎯 实战案例：用户凭证管理</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct LoginPage <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> secureStorage<span class="token operator">:</span> SecureStorage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> username<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> password<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> rememberMe<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadSavedCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">loadSavedCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> savedUsername <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">secureGet</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> savedPassword <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">secureGet</span><span class="token punctuation">(</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>savedUsername <span class="token operator">&amp;&amp;</span> savedPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> savedUsername</span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> savedPassword</span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>rememberMe <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;加载凭证失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      promptAction<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;请输入用户名和密码&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 调用登录API</span></span>
<span class="line">      <span class="token keyword">const</span> success <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">performLogin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 保存凭证</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rememberMe<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">secureSet</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">)</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">secureSet</span><span class="token punctuation">(</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 清除保存的凭证</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">secureDelete</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secureStorage<span class="token punctuation">.</span><span class="token function">secureDelete</span><span class="token punctuation">(</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 跳转到首页</span></span>
<span class="line">        router<span class="token punctuation">.</span><span class="token function">replaceUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;pages/Home&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        promptAction<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;登录失败&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;登录错误:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">performLogin</span><span class="token punctuation">(</span>username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 实际的登录逻辑</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> space<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;登录&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">TextInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span> placeholder<span class="token operator">:</span> <span class="token string">&#39;用户名&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>InputType<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> value</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">TextInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span> placeholder<span class="token operator">:</span> <span class="token string">&#39;密码&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>InputType<span class="token punctuation">.</span>Password<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> value</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Checkbox</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rememberMe<span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>rememberMe <span class="token operator">=</span> checked</span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;记住密码&#39;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;登录&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;80%&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="_1-敏感数据加密" tabindex="-1"><a class="header-anchor" href="#_1-敏感数据加密"><span>1. 敏感数据加密</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 加密存储敏感数据</span></span>
<span class="line"><span class="token keyword">await</span> secureStorage<span class="token punctuation">.</span><span class="token function">secureSet</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> authToken<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> secureStorage<span class="token punctuation">.</span><span class="token function">secureSet</span><span class="token punctuation">(</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span> userPassword<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 避免明文存储</span></span>
<span class="line"><span class="token keyword">await</span> prefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> authToken<span class="token punctuation">)</span>  <span class="token comment">// 不安全</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-密钥管理" tabindex="-1"><a class="header-anchor" href="#_2-密钥管理"><span>2. 密钥管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 使用 HUKS 管理密钥</span></span>
<span class="line"><span class="token keyword">const</span> keyAlias <span class="token operator">=</span> <span class="token string">&#39;app_master_key&#39;</span></span>
<span class="line"><span class="token keyword">await</span> huks<span class="token punctuation">.</span><span class="token function">generateKeyItem</span><span class="token punctuation">(</span>keyAlias<span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 避免硬编码密钥</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">KEY</span> <span class="token operator">=</span> <span class="token string">&#39;hardcoded_key_123&#39;</span>  <span class="token comment">// 不安全</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-数据清理" tabindex="-1"><a class="header-anchor" href="#_3-数据清理"><span>3. 数据清理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 用户登出时清理敏感数据</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> secureStorage<span class="token punctuation">.</span><span class="token function">secureDelete</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">await</span> secureStorage<span class="token punctuation">.</span><span class="token function">secureDelete</span><span class="token punctuation">(</span><span class="token string">&#39;userInfo&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  router<span class="token punctuation">.</span><span class="token function">replaceUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;pages/Login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,18)),s("ul",null,[s("li",null,[s("a",d,[n[0]||(n[0]=a("通用密钥库",-1)),p(t)])]),s("li",null,[s("a",v,[n[1]||(n[1]=a("数据安全",-1)),p(t)])])]),n[6]||(n[6]=s("hr",null,null,-1)),s("p",null,[n[3]||(n[3]=s("strong",null,"下一节",-1)),n[4]||(n[4]=a(" → ",-1)),p(c,{to:"/tutorials/harmonyos-dev/14-security-privacy/03-%E7%94%9F%E7%89%A9%E8%AF%86%E5%88%AB.html"},{default:u(()=>[...n[2]||(n[2]=[a("生物识别",-1)])]),_:1})])])}const w=l(r,[["render",m]]),h=JSON.parse('{"path":"/tutorials/harmonyos-dev/14-security-privacy/02-shujujiamiyucunchu.html","title":"数据加密与存储","lang":"zh-CN","frontmatter":{"title":"数据加密与存储","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"🔐 数据加密","slug":"🔐-数据加密","link":"#🔐-数据加密","children":[{"level":3,"title":"HUKS 密钥管理","slug":"huks-密钥管理","link":"#huks-密钥管理","children":[]}]},{"level":2,"title":"🔒 安全存储","slug":"🔒-安全存储","link":"#🔒-安全存储","children":[{"level":3,"title":"加密存储用户数据","slug":"加密存储用户数据","link":"#加密存储用户数据","children":[]}]},{"level":2,"title":"🎯 实战案例：用户凭证管理","slug":"🎯-实战案例-用户凭证管理","link":"#🎯-实战案例-用户凭证管理","children":[]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"1. 敏感数据加密","slug":"_1-敏感数据加密","link":"#_1-敏感数据加密","children":[]},{"level":3,"title":"2. 密钥管理","slug":"_2-密钥管理","link":"#_2-密钥管理","children":[]},{"level":3,"title":"3. 数据清理","slug":"_3-数据清理","link":"#_3-数据清理","children":[]}]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/14-security-privacy/02-数据加密与存储.md"}');export{w as comp,h as data};
