import{_ as c,c as o,d as i,e as s,f as a,b as p,w as u,r as t,o as r}from"./app-BVgOaNeG.js";const k={},d={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-data-relationalstore-0000001820880609-V5",target:"_blank",rel:"noopener noreferrer"};function v(m,n){const e=t("ExternalLinkIcon"),l=t("RouteLink");return r(),o("div",null,[n[4]||(n[4]=i(`<h1 id="关系型数据库" tabindex="-1"><a class="header-anchor" href="#关系型数据库"><span>关系型数据库</span></a></h1><blockquote><p>使用 RDB 管理结构化数据</p></blockquote><h2 id="📚-rdb-概述" tabindex="-1"><a class="header-anchor" href="#📚-rdb-概述"><span>📚 RDB 概述</span></a></h2><p>关系型数据库（RDB）适用于存储大量结构化数据。</p><h3 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">✅ 适合</span>
<span class="line">├─ 大量数据存储</span>
<span class="line">├─ 复杂查询</span>
<span class="line">├─ 数据关联</span>
<span class="line">└─ 事务处理</span>
<span class="line"></span>
<span class="line">❌ 不适合</span>
<span class="line">└─ 简单键值对（用 Preferences）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔧-基本操作" tabindex="-1"><a class="header-anchor" href="#🔧-基本操作"><span>🔧 基本操作</span></a></h2><h3 id="创建数据库" tabindex="-1"><a class="header-anchor" href="#创建数据库"><span>创建数据库</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> relationalStore <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.relationalStore&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 数据库配置</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">STORE_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;MyDatabase.db&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  securityLevel<span class="token operator">:</span> relationalStore<span class="token punctuation">.</span>SecurityLevel<span class="token punctuation">.</span><span class="token constant">S1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建表的 SQL</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">SQL_CREATE_TABLE</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  CREATE TABLE IF NOT EXISTS users (</span>
<span class="line">    id INTEGER PRIMARY KEY AUTOINCREMENT,</span>
<span class="line">    name TEXT NOT NULL,</span>
<span class="line">    age INTEGER,</span>
<span class="line">    email TEXT UNIQUE,</span>
<span class="line">    created_at INTEGER</span>
<span class="line">  )</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获取数据库实例</span></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">await</span> relationalStore<span class="token punctuation">.</span><span class="token function">getRdbStore</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token constant">STORE_CONFIG</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建表</span></span>
<span class="line"><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span><span class="token constant">SQL_CREATE_TABLE</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入数据" tabindex="-1"><a class="header-anchor" href="#插入数据"><span>插入数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 插入单条</span></span>
<span class="line"><span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span></span>
<span class="line">  email<span class="token operator">:</span> <span class="token string">&#39;alice@example.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  created_at<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> rowId <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> valueBucket<span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;插入成功，ID:&#39;</span><span class="token punctuation">,</span> rowId<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 批量插入</span></span>
<span class="line"><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> email<span class="token operator">:</span> <span class="token string">&#39;bob@example.com&#39;</span><span class="token punctuation">,</span> created_at<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span> email<span class="token operator">:</span> <span class="token string">&#39;charlie@example.com&#39;</span><span class="token punctuation">,</span> created_at<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> user <span class="token keyword">of</span> users<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据"><span>查询数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 查询所有</span></span>
<span class="line"><span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> resultSet <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">goToNextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  users<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    id<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    name<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    age<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    email<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;查询结果:&#39;</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 条件查询</span></span>
<span class="line"><span class="token keyword">const</span> predicates2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span></span>
<span class="line">predicates2<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> resultSet2 <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  age<span class="token operator">:</span> <span class="token number">26</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span></span>
<span class="line">predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>valueBucket<span class="token punctuation">,</span> predicates<span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;更新行数:&#39;</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span></span>
<span class="line">predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除行数:&#39;</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🎯-实战案例" tabindex="-1"><a class="header-anchor" href="#🎯-实战案例"><span>🎯 实战案例</span></a></h2><h3 id="笔记应用数据库" tabindex="-1"><a class="header-anchor" href="#笔记应用数据库"><span>笔记应用数据库</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> relationalStore <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.relationalStore&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">NotesDatabase</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> store<span class="token operator">:</span> relationalStore<span class="token punctuation">.</span>RdbStore</span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> <span class="token string">&#39;notes.db&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      securityLevel<span class="token operator">:</span> relationalStore<span class="token punctuation">.</span>SecurityLevel<span class="token punctuation">.</span><span class="token constant">S1</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>store <span class="token operator">=</span> <span class="token keyword">await</span> relationalStore<span class="token punctuation">.</span><span class="token function">getRdbStore</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> config<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createTables</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">createTables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建笔记表</span></span>
<span class="line">    <span class="token keyword">const</span> sqlCreateNotes <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">      CREATE TABLE IF NOT EXISTS notes (</span>
<span class="line">        id INTEGER PRIMARY KEY AUTOINCREMENT,</span>
<span class="line">        title TEXT NOT NULL,</span>
<span class="line">        content TEXT,</span>
<span class="line">        category_id INTEGER,</span>
<span class="line">        created_at INTEGER,</span>
<span class="line">        updated_at INTEGER,</span>
<span class="line">        FOREIGN KEY (category_id) REFERENCES categories(id)</span>
<span class="line">      )</span>
<span class="line">    </span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 创建分类表</span></span>
<span class="line">    <span class="token keyword">const</span> sqlCreateCategories <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">      CREATE TABLE IF NOT EXISTS categories (</span>
<span class="line">        id INTEGER PRIMARY KEY AUTOINCREMENT,</span>
<span class="line">        name TEXT NOT NULL UNIQUE,</span>
<span class="line">        color TEXT</span>
<span class="line">      )</span>
<span class="line">    </span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span>sqlCreateNotes<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span>sqlCreateCategories<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 添加笔记</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">addNote</span><span class="token punctuation">(</span>note<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> categoryId<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      title<span class="token operator">:</span> note<span class="token punctuation">.</span>title<span class="token punctuation">,</span></span>
<span class="line">      content<span class="token operator">:</span> note<span class="token punctuation">.</span>content<span class="token punctuation">,</span></span>
<span class="line">      category_id<span class="token operator">:</span> note<span class="token punctuation">.</span>categoryId <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">      created_at<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      updated_at<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;notes&#39;</span><span class="token punctuation">,</span> valueBucket<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取所有笔记</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getAllNotes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;notes&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    predicates<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token string">&#39;updated_at&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> resultSet <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> notes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">goToNextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      notes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        id<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        title<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        content<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        categoryId<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        createdAt<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        updatedAt<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;updated_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> notes</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 按分类获取笔记</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getNotesByCategory</span><span class="token punctuation">(</span>categoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;notes&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">,</span> categoryId<span class="token punctuation">)</span></span>
<span class="line">    predicates<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token string">&#39;updated_at&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> resultSet <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// ... 处理结果</span></span>
<span class="line">    resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 搜索笔记</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">searchNotes</span><span class="token punctuation">(</span>keyword<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;notes&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    predicates<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">%</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keyword<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">%</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keyword<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> resultSet <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// ... 处理结果</span></span>
<span class="line">    resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 更新笔记</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">updateNote</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> updates<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> content<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token operator">...</span>updates<span class="token punctuation">,</span></span>
<span class="line">      updated_at<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;notes&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>valueBucket<span class="token punctuation">,</span> predicates<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 删除笔记</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">deleteNote</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;notes&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 添加分类</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">addCategory</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> name<span class="token punctuation">,</span></span>
<span class="line">      color<span class="token operator">:</span> color</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;categories&#39;</span><span class="token punctuation">,</span> valueBucket<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 获取所有分类</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getAllCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&#39;categories&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> resultSet <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> categories <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">goToNextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      categories<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        id<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        name<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        color<span class="token operator">:</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> categories</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct NotesApp <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> notesDb<span class="token operator">:</span> NotesDatabase <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotesDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> notes<span class="token operator">:</span> Note<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>notesDb<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNotes</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">loadNotes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>notes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>notesDb<span class="token punctuation">.</span><span class="token function">getAllNotes</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">addNote</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>notesDb<span class="token punctuation">.</span><span class="token function">addNote</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      title<span class="token operator">:</span> <span class="token string">&#39;新笔记&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      content<span class="token operator">:</span> <span class="token string">&#39;笔记内容&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNotes</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>notes<span class="token punctuation">,</span> <span class="token punctuation">(</span>note<span class="token operator">:</span> Note<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span>note<span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      </span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;添加笔记&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addNote</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="💡-最佳实践" tabindex="-1"><a class="header-anchor" href="#💡-最佳实践"><span>💡 最佳实践</span></a></h2><h3 id="_1-使用事务" tabindex="-1"><a class="header-anchor" href="#_1-使用事务"><span>1. 使用事务</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> user1<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> user2<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;事务失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-及时关闭-resultset" tabindex="-1"><a class="header-anchor" href="#_2-及时关闭-resultset"><span>2. 及时关闭 ResultSet</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// ✅ 使用完立即关闭</span></span>
<span class="line"><span class="token keyword">const</span> resultSet <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 处理数据</span></span>
<span class="line">resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ❌ 忘记关闭会导致内存泄漏</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用索引" tabindex="-1"><a class="header-anchor" href="#_3-使用索引"><span>3. 使用索引</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 创建索引提高查询性能</span></span>
<span class="line"><span class="token keyword">const</span> sqlCreateIndex <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  CREATE INDEX IF NOT EXISTS idx_email ON users(email)</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span>sqlCreateIndex<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2>`,28)),s("ul",null,[s("li",null,[s("a",d,[n[0]||(n[0]=a("RDB 官方文档",-1)),p(e)])])]),n[5]||(n[5]=s("hr",null,null,-1)),s("p",null,[n[2]||(n[2]=s("strong",null,"下一节",-1)),n[3]||(n[3]=a(" → ",-1)),p(l,{to:"/tutorials/harmonyos-dev/07-data-management/03-%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E6%9C%8D%E5%8A%A1.html"},{default:u(()=>[...n[1]||(n[1]=[a("分布式数据服务",-1)])]),_:1})])])}const g=c(k,[["render",v]]),y=JSON.parse('{"path":"/tutorials/harmonyos-dev/07-data-management/02-guanxixingshujuku.html","title":"关系型数据库","lang":"zh-CN","frontmatter":{"title":"关系型数据库","date":"2025-01-22T00:00:00.000Z"},"headers":[{"level":2,"title":"📚 RDB 概述","slug":"📚-rdb-概述","link":"#📚-rdb-概述","children":[{"level":3,"title":"适用场景","slug":"适用场景","link":"#适用场景","children":[]}]},{"level":2,"title":"🔧 基本操作","slug":"🔧-基本操作","link":"#🔧-基本操作","children":[{"level":3,"title":"创建数据库","slug":"创建数据库","link":"#创建数据库","children":[]},{"level":3,"title":"插入数据","slug":"插入数据","link":"#插入数据","children":[]},{"level":3,"title":"查询数据","slug":"查询数据","link":"#查询数据","children":[]},{"level":3,"title":"更新数据","slug":"更新数据","link":"#更新数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]}]},{"level":2,"title":"🎯 实战案例","slug":"🎯-实战案例","link":"#🎯-实战案例","children":[{"level":3,"title":"笔记应用数据库","slug":"笔记应用数据库","link":"#笔记应用数据库","children":[]}]},{"level":2,"title":"💡 最佳实践","slug":"💡-最佳实践","link":"#💡-最佳实践","children":[{"level":3,"title":"1. 使用事务","slug":"_1-使用事务","link":"#_1-使用事务","children":[]},{"level":3,"title":"2. 及时关闭 ResultSet","slug":"_2-及时关闭-resultset","link":"#_2-及时关闭-resultset","children":[]},{"level":3,"title":"3. 使用索引","slug":"_3-使用索引","link":"#_3-使用索引","children":[]}]},{"level":2,"title":"📚 参考资源","slug":"📚-参考资源","link":"#📚-参考资源","children":[]}],"git":{"createdTime":1761123387000,"updatedTime":1761123387000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/harmonyos-dev/07-data-management/02-关系型数据库.md"}');export{g as comp,y as data};
