import{_ as n,c as a,d as e,o as p}from"./app-sriCtWWE.js";const t={};function l(i,s){return p(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="缓存机制" tabindex="-1"><a class="header-anchor" href="#缓存机制"><span>缓存机制</span></a></h1><h2 id="一、缓存概述" tabindex="-1"><a class="header-anchor" href="#一、缓存概述"><span>一、缓存概述</span></a></h2><h3 id="_1-1-什么是缓存" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是缓存"><span>1.1 什么是缓存？</span></a></h3><p><strong>缓存</strong>：将数据存储在内存中，减少数据库访问次数，提高查询性能。</p><p><strong>MyBatis 缓存层级：</strong></p><ul><li><strong>一级缓存</strong>：SqlSession 级别（默认开启）</li><li><strong>二级缓存</strong>：Mapper 级别（需要配置）</li></ul><h3 id="_1-2-缓存作用" tabindex="-1"><a class="header-anchor" href="#_1-2-缓存作用"><span>1.2 缓存作用</span></a></h3><ul><li>✅ 减少数据库访问</li><li>✅ 提高查询性能</li><li>✅ 降低数据库压力</li></ul><hr><h2 id="二、一级缓存" tabindex="-1"><a class="header-anchor" href="#二、一级缓存"><span>二、一级缓存</span></a></h2><h3 id="_2-1-一级缓存特点" tabindex="-1"><a class="header-anchor" href="#_2-1-一级缓存特点"><span>2.1 一级缓存特点</span></a></h3><table><thead><tr><th>特性</th><th>说明</th></tr></thead><tbody><tr><td><strong>级别</strong></td><td>SqlSession 级别</td></tr><tr><td><strong>作用域</strong></td><td>同一个 SqlSession</td></tr><tr><td><strong>默认</strong></td><td>默认开启</td></tr><tr><td><strong>存储</strong></td><td>存储在内存（HashMap）</td></tr><tr><td><strong>失效</strong></td><td>SqlSession 关闭或清空</td></tr></tbody></table><h3 id="_2-2-一级缓存工作流程" tabindex="-1"><a class="header-anchor" href="#_2-2-一级缓存工作流程"><span>2.2 一级缓存工作流程</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 第一次查询 ID=1</span>
<span class="line">   ↓</span>
<span class="line">2. 查询数据库</span>
<span class="line">   ↓</span>
<span class="line">3. 结果放入一级缓存</span>
<span class="line">   ↓</span>
<span class="line">4. 第二次查询 ID=1</span>
<span class="line">   ↓</span>
<span class="line">5. 直接从缓存获取（不查数据库）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-一级缓存示例" tabindex="-1"><a class="header-anchor" href="#_2-3-一级缓存示例"><span>2.3 一级缓存示例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFirstCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 第一次查询</span></span>
<span class="line">    <span class="token class-name">User</span> user1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;第一次查询：&quot;</span> <span class="token operator">+</span> user1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 第二次查询（从缓存获取，不查数据库）</span></span>
<span class="line">    <span class="token class-name">User</span> user2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;第二次查询：&quot;</span> <span class="token operator">+</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user1 <span class="token operator">==</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true（同一个对象）</span></span>
<span class="line">    </span>
<span class="line">    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">执行SQL：SELECT * FROM user WHERE id = 1</span>
<span class="line">第一次查询：User(id=1, username=张三)</span>
<span class="line">第二次查询：User(id=1, username=张三)</span>
<span class="line">true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-一级缓存失效场景" tabindex="-1"><a class="header-anchor" href="#_2-4-一级缓存失效场景"><span>2.4 一级缓存失效场景</span></a></h3><p><strong>场景1：不同的 SqlSession</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">SqlSession</span> session1 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">User</span> user1 <span class="token operator">=</span> session1<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">session1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SqlSession</span> session2 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">User</span> user2 <span class="token operator">=</span> session2<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 查数据库</span></span>
<span class="line">session2<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景2：同一个 SqlSession，不同的查询条件</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">SqlSession</span> session <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">User</span> user1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 查数据库</span></span>
<span class="line"><span class="token class-name">User</span> user2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 查数据库（不同ID）</span></span>
<span class="line"></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景3：执行了增删改操作</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">SqlSession</span> session <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">User</span> user1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 查数据库</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行更新操作，缓存失效</span></span>
<span class="line">mapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">User</span> user2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 再次查数据库</span></span>
<span class="line"></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景4：手动清空缓存</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">SqlSession</span> session <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">User</span> user1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 查数据库</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 清空缓存</span></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">clearCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">User</span> user2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 再次查数据库</span></span>
<span class="line"></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="三、二级缓存" tabindex="-1"><a class="header-anchor" href="#三、二级缓存"><span>三、二级缓存</span></a></h2><h3 id="_3-1-二级缓存特点" tabindex="-1"><a class="header-anchor" href="#_3-1-二级缓存特点"><span>3.1 二级缓存特点</span></a></h3><table><thead><tr><th>特性</th><th>说明</th></tr></thead><tbody><tr><td><strong>级别</strong></td><td>Mapper 级别</td></tr><tr><td><strong>作用域</strong></td><td>同一个 Mapper 的所有 SqlSession</td></tr><tr><td><strong>默认</strong></td><td>需要手动开启</td></tr><tr><td><strong>存储</strong></td><td>序列化到硬盘或内存</td></tr><tr><td><strong>失效</strong></td><td>执行增删改操作</td></tr></tbody></table><h3 id="_3-2-开启二级缓存" tabindex="-1"><a class="header-anchor" href="#_3-2-开启二级缓存"><span>3.2 开启二级缓存</span></a></h3><p><strong>1. 全局配置（mybatis-config.xml）</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cacheEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. Mapper XML 配置</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.mapper.UserMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- 开启二级缓存 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectById<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        SELECT * FROM user WHERE id = #{id}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 实体类实现 Serializable</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-cache-标签属性" tabindex="-1"><a class="header-anchor" href="#_3-3-cache-标签属性"><span>3.3 cache 标签属性</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span></span>
<span class="line">    <span class="token attr-name">eviction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LRU<span class="token punctuation">&quot;</span></span>          <span class="token attr-name">&lt;!--</span> <span class="token attr-name">缓存策略</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    flushInterval=&quot;60000&quot;   <span class="token comment">&lt;!-- 刷新间隔（毫秒） --&gt;</span></span>
<span class="line">    size=&quot;1024&quot;             <span class="token comment">&lt;!-- 缓存大小 --&gt;</span></span>
<span class="line">    readOnly=&quot;false&quot;/&gt;      <span class="token comment">&lt;!-- 是否只读 --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>eviction 缓存策略：</strong></p><ul><li><code>LRU</code>（默认）- 最近最少使用</li><li><code>FIFO</code> - 先进先出</li><li><code>SOFT</code> - 软引用</li><li><code>WEAK</code> - 弱引用</li></ul><h3 id="_3-4-二级缓存示例" tabindex="-1"><a class="header-anchor" href="#_3-4-二级缓存示例"><span>3.4 二级缓存示例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSecondCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 第一个 SqlSession</span></span>
<span class="line">    <span class="token class-name">SqlSession</span> session1 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">User</span> user1 <span class="token operator">=</span> session1<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;第一次查询：&quot;</span> <span class="token operator">+</span> user1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    session1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 必须关闭，数据才会写入二级缓存</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 第二个 SqlSession</span></span>
<span class="line">    <span class="token class-name">SqlSession</span> session2 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">User</span> user2 <span class="token operator">=</span> session2<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;第二次查询：&quot;</span> <span class="token operator">+</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 从二级缓存获取</span></span>
<span class="line">    session2<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">执行SQL：SELECT * FROM user WHERE id = 1</span>
<span class="line">第一次查询：User(id=1, username=张三)</span>
<span class="line">第二次查询：User(id=1, username=张三)  // 没有执行SQL</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-二级缓存失效场景" tabindex="-1"><a class="header-anchor" href="#_3-5-二级缓存失效场景"><span>3.5 二级缓存失效场景</span></a></h3><p><strong>场景1：执行了增删改操作</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">SqlSession</span> session1 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">session1<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 查数据库</span></span>
<span class="line">session1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SqlSession</span> session2 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">session2<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 更新操作</span></span>
<span class="line">session2<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">session2<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SqlSession</span> session3 <span class="token operator">=</span> <span class="token class-name">SqlSessionUtil</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">session3<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 再次查数据库</span></span>
<span class="line">session3<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景2：不同的 Mapper</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// UserMapper 和 OrderMapper 是不同的 Mapper</span></span>
<span class="line"><span class="token comment">// 各自有独立的二级缓存</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、缓存查询顺序" tabindex="-1"><a class="header-anchor" href="#四、缓存查询顺序"><span>四、缓存查询顺序</span></a></h2><h3 id="_4-1-查询顺序" tabindex="-1"><a class="header-anchor" href="#_4-1-查询顺序"><span>4.1 查询顺序</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. 先查二级缓存（Mapper 级别）</span>
<span class="line">   ↓</span>
<span class="line">2. 再查一级缓存（SqlSession 级别）</span>
<span class="line">   ↓</span>
<span class="line">3. 查询数据库</span>
<span class="line">   ↓</span>
<span class="line">4. 结果放入一级缓存</span>
<span class="line">   ↓</span>
<span class="line">5. SqlSession 关闭后，放入二级缓存</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-流程图" tabindex="-1"><a class="header-anchor" href="#_4-2-流程图"><span>4.2 流程图</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">用户查询</span>
<span class="line">   ↓</span>
<span class="line">二级缓存有？ → 是 → 返回结果</span>
<span class="line">   ↓ 否</span>
<span class="line">一级缓存有？ → 是 → 返回结果</span>
<span class="line">   ↓ 否</span>
<span class="line">查询数据库</span>
<span class="line">   ↓</span>
<span class="line">放入一级缓存</span>
<span class="line">   ↓</span>
<span class="line">返回结果</span>
<span class="line">   ↓</span>
<span class="line">SqlSession关闭</span>
<span class="line">   ↓</span>
<span class="line">放入二级缓存</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、整合第三方缓存-redis" tabindex="-1"><a class="header-anchor" href="#五、整合第三方缓存-redis"><span>五、整合第三方缓存（Redis）</span></a></h2><h3 id="_5-1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_5-1-添加依赖"><span>5.1 添加依赖</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.caches<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0-beta2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-配置-redis" tabindex="-1"><a class="header-anchor" href="#_5-2-配置-redis"><span>5.2 配置 Redis</span></a></h3><p><strong>redis.properties：</strong></p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">redis.host</span><span class="token punctuation">=</span><span class="token value attr-value">localhost</span></span>
<span class="line"><span class="token key attr-name">redis.port</span><span class="token punctuation">=</span><span class="token value attr-value">6379</span></span>
<span class="line"><span class="token key attr-name">redis.connectionTimeout</span><span class="token punctuation">=</span><span class="token value attr-value">5000</span></span>
<span class="line"><span class="token key attr-name">redis.password</span><span class="token punctuation">=</span></span>
<span class="line"><span class="token key attr-name">redis.database</span><span class="token punctuation">=</span><span class="token value attr-value">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-mapper-配置" tabindex="-1"><a class="header-anchor" href="#_5-3-mapper-配置"><span>5.3 Mapper 配置</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.mapper.UserMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- 使用 Redis 缓存 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.caches.redis.RedisCache<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectById<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        SELECT * FROM user WHERE id = #{id}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、缓存使用建议" tabindex="-1"><a class="header-anchor" href="#六、缓存使用建议"><span>六、缓存使用建议</span></a></h2><h3 id="_6-1-适用场景" tabindex="-1"><a class="header-anchor" href="#_6-1-适用场景"><span>6.1 适用场景</span></a></h3><p><strong>适合使用缓存：</strong></p><ul><li>✅ 查询频繁</li><li>✅ 数据更新少</li><li>✅ 数据一致性要求不高</li><li>✅ 查询结果固定</li></ul><p><strong>不适合使用缓存：</strong></p><ul><li>❌ 实时性要求高</li><li>❌ 数据频繁更新</li><li>❌ 多表关联复杂</li></ul><h3 id="_6-2-最佳实践" tabindex="-1"><a class="header-anchor" href="#_6-2-最佳实践"><span>6.2 最佳实践</span></a></h3><p><strong>1. 一级缓存</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">默认开启，无需配置</span>
<span class="line">注意 SqlSession 生命周期</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 二级缓存</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">根据业务场景决定是否开启</span>
<span class="line">实体类必须实现 Serializable</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 分布式环境</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">不要使用 MyBatis 二级缓存</span>
<span class="line">使用 Redis 等分布式缓存</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 缓存穿透</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">使用布隆过滤器</span>
<span class="line">缓存空值</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结"><span>七、总结</span></a></h2><p>✅ <strong>本章学习内容：</strong></p><ul><li>一级缓存（SqlSession 级别）</li><li>二级缓存（Mapper 级别）</li><li>缓存失效场景</li><li>缓存查询顺序</li><li>整合 Redis</li><li>缓存使用建议</li></ul><p>✅ <strong>核心要点：</strong></p><ul><li>一级缓存默认开启，SqlSession 级别</li><li>二级缓存需要配置，Mapper 级别</li><li>先查二级缓存，再查一级缓存，最后查数据库</li><li>分布式环境使用 Redis</li></ul><p><strong>下一章预告：</strong> 我们将学习 MyBatis 注解开发。</p>`,89)])])}const o=n(t,[["render",l]]),u=JSON.parse('{"path":"/tutorials/java-backend/mybatis/6.huancunjizhi.html","title":"缓存机制","lang":"zh-CN","frontmatter":{"title":"缓存机制"},"headers":[{"level":2,"title":"一、缓存概述","slug":"一、缓存概述","link":"#一、缓存概述","children":[{"level":3,"title":"1.1 什么是缓存？","slug":"_1-1-什么是缓存","link":"#_1-1-什么是缓存","children":[]},{"level":3,"title":"1.2 缓存作用","slug":"_1-2-缓存作用","link":"#_1-2-缓存作用","children":[]}]},{"level":2,"title":"二、一级缓存","slug":"二、一级缓存","link":"#二、一级缓存","children":[{"level":3,"title":"2.1 一级缓存特点","slug":"_2-1-一级缓存特点","link":"#_2-1-一级缓存特点","children":[]},{"level":3,"title":"2.2 一级缓存工作流程","slug":"_2-2-一级缓存工作流程","link":"#_2-2-一级缓存工作流程","children":[]},{"level":3,"title":"2.3 一级缓存示例","slug":"_2-3-一级缓存示例","link":"#_2-3-一级缓存示例","children":[]},{"level":3,"title":"2.4 一级缓存失效场景","slug":"_2-4-一级缓存失效场景","link":"#_2-4-一级缓存失效场景","children":[]}]},{"level":2,"title":"三、二级缓存","slug":"三、二级缓存","link":"#三、二级缓存","children":[{"level":3,"title":"3.1 二级缓存特点","slug":"_3-1-二级缓存特点","link":"#_3-1-二级缓存特点","children":[]},{"level":3,"title":"3.2 开启二级缓存","slug":"_3-2-开启二级缓存","link":"#_3-2-开启二级缓存","children":[]},{"level":3,"title":"3.3 cache 标签属性","slug":"_3-3-cache-标签属性","link":"#_3-3-cache-标签属性","children":[]},{"level":3,"title":"3.4 二级缓存示例","slug":"_3-4-二级缓存示例","link":"#_3-4-二级缓存示例","children":[]},{"level":3,"title":"3.5 二级缓存失效场景","slug":"_3-5-二级缓存失效场景","link":"#_3-5-二级缓存失效场景","children":[]}]},{"level":2,"title":"四、缓存查询顺序","slug":"四、缓存查询顺序","link":"#四、缓存查询顺序","children":[{"level":3,"title":"4.1 查询顺序","slug":"_4-1-查询顺序","link":"#_4-1-查询顺序","children":[]},{"level":3,"title":"4.2 流程图","slug":"_4-2-流程图","link":"#_4-2-流程图","children":[]}]},{"level":2,"title":"五、整合第三方缓存（Redis）","slug":"五、整合第三方缓存-redis","link":"#五、整合第三方缓存-redis","children":[{"level":3,"title":"5.1 添加依赖","slug":"_5-1-添加依赖","link":"#_5-1-添加依赖","children":[]},{"level":3,"title":"5.2 配置 Redis","slug":"_5-2-配置-redis","link":"#_5-2-配置-redis","children":[]},{"level":3,"title":"5.3 Mapper 配置","slug":"_5-3-mapper-配置","link":"#_5-3-mapper-配置","children":[]}]},{"level":2,"title":"六、缓存使用建议","slug":"六、缓存使用建议","link":"#六、缓存使用建议","children":[{"level":3,"title":"6.1 适用场景","slug":"_6-1-适用场景","link":"#_6-1-适用场景","children":[]},{"level":3,"title":"6.2 最佳实践","slug":"_6-2-最佳实践","link":"#_6-2-最佳实践","children":[]}]},{"level":2,"title":"七、总结","slug":"七、总结","link":"#七、总结","children":[]}],"git":{"createdTime":1760959407000,"updatedTime":1760959407000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/java-backend/mybatis/6.缓存机制.md"}');export{o as comp,u as data};
