import{_ as l,c as i,d as o,e as a,f as s,b as e,w as t,r as c,o as u}from"./app-378p-rnH.js";const r={};function d(k,n){const p=c("RouteLink");return u(),i("div",null,[n[8]||(n[8]=o(`<h1 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理"><span>异常处理</span></a></h1><h2 id="一、异常的概念" tabindex="-1"><a class="header-anchor" href="#一、异常的概念"><span>一、异常的概念</span></a></h2><h3 id="_1-什么是异常" tabindex="-1"><a class="header-anchor" href="#_1-什么是异常"><span>1. 什么是异常？</span></a></h3><p>异常是程序运行过程中发生的错误，会导致程序中断执行。</p><p><strong>常见异常类型：</strong></p><ul><li><code>ZeroDivisionError</code>：除零错误</li><li><code>TypeError</code>：类型错误</li><li><code>ValueError</code>：值错误</li><li><code>IndexError</code>：索引错误</li><li><code>KeyError</code>：键错误</li><li><code>FileNotFoundError</code>：文件未找到错误</li><li><code>AttributeError</code>：属性错误</li></ul><h3 id="_2-异常示例" tabindex="-1"><a class="header-anchor" href="#_2-异常示例"><span>2. 异常示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ZeroDivisionError</span></span>
<span class="line">result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">0</span>  <span class="token comment"># ZeroDivisionError: division by zero</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># TypeError</span></span>
<span class="line">result <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span> <span class="token operator">+</span> <span class="token number">5</span>  <span class="token comment"># TypeError: can only concatenate str (not &quot;int&quot;) to str</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ValueError</span></span>
<span class="line">num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># ValueError: invalid literal for int()</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># IndexError</span></span>
<span class="line">my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># IndexError: list index out of range</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># KeyError</span></span>
<span class="line">my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># KeyError: &#39;age&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、异常处理" tabindex="-1"><a class="header-anchor" href="#二、异常处理"><span>二、异常处理</span></a></h2><h3 id="_1-try-except基本语法" tabindex="-1"><a class="header-anchor" href="#_1-try-except基本语法"><span>1. try-except基本语法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 可能发生异常的代码</span></span>
<span class="line">    可能出错的代码</span>
<span class="line"><span class="token keyword">except</span> 异常类型<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 异常处理代码</span></span>
<span class="line">    处理异常的代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-捕获单个异常" tabindex="-1"><a class="header-anchor" href="#_2-捕获单个异常"><span>2. 捕获单个异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;结果是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：不能除以0&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-捕获多个异常" tabindex="-1"><a class="header-anchor" href="#_3-捕获多个异常"><span>3. 捕获多个异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;结果是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：不能除以0&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ValueError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：请输入有效的数字&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-捕获多个异常-简化写法" tabindex="-1"><a class="header-anchor" href="#_4-捕获多个异常-简化写法"><span>4. 捕获多个异常（简化写法）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;结果是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> <span class="token punctuation">(</span>ZeroDivisionError<span class="token punctuation">,</span> ValueError<span class="token punctuation">)</span> <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;发生错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-捕获所有异常" tabindex="-1"><a class="header-anchor" href="#_5-捕获所有异常"><span>5. 捕获所有异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 可能出错的代码</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line"><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;发生错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 不建议捕获所有异常，应该明确指定要捕获的异常类型。</p><hr><h2 id="三、try-except-else-finally" tabindex="-1"><a class="header-anchor" href="#三、try-except-else-finally"><span>三、try-except-else-finally</span></a></h2><h3 id="_1-else子句" tabindex="-1"><a class="header-anchor" href="#_1-else子句"><span>1. else子句</span></a></h3><p>如果没有发生异常，执行else子句。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：不能除以0&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ValueError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：请输入有效的数字&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;结果是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;计算成功！&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-finally子句" tabindex="-1"><a class="header-anchor" href="#_2-finally子句"><span>2. finally子句</span></a></h3><p>无论是否发生异常，都会执行finally子句。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;文件不存在&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;清理资源&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># f.close()  # 确保文件被关闭</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-完整结构" tabindex="-1"><a class="header-anchor" href="#_3-完整结构"><span>3. 完整结构</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 可能出错的代码</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：不能除以0&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ValueError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：请输入有效的数字&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;结果是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;程序执行完毕&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、抛出异常" tabindex="-1"><a class="header-anchor" href="#四、抛出异常"><span>四、抛出异常</span></a></h2><h3 id="_1-raise语句" tabindex="-1"><a class="header-anchor" href="#_1-raise语句"><span>1. raise语句</span></a></h3><p>使用<code>raise</code>语句主动抛出异常。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">divide</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> ZeroDivisionError<span class="token punctuation">(</span><span class="token string">&quot;除数不能为0&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> x <span class="token operator">/</span> y</span>
<span class="line"></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> divide<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-重新抛出异常" tabindex="-1"><a class="header-anchor" href="#_2-重新抛出异常"><span>2. 重新抛出异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> num</span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;捕获到除零错误&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">raise</span>  <span class="token comment"># 重新抛出异常</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、自定义异常" tabindex="-1"><a class="header-anchor" href="#五、自定义异常"><span>五、自定义异常</span></a></h2><h3 id="_1-创建自定义异常类" tabindex="-1"><a class="header-anchor" href="#_1-创建自定义异常类"><span>1. 创建自定义异常类</span></a></h3><p>自定义异常类应该继承自<code>Exception</code>类。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">AgeError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;年龄错误异常&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> age<span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">&quot;年龄必须在0-150之间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line">        self<span class="token punctuation">.</span>message <span class="token operator">=</span> message</span>
<span class="line">        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">.</span>message<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>message<span class="token punctuation">}</span></span><span class="token string">，您输入的年龄是：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用自定义异常</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">set_age</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> age <span class="token operator">&gt;</span> <span class="token number">150</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> AgeError<span class="token punctuation">(</span>age<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;年龄设置成功：</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    set_age<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> AgeError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-自定义异常的应用" tabindex="-1"><a class="header-anchor" href="#_2-自定义异常的应用"><span>2. 自定义异常的应用</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">InsufficientFundsError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;余额不足异常&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> balance<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>balance <span class="token operator">=</span> balance</span>
<span class="line">        self<span class="token punctuation">.</span>amount <span class="token operator">=</span> amount</span>
<span class="line">        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;余额不足！当前余额：</span><span class="token interpolation"><span class="token punctuation">{</span>balance<span class="token punctuation">}</span></span><span class="token string">，需要：</span><span class="token interpolation"><span class="token punctuation">{</span>amount<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">BankAccount</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> balance<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>balance <span class="token operator">=</span> balance</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">withdraw</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;取款&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> amount <span class="token operator">&gt;</span> self<span class="token punctuation">.</span>balance<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> InsufficientFundsError<span class="token punctuation">(</span>self<span class="token punctuation">.</span>balance<span class="token punctuation">,</span> amount<span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>balance <span class="token operator">-=</span> amount</span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;取款成功！当前余额：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>balance<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line">account <span class="token operator">=</span> BankAccount<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    account<span class="token punctuation">.</span>withdraw<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>   <span class="token comment"># 成功</span></span>
<span class="line">    account<span class="token punctuation">.</span>withdraw<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">)</span>   <span class="token comment"># 失败</span></span>
<span class="line"><span class="token keyword">except</span> InsufficientFundsError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="六、异常链" tabindex="-1"><a class="header-anchor" href="#六、异常链"><span>六、异常链</span></a></h2><h3 id="_1-异常的上下文" tabindex="-1"><a class="header-anchor" href="#_1-异常的上下文"><span>1. 异常的上下文</span></a></h3><p>使用<code>from</code>关键字保留原始异常信息。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">process_data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        result <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span><span class="token string">&quot;数据类型错误&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> e</span>
<span class="line"></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    process_data<span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> TypeError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;原因：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">.</span>__cause__<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-异常的传播" tabindex="-1"><a class="header-anchor" href="#_2-异常的传播"><span>2. 异常的传播</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    func1<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">func3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    func2<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    func3<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;捕获到除零错误&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">import</span> traceback</span>
<span class="line">    traceback<span class="token punctuation">.</span>print_exc<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 打印完整的异常堆栈</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、上下文管理器" tabindex="-1"><a class="header-anchor" href="#七、上下文管理器"><span>七、上下文管理器</span></a></h2><h3 id="_1-with语句" tabindex="-1"><a class="header-anchor" href="#_1-with语句"><span>1. with语句</span></a></h3><p><code>with</code>语句可以自动管理资源，确保资源被正确释放。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 传统方式</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用with语句（推荐）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 文件会自动关闭</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-自定义上下文管理器" tabindex="-1"><a class="header-anchor" href="#_2-自定义上下文管理器"><span>2. 自定义上下文管理器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">FileManager</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>filename <span class="token operator">=</span> filename</span>
<span class="line">        self<span class="token punctuation">.</span>mode <span class="token operator">=</span> mode</span>
<span class="line">        self<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;进入with语句时调用&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;打开文件：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>filename<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>filename<span class="token punctuation">,</span> self<span class="token punctuation">.</span>mode<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span><span class="token builtin">file</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;退出with语句时调用&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;关闭文件：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>filename<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 如果返回True，异常会被抑制</span></span>
<span class="line">        <span class="token comment"># 如果返回False或None，异常会继续传播</span></span>
<span class="line">        <span class="token keyword">if</span> exc_type <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;发生异常：</span><span class="token interpolation"><span class="token punctuation">{</span>exc_type<span class="token punctuation">.</span>__name__<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>exc_val<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> FileManager<span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-contextlib模块" tabindex="-1"><a class="header-anchor" href="#_3-contextlib模块"><span>3. contextlib模块</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">file_manager</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;上下文管理器装饰器&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">yield</span> f</span>
<span class="line">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">with</span> file_manager<span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、断言-assert" tabindex="-1"><a class="header-anchor" href="#八、断言-assert"><span>八、断言（assert）</span></a></h2><h3 id="_1-断言的使用" tabindex="-1"><a class="header-anchor" href="#_1-断言的使用"><span>1. 断言的使用</span></a></h3><p>断言用于调试，检查条件是否为真。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">divide</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">assert</span> y <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;除数不能为0&quot;</span></span>
<span class="line">    <span class="token keyword">return</span> x <span class="token operator">/</span> y</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>divide<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 5.0</span></span>
<span class="line"><span class="token comment"># print(divide(10, 0))  # AssertionError: 除数不能为0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-断言-vs-异常处理" tabindex="-1"><a class="header-anchor" href="#_2-断言-vs-异常处理"><span>2. 断言 vs 异常处理</span></a></h3><ul><li><strong>断言</strong>：用于调试，检查不应该发生的情况</li><li><strong>异常处理</strong>：用于处理可能发生的错误</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 使用断言（开发阶段）</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">calculate_average</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;列表不能为空&quot;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用异常处理（生产环境）</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">calculate_average_safe</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;列表不能为空&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="九、实战案例" tabindex="-1"><a class="header-anchor" href="#九、实战案例"><span>九、实战案例</span></a></h2><h3 id="案例1-安全的文件读取" tabindex="-1"><a class="header-anchor" href="#案例1-安全的文件读取"><span>案例1：安全的文件读取</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">read_file_safe</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;安全地读取文件&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：文件 </span><span class="token interpolation"><span class="token punctuation">{</span>filename<span class="token punctuation">}</span></span><span class="token string"> 不存在&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<span class="line">    <span class="token keyword">except</span> PermissionError<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：没有权限读取文件 </span><span class="token interpolation"><span class="token punctuation">{</span>filename<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<span class="line">    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：读取文件时发生未知错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line">content <span class="token operator">=</span> read_file_safe<span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> content<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例2-用户输入验证" tabindex="-1"><a class="header-anchor" href="#案例2-用户输入验证"><span>案例2：用户输入验证</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">get_positive_integer</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;获取正整数输入&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">            value <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> value <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;必须输入正整数&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span> value</span>
<span class="line">        <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;输入错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">，请重新输入&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line">age <span class="token operator">=</span> get_positive_integer<span class="token punctuation">(</span><span class="token string">&quot;请输入年龄：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;您的年龄是：</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例3-数据验证器" tabindex="-1"><a class="header-anchor" href="#案例3-数据验证器"><span>案例3：数据验证器</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;验证错误&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Validator</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;数据验证器&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token decorator annotation punctuation">@staticmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">validate_email</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;验证邮箱&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token string">&#39;@&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> email<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> ValidationError<span class="token punctuation">(</span><span class="token string">&quot;邮箱格式错误：缺少@符号&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token string">&#39;.&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> email<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> ValidationError<span class="token punctuation">(</span><span class="token string">&quot;邮箱格式错误：域名格式不正确&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line">    </span>
<span class="line">    <span class="token decorator annotation punctuation">@staticmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">validate_phone</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;验证手机号&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> phone<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> ValidationError<span class="token punctuation">(</span><span class="token string">&quot;手机号格式错误：只能包含数字&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">11</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> ValidationError<span class="token punctuation">(</span><span class="token string">&quot;手机号格式错误：必须是11位&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line">    </span>
<span class="line">    <span class="token decorator annotation punctuation">@staticmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">validate_age</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;验证年龄&quot;&quot;&quot;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> ValidationError<span class="token punctuation">(</span><span class="token string">&quot;年龄必须是整数&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> age <span class="token operator">&gt;</span> <span class="token number">150</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">raise</span> ValidationError<span class="token punctuation">(</span><span class="token string">&quot;年龄必须在0-150之间&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    Validator<span class="token punctuation">.</span>validate_email<span class="token punctuation">(</span><span class="token string">&quot;test@example.com&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;邮箱验证通过&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    Validator<span class="token punctuation">.</span>validate_phone<span class="token punctuation">(</span><span class="token string">&quot;13800138000&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;手机号验证通过&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    Validator<span class="token punctuation">.</span>validate_age<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;年龄验证通过&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 测试错误情况</span></span>
<span class="line">    Validator<span class="token punctuation">.</span>validate_email<span class="token punctuation">(</span><span class="token string">&quot;invalid-email&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ValidationError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;验证失败：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例4-重试机制" tabindex="-1"><a class="header-anchor" href="#案例4-重试机制"><span>案例4：重试机制</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MaxRetryError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;最大重试次数错误&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">retry</span><span class="token punctuation">(</span>max_attempts<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;重试装饰器&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">for</span> attempt <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> max_attempts <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">                    <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span>attempt<span class="token punctuation">}</span></span><span class="token string">次尝试失败：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">if</span> attempt <span class="token operator">==</span> max_attempts<span class="token punctuation">:</span></span>
<span class="line">                        <span class="token keyword">raise</span> MaxRetryError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;达到最大重试次数</span><span class="token interpolation"><span class="token punctuation">{</span>max_attempts<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> wrapper</span>
<span class="line">    <span class="token keyword">return</span> decorator</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@retry</span><span class="token punctuation">(</span>max_attempts<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">unstable_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;不稳定的函数（模拟）&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">import</span> random</span>
<span class="line">    <span class="token keyword">if</span> random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.7</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;随机错误&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&quot;成功&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> unstable_function<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> MaxRetryError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="十、异常处理最佳实践" tabindex="-1"><a class="header-anchor" href="#十、异常处理最佳实践"><span>十、异常处理最佳实践</span></a></h2><h3 id="_1-明确捕获异常" tabindex="-1"><a class="header-anchor" href="#_1-明确捕获异常"><span>1. 明确捕获异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 不推荐：捕获所有异常</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> some_function<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 推荐：明确指定异常类型</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> some_function<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;值错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> TypeError <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;类型错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-不要忽略异常" tabindex="-1"><a class="header-anchor" href="#_2-不要忽略异常"><span>2. 不要忽略异常</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 不推荐：忽略异常</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> some_function<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> Exception<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 推荐：记录异常信息</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    result <span class="token operator">=</span> some_function<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;发生错误：</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 或者使用日志记录</span></span>
<span class="line">    <span class="token comment"># logging.error(f&quot;发生错误：{e}&quot;)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-异常信息要有意义" tabindex="-1"><a class="header-anchor" href="#_3-异常信息要有意义"><span>3. 异常信息要有意义</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ❌ 不推荐：信息不明确</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;错误&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ✅ 推荐：提供详细信息</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;年龄不能为负数，您输入的是：</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-使用finally清理资源" tabindex="-1"><a class="header-anchor" href="#_4-使用finally清理资源"><span>4. 使用finally清理资源</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># ✅ 推荐：确保资源被释放</span></span>
<span class="line">f <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;文件不存在&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> f<span class="token punctuation">:</span></span>
<span class="line">        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更好的方式：使用with语句</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="十一、知识点总结" tabindex="-1"><a class="header-anchor" href="#十一、知识点总结"><span>十一、知识点总结</span></a></h2><h3 id="✅-核心要点" tabindex="-1"><a class="header-anchor" href="#✅-核心要点"><span>✅ 核心要点</span></a></h3><ol><li><strong>异常处理</strong>：try-except-else-finally结构</li><li><strong>异常类型</strong>：常见异常及其含义</li><li><strong>抛出异常</strong>：raise语句</li><li><strong>自定义异常</strong>：继承Exception类</li><li><strong>上下文管理器</strong>：with语句和__enter__/<strong>exit</strong></li><li><strong>断言</strong>：assert语句用于调试</li></ol><h3 id="📝-面试重点" tabindex="-1"><a class="header-anchor" href="#📝-面试重点"><span>📝 面试重点</span></a></h3><ul><li>try-except-else-finally的执行顺序</li><li>如何自定义异常</li><li>with语句的原理</li><li>异常链的概念</li><li>断言和异常处理的区别</li><li>异常处理的最佳实践</li></ul><hr><h2 id="十二、常见异常类型总结" tabindex="-1"><a class="header-anchor" href="#十二、常见异常类型总结"><span>十二、常见异常类型总结</span></a></h2><table><thead><tr><th>异常类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>Exception</td><td>所有异常的基类</td><td>-</td></tr><tr><td>AttributeError</td><td>属性错误</td><td>obj.nonexistent</td></tr><tr><td>IOError</td><td>输入输出错误</td><td>文件操作失败</td></tr><tr><td>IndexError</td><td>索引错误</td><td>list[100]</td></tr><tr><td>KeyError</td><td>键错误</td><td>dict[&#39;nonexistent&#39;]</td></tr><tr><td>NameError</td><td>名称错误</td><td>使用未定义的变量</td></tr><tr><td>TypeError</td><td>类型错误</td><td>&quot;str&quot; + 5</td></tr><tr><td>ValueError</td><td>值错误</td><td>int(&quot;abc&quot;)</td></tr><tr><td>ZeroDivisionError</td><td>除零错误</td><td>10 / 0</td></tr><tr><td>FileNotFoundError</td><td>文件未找到</td><td>open(&#39;nonexistent.txt&#39;)</td></tr><tr><td>ImportError</td><td>导入错误</td><td>import nonexistent</td></tr><tr><td>RuntimeError</td><td>运行时错误</td><td>一般运行时错误</td></tr></tbody></table><hr>`,99)),a("p",null,[n[2]||(n[2]=a("strong",null,"上一章：",-1)),n[3]||(n[3]=s()),e(p,{to:"/tutorials/python-ai/python/%E7%AC%AC02%E7%AB%A0-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/05-%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85.html"},{default:t(()=>[...n[0]||(n[0]=[s("模块与包",-1)])]),_:1}),n[4]||(n[4]=a("br",null,null,-1)),n[5]||(n[5]=a("strong",null,"下一章：",-1)),n[6]||(n[6]=s()),e(p,{to:"/tutorials/python-ai/python/%E7%AC%AC03%E7%AB%A0-%E8%BF%9B%E9%98%B6%E7%BC%96%E7%A8%8B/01-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C.html"},{default:t(()=>[...n[1]||(n[1]=[s("第03章-进阶编程",-1)])]),_:1}),n[7]||(n[7]=s(" →",-1))])])}const m=l(r,[["render",d]]),b=JSON.parse('{"path":"/tutorials/python-ai/python/di02zhang-hexinbiancheng/06-yichangchuli.html","title":"异常处理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、异常的概念","slug":"一、异常的概念","link":"#一、异常的概念","children":[{"level":3,"title":"1. 什么是异常？","slug":"_1-什么是异常","link":"#_1-什么是异常","children":[]},{"level":3,"title":"2. 异常示例","slug":"_2-异常示例","link":"#_2-异常示例","children":[]}]},{"level":2,"title":"二、异常处理","slug":"二、异常处理","link":"#二、异常处理","children":[{"level":3,"title":"1. try-except基本语法","slug":"_1-try-except基本语法","link":"#_1-try-except基本语法","children":[]},{"level":3,"title":"2. 捕获单个异常","slug":"_2-捕获单个异常","link":"#_2-捕获单个异常","children":[]},{"level":3,"title":"3. 捕获多个异常","slug":"_3-捕获多个异常","link":"#_3-捕获多个异常","children":[]},{"level":3,"title":"4. 捕获多个异常（简化写法）","slug":"_4-捕获多个异常-简化写法","link":"#_4-捕获多个异常-简化写法","children":[]},{"level":3,"title":"5. 捕获所有异常","slug":"_5-捕获所有异常","link":"#_5-捕获所有异常","children":[]}]},{"level":2,"title":"三、try-except-else-finally","slug":"三、try-except-else-finally","link":"#三、try-except-else-finally","children":[{"level":3,"title":"1. else子句","slug":"_1-else子句","link":"#_1-else子句","children":[]},{"level":3,"title":"2. finally子句","slug":"_2-finally子句","link":"#_2-finally子句","children":[]},{"level":3,"title":"3. 完整结构","slug":"_3-完整结构","link":"#_3-完整结构","children":[]}]},{"level":2,"title":"四、抛出异常","slug":"四、抛出异常","link":"#四、抛出异常","children":[{"level":3,"title":"1. raise语句","slug":"_1-raise语句","link":"#_1-raise语句","children":[]},{"level":3,"title":"2. 重新抛出异常","slug":"_2-重新抛出异常","link":"#_2-重新抛出异常","children":[]}]},{"level":2,"title":"五、自定义异常","slug":"五、自定义异常","link":"#五、自定义异常","children":[{"level":3,"title":"1. 创建自定义异常类","slug":"_1-创建自定义异常类","link":"#_1-创建自定义异常类","children":[]},{"level":3,"title":"2. 自定义异常的应用","slug":"_2-自定义异常的应用","link":"#_2-自定义异常的应用","children":[]}]},{"level":2,"title":"六、异常链","slug":"六、异常链","link":"#六、异常链","children":[{"level":3,"title":"1. 异常的上下文","slug":"_1-异常的上下文","link":"#_1-异常的上下文","children":[]},{"level":3,"title":"2. 异常的传播","slug":"_2-异常的传播","link":"#_2-异常的传播","children":[]}]},{"level":2,"title":"七、上下文管理器","slug":"七、上下文管理器","link":"#七、上下文管理器","children":[{"level":3,"title":"1. with语句","slug":"_1-with语句","link":"#_1-with语句","children":[]},{"level":3,"title":"2. 自定义上下文管理器","slug":"_2-自定义上下文管理器","link":"#_2-自定义上下文管理器","children":[]},{"level":3,"title":"3. contextlib模块","slug":"_3-contextlib模块","link":"#_3-contextlib模块","children":[]}]},{"level":2,"title":"八、断言（assert）","slug":"八、断言-assert","link":"#八、断言-assert","children":[{"level":3,"title":"1. 断言的使用","slug":"_1-断言的使用","link":"#_1-断言的使用","children":[]},{"level":3,"title":"2. 断言 vs 异常处理","slug":"_2-断言-vs-异常处理","link":"#_2-断言-vs-异常处理","children":[]}]},{"level":2,"title":"九、实战案例","slug":"九、实战案例","link":"#九、实战案例","children":[{"level":3,"title":"案例1：安全的文件读取","slug":"案例1-安全的文件读取","link":"#案例1-安全的文件读取","children":[]},{"level":3,"title":"案例2：用户输入验证","slug":"案例2-用户输入验证","link":"#案例2-用户输入验证","children":[]},{"level":3,"title":"案例3：数据验证器","slug":"案例3-数据验证器","link":"#案例3-数据验证器","children":[]},{"level":3,"title":"案例4：重试机制","slug":"案例4-重试机制","link":"#案例4-重试机制","children":[]}]},{"level":2,"title":"十、异常处理最佳实践","slug":"十、异常处理最佳实践","link":"#十、异常处理最佳实践","children":[{"level":3,"title":"1. 明确捕获异常","slug":"_1-明确捕获异常","link":"#_1-明确捕获异常","children":[]},{"level":3,"title":"2. 不要忽略异常","slug":"_2-不要忽略异常","link":"#_2-不要忽略异常","children":[]},{"level":3,"title":"3. 异常信息要有意义","slug":"_3-异常信息要有意义","link":"#_3-异常信息要有意义","children":[]},{"level":3,"title":"4. 使用finally清理资源","slug":"_4-使用finally清理资源","link":"#_4-使用finally清理资源","children":[]}]},{"level":2,"title":"十一、知识点总结","slug":"十一、知识点总结","link":"#十一、知识点总结","children":[{"level":3,"title":"✅ 核心要点","slug":"✅-核心要点","link":"#✅-核心要点","children":[]},{"level":3,"title":"📝 面试重点","slug":"📝-面试重点","link":"#📝-面试重点","children":[]}]},{"level":2,"title":"十二、常见异常类型总结","slug":"十二、常见异常类型总结","link":"#十二、常见异常类型总结","children":[]}],"git":{"createdTime":1761052725000,"updatedTime":1761052725000,"contributors":[{"name":"YIXUAN","email":"byyi.xuan@outlook.com","commits":1}]},"filePathRelative":"tutorials/python-ai/python/第02章-核心编程/06-异常处理.md"}');export{m as comp,b as data};
